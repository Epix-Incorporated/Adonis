<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">true</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="ModuleScript" referent="RBX5EB679845D4745ECAB25C8B7FECBFB35">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<Content name="LinkedSource"><null></null></Content>
			<string name="Name">Server-Dex</string>
			<string name="ScriptGuid">{06DF1C39-9368-46DC-A587-AD3E4F2B45E3}</string>
			<ProtectedString name="Source"><![CDATA[return function(Vargs)
	local server = Vargs.Server;
	local service = Vargs.Service;

	local dexGui = script.Dex_Explorer;
	local Deps = server.Deps;
	local Core = server.Core;
	local Admin = server.Admin;
	local Process = server.Process;
	local Settings = server.Settings;
	local Functions = server.Functions;
	local Commands = server.Commands;
	local Remote = server.Remote;
	local Logs = server.Logs;

	local Event = nil;

	local Authorized = {}; --// Users who have been given Dex and are authorized to use the remote event

	local function MakeEvent()
		if not Event then
			Event =  service.New("RemoteFunction", {
				Name = "DexEvent";
				Parent = service.ReplicatedStorage;
			})

			Event.OnServerInvoke = (function(Plr, Action, ...)
				local pData = Authorized[Plr];
				if not pData then
					server.Anti.Detected(Plr, "kick", "Unauthorized Dex Event");
				else
					local args = {...};
					local Suppliments = args[1];

					if (Action == "Destroy" or Action == "Delete") and args[1] then
						args[1]:Destroy();
						return true;
					elseif Action == "ClearClipboard" then
						pData.Clipboard = {};
						return true;
					elseif Action == "Duplicate" and args[1] and args[2] then
						local obj = args[1];
						local par = args[2];

						local new = obj:Clone()
						new.Parent = par;

						return new;
					elseif Action == "Copy" and args[1] then
						local obj = args[1];
						local new = obj:Clone();
						table.insert(pData.Clipboard, new)

						return new;
					elseif Action == "Paste" and args[1] then
						local parent = args[1];

						for i,v in pairs(pData.Clipboard) do
							v:Clone().Parent = parent;
						end

						return true;
					elseif Action == "SetProperty" and args[3] then
						local obj = args[1];
						local prop = args[2];
						local value = args[3];

						if obj and prop then
							obj[prop] = value;
							return true;
						end
					elseif Action == "InstanceNew" then
						return service.New(args[1], args[2]);
					end
				end
			end)
		end
	end

	server.Commands.DexExplore = {
		Prefix = Settings.Prefix;
		Commands = {"dex";"dexexplorer";"dexexplorer"};
		Args = {};
		Description = "Lets you explore the game using Dex [Credit to Raspberry Pi/Raspy_Pi/raspymgx/OpenOffset(?)]";
		AdminLevel = 300;
		Function = function(plr,args)
			Authorized[plr] = {
				Clipboard = {};
			}; --// double as per-player explorer-related data

			if not Event then  MakeEvent(); end
			Remote.MakeLocal(plr, dexGui:Clone(), "PlayerGui")
		end
	};

	Logs.AddLog("Script", "Dex Plugin Loaded");
end]]></ProtectedString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ScreenGui" referent="RBX8A3A2929845C4702A5F3C098D29D5B38">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">false</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<bool name="IgnoreGuiInset">false</bool>
				<string name="Name">Dex_Explorer</string>
				<bool name="ResetOnSpawn">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<token name="ZIndexBehavior">0</token>
			</Properties>
			<Item class="LocalScript" referent="RBX89F5814815AE41618FFFA1B02A086A33">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Selection</string>
					<string name="ScriptGuid">{E19E6553-26F9-4939-B99B-8CB659E0B2FB}</string>
					<ProtectedString name="Source">local Gui = script.Parent

local IntroFrame = Gui:WaitForChild(&quot;IntroFrame&quot;)

local SideMenu = Gui:WaitForChild(&quot;SideMenu&quot;)
local OpenToggleButton = Gui:WaitForChild(&quot;Toggle&quot;)
local CloseToggleButton = SideMenu:WaitForChild(&quot;Toggle&quot;)
local OpenScriptEditorButton = SideMenu:WaitForChild(&quot;OpenScriptEditor&quot;)

local ScriptEditor = Gui:WaitForChild(&quot;ScriptEditor&quot;)

local SlideOut = SideMenu:WaitForChild(&quot;SlideOut&quot;)
local SlideFrame = SlideOut:WaitForChild(&quot;SlideFrame&quot;)
local Slant = SideMenu:WaitForChild(&quot;Slant&quot;)

local ExplorerButton = SlideFrame:WaitForChild(&quot;Explorer&quot;)
local SettingsButton = SlideFrame:WaitForChild(&quot;Settings&quot;)

local SelectionBox = Instance.new(&quot;SelectionBox&quot;)
SelectionBox.Parent = Gui

local ExplorerPanel = Gui:WaitForChild(&quot;ExplorerPanel&quot;)
local PropertiesFrame = Gui:WaitForChild(&quot;PropertiesFrame&quot;)
local SaveMapWindow = Gui:WaitForChild(&quot;SaveMapWindow&quot;)
local RemoteDebugWindow = Gui:WaitForChild(&quot;RemoteDebugWindow&quot;)

local SettingsPanel = Gui:WaitForChild(&quot;SettingsPanel&quot;)
local AboutPanel = Gui:WaitForChild(&quot;About&quot;)
local SettingsListener = SettingsPanel:WaitForChild(&quot;GetSetting&quot;)
local SettingTemplate = SettingsPanel:WaitForChild(&quot;SettingTemplate&quot;)
local SettingList = SettingsPanel:WaitForChild(&quot;SettingList&quot;)

local SaveMapCopyList = SaveMapWindow:WaitForChild(&quot;CopyList&quot;)
local SaveMapSettingFrame = SaveMapWindow:WaitForChild(&quot;MapSettings&quot;)
local SaveMapName = SaveMapWindow:WaitForChild(&quot;FileName&quot;)
local SaveMapButton = SaveMapWindow:WaitForChild(&quot;Save&quot;)
local SaveMapCopyTemplate = SaveMapWindow:WaitForChild(&quot;Entry&quot;)
local SaveMapSettings = {
&#9;CopyWhat = {
&#9;&#9;Workspace = true,
&#9;&#9;Lighting = true,
&#9;&#9;ReplicatedStorage = true,
&#9;&#9;ReplicatedFirst = true,
&#9;&#9;StarterPack = true,
&#9;&#9;StarterGui = true,
&#9;&#9;StarterPlayer = true
&#9;},
&#9;SaveScripts = false,
&#9;SaveTerrain = true,
&#9;LightingProperties = true,
&#9;CameraInstances = true
}

--[[
local ClickSelectOption = SettingsPanel:WaitForChild(&quot;ClickSelect&quot;):WaitForChild(&quot;Change&quot;)
local SelectionBoxOption = SettingsPanel:WaitForChild(&quot;SelectionBox&quot;):WaitForChild(&quot;Change&quot;)
local ClearPropsOption = SettingsPanel:WaitForChild(&quot;ClearProperties&quot;):WaitForChild(&quot;Change&quot;)
local SelectUngroupedOption = SettingsPanel:WaitForChild(&quot;SelectUngrouped&quot;):WaitForChild(&quot;Change&quot;)
--]]

local function dexWriteFile(dest, cont, name, filter, ext)
&#9;if writefileas then
&#9;&#9;writefileas(cont, name, filter, ext)
&#9;&#9;return true
&#9;elseif writefile then
&#9;&#9;writefile(dest, cont)
&#9;&#9;return true
&#9;else
&#9;&#9;return false
&#9;end&#9;
end

local SaveInstance
local SaveInstance
do
&#9;local function fetchAPI()
&#9;local api
&#9;local s,e = pcall(function()
&#9;&#9;local version = game:HttpGet(&quot;http://setup.roblox.com/versionQTStudio&quot;,true)
&#9;&#9;local rawApi = game:HttpGet(&quot;http://setup.roblox.com/&quot;..version..&quot;-API-Dump.json&quot;,true)
&#9;&#9;api = game:GetService(&quot;HttpService&quot;):JSONDecode(rawApi)
&#9;end)
&#9;if not s then return end
&#9;local classes,enums = {},{}
&#9;
&#9;for _,class in pairs(api.Classes) do
&#9;&#9;local newClass = {}
&#9;&#9;newClass.Name = class.Name
&#9;&#9;newClass.Superclass = class.Superclass
&#9;&#9;newClass.Properties = {}
&#9;&#9;newClass.Functions = {}
&#9;&#9;newClass.Events = {}
&#9;&#9;newClass.Callbacks = {}
&#9;&#9;newClass.Tags = {}
&#9;&#9;
&#9;&#9;if class.Tags then for c,tag in pairs(class.Tags) do newClass.Tags[tag] = true end end
&#9;&#9;for __,member in pairs(class.Members) do
&#9;&#9;&#9;local mType = member.MemberType
&#9;&#9;&#9;if mType == &quot;Property&quot; then
&#9;&#9;&#9;&#9;local newProp = {}
&#9;&#9;&#9;&#9;newProp.Name = member.Name
&#9;&#9;&#9;&#9;newProp.Class = class.Name
&#9;&#9;&#9;&#9;newProp.ValueType = member.ValueType.Name
&#9;&#9;&#9;&#9;newProp.Category = member.Category
&#9;&#9;&#9;&#9;newProp.Serialization = member.Serialization
&#9;&#9;&#9;&#9;newProp.Tags = {}
&#9;&#9;&#9;&#9;if member.Tags then for c,tag in pairs(member.Tags) do newProp.Tags[tag] = true end end
&#9;&#9;&#9;&#9;table.insert(newClass.Properties,newProp)
&#9;&#9;&#9;elseif mType == &quot;Function&quot; then
&#9;&#9;&#9;&#9;local newFunc = {}
&#9;&#9;&#9;&#9;newFunc.Name = member.Name
&#9;&#9;&#9;&#9;newFunc.Class = class.Name
&#9;&#9;&#9;&#9;newFunc.Parameters = {}
&#9;&#9;&#9;&#9;newFunc.ReturnType = member.ReturnType.Name
&#9;&#9;&#9;&#9;newFunc.Tags = {}
&#9;&#9;&#9;&#9;for c,param in pairs(member.Parameters) do
&#9;&#9;&#9;&#9;&#9;table.insert(newFunc.Parameters,{Name = param.Name, Type = param.Type.Name})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if member.Tags then for c,tag in pairs(member.Tags) do newFunc.Tags[tag] = true end end
&#9;&#9;&#9;&#9;table.insert(newClass.Functions,newFunc)
&#9;&#9;&#9;elseif mType == &quot;Event&quot; then
&#9;&#9;&#9;&#9;local newEvent = {}
&#9;&#9;&#9;&#9;newEvent.Name = member.Name
&#9;&#9;&#9;&#9;newEvent.Class = class.Name
&#9;&#9;&#9;&#9;newEvent.Parameters = {}
&#9;&#9;&#9;&#9;newEvent.Tags = {}
&#9;&#9;&#9;&#9;for c,param in pairs(member.Parameters) do
&#9;&#9;&#9;&#9;&#9;table.insert(newEvent.Parameters,{Name = param.Name, Type = param.Type.Name})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if member.Tags then for c,tag in pairs(member.Tags) do newEvent.Tags[tag] = true end end
&#9;&#9;&#9;&#9;table.insert(newClass.Events,newEvent)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;classes[class.Name] = newClass
&#9;end
&#9;
&#9;for _,enum in pairs(api.Enums) do
&#9;&#9;local newEnum = {}
&#9;&#9;newEnum.Name = enum.Name
&#9;&#9;newEnum.Items = {}
&#9;&#9;newEnum.Tags = {}
&#9;&#9;
&#9;&#9;if enum.Tags then for c,tag in pairs(enum.Tags) do newEnum.Tags[tag] = true end end
&#9;&#9;for __,item in pairs(enum.Items) do
&#9;&#9;&#9;local newItem = {}
&#9;&#9;&#9;newItem.Name = item.Name
&#9;&#9;&#9;newItem.Value = item.Value
&#9;&#9;&#9;table.insert(newEnum.Items,newItem)
&#9;&#9;end
&#9;&#9;
&#9;&#9;enums[enum.Name] = newEnum
&#9;end
&#9;
&#9;local function getMember(class,member)
&#9;&#9;if not classes[class] or not classes[class][member] then return end
&#9;    local result = {}
&#9;
&#9;    local currentClass = classes[class]
&#9;    while currentClass do
&#9;        for _,entry in pairs(currentClass[member]) do
&#9;            table.insert(result,entry)
&#9;        end
&#9;        currentClass = classes[currentClass.Superclass]
&#9;    end
&#9;
&#9;    table.sort(result,function(a,b) return a.Name &lt; b.Name end)
&#9;    return result
&#9;end
&#9;
&#9;return {
&#9;&#9;Classes = classes,
&#9;&#9;Enums = enums,
&#9;&#9;GetMember = getMember
&#9;}
&#9;end
&#9;
&#9;-- Dex Serializer Module
&#9;local function SerializerModule()
&#9;-- Modules
&#9;local Serializer,API
&#9;
&#9;-- Un-init
&#9;local _writefile,_getnilinstances,oldIndex,classes,enums
&#9;
&#9;-- Rest
&#9;local t_ins,t_concat = table.insert,table.concat
&#9;local buffer = {}
&#9;local refCount = 0
&#9;local getChildren = Instance.new(&quot;Part&quot;).GetChildren
&#9;local toDecompile = {}
&#9;local saveFilter = {}
&#9;local instDir = {}
&#9;
&#9;local elyFuncs = false
&#9;
&#9;local xmlReplace = {
&#9;&#9;[&quot;&apos;&quot;] = &quot;&amp;apos;&quot;,
&#9;&#9;[&quot;\&quot;&quot;] = &quot;&amp;quot;&quot;,
&#9;&#9;[&quot;&lt;&quot;] = &quot;&amp;lt;&quot;,
&#9;&#9;[&quot;&gt;&quot;] = &quot;&amp;gt;&quot;,
&#9;&#9;[&quot;&amp;&quot;] = &quot;&amp;amp;&quot;
&#9;}
&#9;
&#9;local propBypass = {
&#9;&#9;[&quot;BasePart&quot;] = {
&#9;&#9;&#9;[&quot;Size&quot;] = true,
&#9;&#9;&#9;[&quot;Color&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;Part&quot;] = {
&#9;&#9;&#9;[&quot;Shape&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;Fire&quot;] = {
&#9;&#9;&#9;[&quot;Heat&quot;] = true,
&#9;&#9;&#9;[&quot;Size&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;Smoke&quot;] = {
&#9;&#9;&#9;[&quot;Opacity&quot;] = true,
&#9;&#9;&#9;[&quot;RiseVelocity&quot;] = true,
&#9;&#9;&#9;[&quot;Size&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;DoubleConstrainedValue&quot;] = {
&#9;&#9;&#9;[&quot;Value&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;IntConstrainedValue&quot;] = {
&#9;&#9;&#9;[&quot;Value&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;TrussPart&quot;] = {
&#9;&#9;&#9;[&quot;Style&quot;] = true
&#9;&#9;}
&#9;}
&#9;
&#9;local propFilter = {
&#9;&#9;[&quot;BaseScript&quot;] = {
&#9;&#9;&#9;[&quot;LinkedSource&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;ModuleScript&quot;] = {
&#9;&#9;&#9;[&quot;LinkedSource&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;Players&quot;] = {
&#9;&#9;&#9;[&quot;CharacterAutoLoads&quot;] = true
&#9;&#9;}
&#9;}
&#9;
&#9;local sProps = setmetatable({},{__index = function(self,class)
&#9;&#9;local props = {}
&#9;&#9;
&#9;&#9;local apiProps = API.GetMember(class,&quot;Properties&quot;) or {}
&#9;&#9;for i,v in pairs(apiProps) do
&#9;&#9;&#9;if (v.Serialization.CanSave and not v.Tags.NotScriptable) or (propBypass[v.Class] and propBypass[v.Class][v.Name]) then
&#9;&#9;&#9;&#9;if not propFilter[v.Class] or not propFilter[v.Class][v.Name] then
&#9;&#9;&#9;&#9;&#9;local s,e = pcall(function() local exist = instDir[class][v.Name] end)
&#9;&#9;&#9;&#9;&#9;if s then table.insert(props,v) end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;self[class] = props
&#9;&#9;
&#9;&#9;return props
&#9;end})
&#9;
&#9;local testInsts = setmetatable({},{__index = function(self,class)
&#9;&#9;local s,testInst = pcall(function() return Instance.new(class) end)
&#9;&#9;local testInstTable = {}
&#9;&#9;
&#9;&#9;if testInst then
&#9;&#9;&#9;for i,v in pairs(sProps[class]) do
&#9;&#9;&#9;&#9;testInstTable[v.Name] = testInst[v.Name]
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;self[class] = testInstTable
&#9;&#9;
&#9;&#9;return testInstTable
&#9;end})
&#9;
&#9;local refMt = {__index = function(self,inst)
&#9;&#9;if not inst then return &quot;&quot; end
&#9;&#9;refCount = refCount + 1
&#9;&#9;self[inst] = refCount
&#9;&#9;return refCount
&#9;end}
&#9;local refs = setmetatable({},refMt)
&#9;
&#9;local valueHandlers = {
&#9;&#9;[&quot;bool&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;bool name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/bool&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;float&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;float name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/float&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;int&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;int name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/int&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;int64&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;int64 name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/int64&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;double&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;double name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/double&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;string&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;string name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&apos;&lt;/string&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;BrickColor&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;int name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val.Number..&apos;&lt;/int&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Vector2&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector2 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;X&gt;&apos;..val.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..val.Y..&apos;&lt;/Y&gt;\
&#9;&lt;/Vector2&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Vector3&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector3 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;X&gt;&apos;..val.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..val.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..val.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/Vector3&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;CFrame&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,(&apos;\n&lt;CoordinateFrame name=&quot;&apos;..name..[[&quot;&gt;
&#9;&lt;X&gt;%f&lt;/X&gt;
&#9;&lt;Y&gt;%f&lt;/Y&gt;
&#9;&lt;Z&gt;%f&lt;/Z&gt;
&#9;&lt;R00&gt;%f&lt;/R00&gt;
&#9;&lt;R01&gt;%f&lt;/R01&gt;
&#9;&lt;R02&gt;%f&lt;/R02&gt;
&#9;&lt;R10&gt;%f&lt;/R10&gt;
&#9;&lt;R11&gt;%f&lt;/R11&gt;
&#9;&lt;R12&gt;%f&lt;/R12&gt;
&#9;&lt;R20&gt;%f&lt;/R20&gt;
&#9;&lt;R21&gt;%f&lt;/R21&gt;
&#9;&lt;R22&gt;%f&lt;/R22&gt;
&#9;&lt;/CoordinateFrame&gt;]]):format(val:components()))
&#9;&#9;end,
&#9;&#9;[&quot;Content&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Content name=&quot;&apos;..name..&apos;&quot;&gt;&lt;url&gt;&apos;..val:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&apos;&lt;/url&gt;&lt;/Content&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;UDim&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;UDim name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;S&gt;&apos;..val.Scale..&apos;&lt;/S&gt;\
&#9;&lt;O&gt;&apos;..val.Offset..&apos;&lt;/O&gt;\
&#9;&lt;/UDim&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;UDim2&quot;] = function(name,val)
&#9;&#9;&#9;local x = val.X
&#9;&#9;&#9;local y = val.Y
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;UDim2 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;XS&gt;&apos;..x.Scale..&apos;&lt;/XS&gt;\
&#9;&lt;XO&gt;&apos;..x.Offset..&apos;&lt;/XO&gt;\
&#9;&lt;YS&gt;&apos;..y.Scale..&apos;&lt;/YS&gt;\
&#9;&lt;YO&gt;&apos;..y.Offset..&apos;&lt;/YO&gt;\
&#9;&lt;/UDim2&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Color3&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Color3 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;R&gt;&apos;..val.r..&apos;&lt;/R&gt;\
&#9;&lt;G&gt;&apos;..val.g..&apos;&lt;/G&gt;\
&#9;&lt;B&gt;&apos;..val.b..&apos;&lt;/B&gt;\
&#9;&lt;/Color3&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;NumberRange&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;NumberRange name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/NumberRange&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;NumberSequence&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;NumberSequence name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/NumberSequence&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;ColorSequence&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;ColorSequence name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/ColorSequence&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Rect&quot;] = function(name,val)
&#9;&#9;&#9;local min,max = val.Min,val.Max
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Rect2D name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;min&gt;\
&#9;&lt;X&gt;&apos;..min.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..min.Y..&apos;&lt;/Y&gt;\
&#9;&lt;/min&gt;\
&#9;&lt;max&gt;\
&#9;&lt;X&gt;&apos;..max.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..max.Y..&apos;&lt;/Y&gt;\
&#9;&lt;/max&gt;\
&#9;&lt;/Rect2D&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Object&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ref name=&quot;&apos;..name..&apos;&quot;&gt;RBX&apos;..refs[val]..&apos;&lt;/Ref&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;PhysicalProperties&quot;] = function(name,val)
&#9;&#9;&#9;if val then
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;PhysicalProperties name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;CustomPhysics&gt;true&lt;/CustomPhysics&gt;\
&#9;&lt;Density&gt;&apos;..val.Density..&apos;&lt;/Density&gt;\
&#9;&lt;Friction&gt;&apos;..val.Friction..&apos;&lt;/Friction&gt;\
&#9;&lt;Elasticity&gt;&apos;..val.Elasticity..&apos;&lt;/Elasticity&gt;\
&#9;&lt;FrictionWeight&gt;&apos;..val.FrictionWeight..&apos;&lt;/FrictionWeight&gt;\
&#9;&lt;ElasticityWeight&gt;&apos;..val.ElasticityWeight..&apos;&lt;/ElasticityWeight&gt;\
&#9;&lt;/PhysicalProperties&gt;&apos;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;PhysicalProperties name=&quot;&apos;..name..&apos;&quot;&gt;\n&lt;CustomPhysics&gt;false&lt;/CustomPhysics&gt;\n&lt;/PhysicalProperties&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;Faces&quot;] = function(name,val)
&#9;&#9;&#9;local faceInt = (val.Front and 32 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Bottom and 16 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Left and 8 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Back and 4 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Top and 2 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Right and 1 or 0)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Faces name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;faces&gt;&apos;..faceInt..&apos;&lt;/faces&gt;\
&#9;&lt;/Faces&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Axes&quot;] = function(name,val)
&#9;&#9;&#9;local axisInt = (val.Z and 4 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Y and 2 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.X and 1 or 0)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Axes name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;axes&gt;&apos;..axisInt..&apos;&lt;/axes&gt;\
&#9;&lt;/Faces&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Ray&quot;] = function(name,val)
&#9;&#9;&#9;local origin = val.Origin
&#9;&#9;&#9;local direction = val.Direction
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ray name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;origin&gt;\
&#9;&lt;X&gt;&apos;..origin.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..origin.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..origin.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/origin&gt;\
&#9;&lt;direction&gt;\
&#9;&lt;X&gt;&apos;..direction.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..direction.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..direction.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/direction&gt;\
&#9;&lt;/Ray&gt;&apos;)
&#9;&#9;end,
&#9;}
&#9;
&#9;local function getNS(inst,name)
&#9;&#9;rfl_setscriptable(inst,name,true)
&#9;&#9;local propVal = oldIndex and oldIndex(inst,name) or inst[name]
&#9;&#9;rfl_setscriptable(inst,name,false)
&#9;&#9;return propVal
&#9;end
&#9;
&#9;local function getBS(inst,name)
&#9;&#9;local bs = getbspval(inst,name,true)
&#9;&#9;if bs then
&#9;&#9;&#9;return &quot;&lt;![CDATA[&quot;..bs..&quot;]]&gt;&quot;
&#9;&#9;else
&#9;&#9;&#9;return &quot;&quot;
&#9;&#9;end
&#9;end
&#9;
&#9;local specialInst = {
&#9;&#9;[&quot;UnionOperation&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then -- Assume all ely funcs defined
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Content name=&quot;AssetId&quot;&gt;&lt;url&gt;&apos;..getNS(inst,&quot;AssetId&quot;):gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&apos;&lt;/url&gt;&lt;/Content&gt;&apos;)
&#9;&#9;&#9;&#9;local initialSize = getNS(inst,&quot;InitialSize&quot;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector3 name=&quot;InitialSize&quot;&gt;\
&#9;&lt;X&gt;&apos;..initialSize.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..initialSize.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..initialSize.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/Vector3&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;ChildData&quot;&gt;&apos;..getBS(inst,&quot;ChildData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;MeshData&quot;&gt;&apos;..getBS(inst,&quot;MeshData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;PhysicsData&quot;&gt;&apos;..getBS(inst,&quot;PhysicsData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;MeshPart&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then -- Assume all ely funcs defined
&#9;&#9;&#9;&#9;local initialSize = getNS(inst,&quot;InitialSize&quot;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector3 name=&quot;InitialSize&quot;&gt;\
&#9;&lt;X&gt;&apos;..initialSize.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..initialSize.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..initialSize.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/Vector3&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;PhysicsData&quot;&gt;&apos;..getBS(inst,&quot;PhysicsData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;Terrain&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;MaterialColors&quot;&gt;&apos;..getBS(inst,&quot;MaterialColors&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;SmoothGrid&quot;&gt;&apos;..getBS(inst,&quot;SmoothGrid&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;TerrainRegion&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;SmoothGrid&quot;&gt;&apos;..getBS(inst,&quot;SmoothGrid&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;BinaryStringValue&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;Value&quot;&gt;&apos;..getBS(inst,&quot;Value&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;Workspace&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;token name=&quot;AutoJointsMode&quot;&gt;&apos;..getNS(inst,&quot;AutoJointsMode&quot;).Value..&apos;&lt;/token&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;bool name=&quot;PGSPhysicsSolverEnabled&quot;&gt;&apos;..tostring(inst:PGSIsEnabled())..&apos;&lt;/bool&gt;&apos;)
&#9;&#9;&#9;local groupTable = {}
&#9;&#9;&#9;for i,v in pairs(game:GetService(&quot;PhysicsService&quot;):GetCollisionGroups()) do
&#9;&#9;&#9;&#9;t_ins(groupTable,v.name:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&quot;^&quot;..v.id..&quot;^&quot;..v.mask)
&#9;&#9;&#9;end
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;string name=&quot;CollisionGroups&quot;&gt;&apos;..t_concat(groupTable,&quot;\\&quot;)..&apos;&lt;/string&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Humanoid&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;float name=&quot;Health_XML&quot;&gt;&apos;..inst.Health..&apos;&lt;/float&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Sound&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;float name=&quot;xmlRead_MaxDistance_3&quot;&gt;&apos;..inst.MaxDistance..&apos;&lt;/float&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;WeldConstraint&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;valueHandlers[&quot;CFrame&quot;](&quot;CFrame0&quot;,getNS(inst,&quot;CFrame0&quot;))
&#9;&#9;&#9;&#9;valueHandlers[&quot;CFrame&quot;](&quot;CFrame1&quot;,getNS(inst,&quot;CFrame1&quot;))
&#9;&#9;&#9;end
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ref name=&quot;Part0Internal&quot;&gt;RBX&apos;..refs[inst.Part0]..&apos;&lt;/Ref&gt;&apos;)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ref name=&quot;Part1Internal&quot;&gt;RBX&apos;..refs[inst.Part1]..&apos;&lt;/Ref&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;LocalScript&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;ProtectedString name=&quot;Source&quot;&gt;&apos;)
&#9;&#9;&#9;t_ins(buffer,&quot;&quot;)
&#9;&#9;&#9;t_ins(buffer,&apos;&lt;/ProtectedString&gt;&apos;)
&#9;&#9;&#9;t_ins(toDecompile,{inst,#buffer-1})
&#9;&#9;end,
&#9;&#9;[&quot;ModuleScript&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;ProtectedString name=&quot;Source&quot;&gt;&apos;)
&#9;&#9;&#9;t_ins(buffer,&quot;&quot;)
&#9;&#9;&#9;t_ins(buffer,&apos;&lt;/ProtectedString&gt;&apos;)
&#9;&#9;&#9;t_ins(toDecompile,{inst,#buffer-1})
&#9;&#9;end,
&#9;}
&#9;
&#9;local savePlaceBlacklist = {
&#9;&#9;[&quot;CoreGui&quot;] = true,
&#9;&#9;[&quot;CorePackages&quot;] = true
&#9;}
&#9;
&#9;local function writeXML(inst)
&#9;&#9;if saveFilter[inst] then return end
&#9;&#9;
&#9;&#9;local class = oldIndex and oldIndex(inst,&quot;ClassName&quot;) or inst.ClassName&#9;
&#9;&#9;if not instDir[class] then instDir[class] = inst end
&#9;&#9;local testInst = testInsts[class]
&#9;&#9;
&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;&apos;..class..&apos;&quot; referent=&quot;RBX&apos;..refs[inst]..&apos;&quot;&gt;\n&lt;Properties&gt;&apos;)
&#9;&#9;
&#9;&#9;for _,prop in pairs(sProps[class]) do
&#9;&#9;&#9;local propName = prop.Name
&#9;&#9;&#9;local propVal = oldIndex and oldIndex(inst,propName) or inst[propName]
&#9;&#9;&#9;if testInst[propName] ~= propVal then
&#9;&#9;&#9;&#9;local valueType = prop.ValueType
&#9;&#9;&#9;&#9;if valueHandlers[valueType] then
&#9;&#9;&#9;&#9;&#9;valueHandlers[valueType](propName,propVal)
&#9;&#9;&#9;&#9;elseif enums[valueType] then
&#9;&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;token name=&quot;&apos;..propName..&apos;&quot;&gt;&apos;..propVal.Value..&apos;&lt;/token&gt;&apos;)
&#9;&#9;&#9;&#9;elseif classes[valueType] then
&#9;&#9;&#9;&#9;&#9;valueHandlers[&quot;Object&quot;](propName,propVal)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;if specialInst[class] then
&#9;&#9;&#9;specialInst[class](inst)
&#9;&#9;end
&#9;&#9;
&#9;&#9;t_ins(buffer,&quot;\n&lt;/Properties&gt;&quot;)
&#9;&#9;
&#9;&#9;for i,v in pairs(getChildren(inst)) do
&#9;&#9;&#9;writeXML(v)
&#9;&#9;end
&#9;&#9;
&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;end
&#9;
&#9;local function resetState()
&#9;&#9;buffer = {}
&#9;&#9;refs = setmetatable({},refMt)
&#9;&#9;refCount = 0
&#9;&#9;toDecompile = {}
&#9;&#9;saveFilter = {}
&#9;&#9;instDir = {}
&#9;end
&#9;
&#9;local defaultSettings = {
&#9;&#9;DecompileMode = 0,
&#9;&#9;NilInstances = false,
&#9;&#9;RemovePlayers = true,
&#9;&#9;SavePlayerDescendants = false,
&#9;&#9;DecompileTimeout = 10,
&#9;&#9;UnluacMaxThreads = 5,
&#9;&#9;DecompileIgnore = {}
&#9;}
&#9;
&#9;Serializer = {
&#9;&#9;Init = function(data)
&#9;&#9;&#9;API = data.API
&#9;&#9;&#9;_writefile = data.WriteFile
&#9;&#9;&#9;_getnilinstances = data.GetNilInstances
&#9;&#9;&#9;oldIndex = data.OldIndex
&#9;&#9;&#9;
&#9;&#9;&#9;classes = API.Classes
&#9;&#9;&#9;enums = API.Enums
&#9;&#9;&#9;
&#9;&#9;&#9;elyFuncs = getbspval and rfl_setscriptable
&#9;&#9;&#9;
&#9;&#9;&#9;Serializer.ResetSettings()
&#9;&#9;end,
&#9;&#9;
&#9;&#9;Settings = {},
&#9;&#9;
&#9;&#9;ResetSettings = function()
&#9;&#9;&#9;Serializer.Settings = {}
&#9;&#9;&#9;for i,v in pairs(defaultSettings) do
&#9;&#9;&#9;&#9;Serializer.Settings[i] = v
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;
&#9;&#9;SaveInstance = function(inst,name,sets)
&#9;&#9;&#9;Serializer.ResetSettings()
&#9;&#9;&#9;
&#9;&#9;&#9;for i,v in pairs(sets or {}) do
&#9;&#9;&#9;&#9;Serializer.Settings[i] = v
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;resetState()
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game and Serializer.Settings.RemovePlayers then
&#9;&#9;&#9;&#9;for i,v in pairs(game:GetService(&quot;Players&quot;):GetPlayers()) do
&#9;&#9;&#9;&#9;&#9;saveFilter[v.Character] = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;t_ins(buffer,[==[&lt;roblox xmlns:xmime=&quot;http://www.w3.org/2005/05/xmlmime&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;http://www.roblox.com/roblox.xsd&quot; version=&quot;4&quot;&gt;
&#9;&lt;Meta name=&quot;ExplicitAutoJoints&quot;&gt;true&lt;/Meta&gt;
&#9;&lt;External&gt;null&lt;/External&gt;
&#9;&lt;External&gt;nil&lt;/External&gt;]==])
&#9;&#9;&#9;
&#9;&#9;&#9;if inst ~= game then
&#9;&#9;&#9;&#9;if type(inst) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(inst) do
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;writeXML(inst)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;for i,v in pairs(game:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if not savePlaceBlacklist[v.ClassName] then
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game and Serializer.Settings.NilInstances and _getnilinstances then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Folder&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;Nil Instances&lt;/string&gt;\
&#9;&lt;/Properties&gt;&apos;)
&#9;&#9;&#9;&#9;for i,v in pairs(_getnilinstances()) do
&#9;&#9;&#9;&#9;&#9;if ((API.Classes[v.ClassName] and not API.Classes[v.ClassName].Tags.Service) or not API.Classes[v.ClassName]) and v ~= game then
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game and Serializer.Settings.SavePlayerDescendants then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Folder&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;Player Descendants&lt;/string&gt;\
&#9;&lt;/Properties&gt;&apos;)
&#9;&#9;&#9;&#9;for i,v in pairs(game:GetService(&quot;Players&quot;).LocalPlayer:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;PlayerGui&quot;) or v:IsA(&quot;PlayerScripts&quot;) or v:IsA(&quot;StarterGear&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Folder&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;&apos;..v.ClassName..&apos;&lt;/string&gt;\
&#9;&lt;/Properties&gt;&apos;)
&#9;&#9;&#9;&#9;&#9;&#9;for _,c in pairs(v:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;writeXML(c)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Script&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;Please Read&lt;/string&gt;\
&#9;&lt;ProtectedString name=&quot;Source&quot;&gt;&apos;..[==[--[[
&#9;Thank you for using Dex SaveInstance by Moon. (Calamari edition.)
&#9;
&#9;If you cannot play the game, please try relocating any scripts in StarterPlayer elsewhere.
&#9;]]]==]..&apos;&lt;/ProtectedString&gt;\
&#9;&lt;/Properties&gt;\
&#9;&lt;/Item&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/roblox&gt;&quot;)
&#9;&#9;&#9;
&#9;&#9;&#9;if Serializer.Settings.DecompileMode &gt; 0 and decompile then
&#9;&#9;&#9;&#9;if inst == game and #Serializer.Settings.DecompileIgnore &gt; 0 then
&#9;&#9;&#9;&#9;&#9;local ignoreServices = {}
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(Serializer.Settings.DecompileIgnore) do t_ins(ignoreServices,game:GetService(v)) end
&#9;&#9;&#9;&#9;&#9;for i = #toDecompile,1,-1 do
&#9;&#9;&#9;&#9;&#9;&#9;for _,serv in pairs(ignoreServices) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if toDecompile[i][1]:IsDescendantOf(serv) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(toDecompile,i)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if Serializer.Settings.DecompileMode == 1 then
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(toDecompile) do
&#9;&#9;&#9;&#9;&#9;&#9;local decstr = &quot;-- This could not decompile&quot;
&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;    if (false) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;decstr = tostring(v[1]):gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;decstr = &quot;&quot;
&#9;                        end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;buffer[v[2]] = decstr
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif Serializer.Settings.DecompileMode == 2 then
&#9;&#9;&#9;&#9;&#9;local left = #toDecompile
&#9;&#9;&#9;&#9;&#9;local totalScripts = left
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local statusGui = Instance.new(&quot;ScreenGui&quot;)
&#9;&#9;&#9;&#9;&#9;local statusText = Instance.new(&quot;TextLabel&quot;,statusGui)
&#9;&#9;&#9;&#9;&#9;statusText.BackgroundTransparency = 1
&#9;&#9;&#9;&#9;&#9;statusText.TextColor3 = Color3.new(1,1,1)
&#9;&#9;&#9;&#9;&#9;statusText.Position = UDim2.new(0,0,0,0)
&#9;&#9;&#9;&#9;&#9;statusText.Size = UDim2.new(1,0,0,36)
&#9;&#9;&#9;&#9;&#9;statusText.TextSize = 32
&#9;&#9;&#9;&#9;&#9;statusText.Font = Enum.Font.Code
&#9;&#9;&#9;&#9;&#9;statusText.Text = left..&quot;/&quot;..totalScripts..&quot; Scripts Left&quot;
&#9;&#9;&#9;&#9;&#9;statusGui.Parent = gethui()
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local function doDec(scr)
&#9;&#9;&#9;&#9;&#9;&#9;local thread = coroutine.running()
&#9;&#9;&#9;&#9;&#9;&#9;local decompiled = false
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;tostring(scr,&quot;unluac&quot;,function(scr,err)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;decompiled = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;coroutine.resume(thread,scr,err)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(Serializer.Settings.DecompileTimeout)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if decompiled then return end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;coroutine.resume(thread,nil,&quot;timeout&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;return coroutine.yield()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;for i = 1,Serializer.Settings.UnluacMaxThreads do
&#9;&#9;&#9;&#9;&#9;&#9;spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;while #toDecompile &gt; 0 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local nextScript = table.remove(toDecompile)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local scr,err = doDec(nextScript[1])
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if scr then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;buffer[nextScript[2]] = scr:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;buffer[nextScript[2]] = &quot;-- This could not decompile because &quot;..(err or &quot;&quot;):gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;left = left - 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;statusText.Text = left..&quot;/&quot;..totalScripts..&quot; Scripts Left&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;while left &gt; 0 do game:GetService(&quot;RunService&quot;).RenderStepped:wait() end
&#9;&#9;&#9;&#9;&#9;statusGui:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;_writefile(name..(inst == game and &quot;.rbxlx&quot; or &quot;.rbxmx&quot;),(t_concat(buffer)), name, &quot;Roblox XML Files(*.rbxlx, *.rbxmx)\0 * .rbxlx; *.rbxmx\0All Files\0 * .*\0&quot;,(inst == game and &quot;.rbxlx&quot; or &quot;.rbxmx&quot;))
&#9;&#9;&#9;end)
&#9;&#9;&#9;
&#9;&#9;&#9;resetState()
&#9;&#9;end
&#9;}
&#9;
&#9;return Serializer
&#9;end
&#9;
&#9;pcall(function()
&#9;&#9;local initialized = false
&#9;&#9;local serializer = SerializerModule()
&#9;&#9;
&#9;&#9;local function init()
&#9;&#9;local startup = {
&#9;&#9;&#9;API = fetchAPI(),
&#9;&#9;&#9;WriteFile = dexWriteFile,
&#9;&#9;&#9;GetNilInstances = nil,
&#9;&#9;&#9;OldIndex = oldindex
&#9;&#9;}
&#9;&#9;serializer.Init(startup)
&#9;&#9;initialized = true
&#9;&#9;end
&#9;&#9;
&#9;&#9;if not initialized then
&#9;&#9;init()
&#9;&#9;end
&#9;&#9;
&#9;&#9;SaveInstance = serializer.SaveInstance
&#9;&#9;saveinstance = serializer.SaveInstance
&#9;end)
end

local SelectionChanged = ExplorerPanel:WaitForChild(&quot;SelectionChanged&quot;)
local GetSelection = ExplorerPanel:WaitForChild(&quot;GetSelection&quot;)
local SetSelection = ExplorerPanel:WaitForChild(&quot;SetSelection&quot;)

local Player = game:GetService(&quot;Players&quot;).LocalPlayer
local Mouse = Player:GetMouse()

local CurrentWindow = &quot;_BLANK&quot;
local Windows = {
&#9;Explorer = {
&#9;&#9;ExplorerPanel,
&#9;&#9;PropertiesFrame
&#9;},
&#9;Settings = {SettingsPanel},
&#9;SaveMap = {SaveMapWindow},
&#9;Remotes = {RemoteDebugWindow},
&#9;About = {AboutPanel},
}

function switchWindows(wName,over)
&#9;if CurrentWindow == wName and not over then return end
&#9;
&#9;local count = 0
&#9;
&#9;for i,v in pairs(Windows) do
&#9;&#9;count = 0
&#9;&#9;if i ~= wName then
&#9;&#9;&#9;for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true) count = count + 1 end
&#9;&#9;end
&#9;end
&#9;
&#9;count = 0
&#9;
&#9;if Windows[wName] then
&#9;&#9;for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true) count = count + 1 end
&#9;end
&#9;
&#9;if wName ~= &quot;_BLANK&quot; then
&#9;&#9;CurrentWindow = wName
&#9;&#9;for i,v in pairs(SlideFrame:GetChildren()) do
&#9;&#9;&#9;v.BackgroundTransparency = 1
&#9;&#9;&#9;v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
&#9;&#9;end
&#9;&#9;if SlideFrame:FindFirstChild(wName) then
&#9;&#9;&#9;SlideFrame[wName].BackgroundTransparency = 0.5
&#9;&#9;&#9;SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
&#9;&#9;end
&#9;end
end

function toggleDex(on)
&#9;if on then
&#9;&#9;SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;switchWindows(CurrentWindow,true)
&#9;else
&#9;&#9;SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;OpenToggleButton:TweenPosition(UDim2.new(1,-40,0,0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;switchWindows(&quot;_BLANK&quot;)
&#9;end
end

local Settings = {
&#9;ClickSelect = false,
&#9;SelBox = false,
&#9;ClearProps = false,
&#9;SelectUngrouped = true,
&#9;SaveInstanceScripts = true
}

function ReturnSetting(set)
&#9;if set == &quot;ClearProps&quot; then
&#9;&#9;return Settings.ClearProps
&#9;elseif set == &quot;SelectUngrouped&quot; then
&#9;&#9;return Settings.SelectUngrouped
&#9;end
end

OpenToggleButton.MouseButton1Up:Connect(function()
&#9;toggleDex(true)
end)

OpenScriptEditorButton.MouseButton1Up:Connect(function()
&#9;if OpenScriptEditorButton.Active then
&#9;&#9;ScriptEditor.Visible = true
&#9;end
end)

CloseToggleButton.MouseButton1Up:Connect(function()
&#9;if CloseToggleButton.Active then
&#9;&#9;toggleDex(false)
&#9;end
end)

--[[
OpenToggleButton.MouseButton1Up:Connect(function()
&#9;SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;
&#9;if CurrentWindow == &quot;Explorer&quot; then
&#9;&#9;ExplorerPanel:TweenPosition(UDim2.new(1, -300, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;PropertiesFrame:TweenPosition(UDim2.new(1, -300, 0.5, 36), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;else
&#9;&#9;SettingsPanel:TweenPosition(UDim2.new(1, -300, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;end
&#9;
&#9;OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
end)

CloseToggleButton.MouseButton1Up:Connect(function()
&#9;SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;
&#9;ExplorerPanel:TweenPosition(UDim2.new(1, 30, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;PropertiesFrame:TweenPosition(UDim2.new(1, 30, 0.5, 36), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;SettingsPanel:TweenPosition(UDim2.new(1, 30, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;
&#9;OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
end)
--]]

--[[
ExplorerButton.MouseButton1Up:Connect(function()
&#9;switchWindows(&quot;Explorer&quot;)
end)

SettingsButton.MouseButton1Up:Connect(function()
&#9;switchWindows(&quot;Settings&quot;)
end)
--]]

for i,v in pairs(SlideFrame:GetChildren()) do
&#9;v.MouseButton1Click:Connect(function()
&#9;&#9;switchWindows(v.Name)
&#9;end)
&#9;
&#9;v.MouseEnter:Connect(function()v.BackgroundTransparency = 0.5 end)
&#9;v.MouseLeave:Connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
end

--[[
ExplorerButton.MouseButton1Up:Connect(function()
&#9;if CurrentWindow ~= &quot;Explorer&quot; then
&#9;&#9;CurrentWindow = &quot;Explorer&quot;
&#9;&#9;
&#9;&#9;ExplorerPanel:TweenPosition(UDim2.new(1, -300, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;PropertiesFrame:TweenPosition(UDim2.new(1, -300, 0.5, 36), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;SettingsPanel:TweenPosition(UDim2.new(1, 0, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;end
end)

SettingsButton.MouseButton1Up:Connect(function()
&#9;if CurrentWindow ~= &quot;Settings&quot; then
&#9;&#9;CurrentWindow = &quot;Settings&quot;
&#9;&#9;
&#9;&#9;ExplorerPanel:TweenPosition(UDim2.new(1, 0, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;PropertiesFrame:TweenPosition(UDim2.new(1, 0, 0.5, 36), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;&#9;SettingsPanel:TweenPosition(UDim2.new(1, -300, 0, 0), &quot;Out&quot;, &quot;Quad&quot;, 0.5, true)
&#9;end
end)
--]]

function createSetting(name,interName,defaultOn)
&#9;local newSetting = SettingTemplate:Clone()
&#9;newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
&#9;newSetting.SName.Text = name
&#9;
&#9;local function toggle(on)
&#9;&#9;if on then
&#9;&#9;&#9;newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;newSetting.Status.Text = &quot;On&quot;
&#9;&#9;&#9;Settings[interName] = true
&#9;&#9;else
&#9;&#9;&#9;newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;newSetting.Status.Text = &quot;Off&quot;
&#9;&#9;&#9;Settings[interName] = false
&#9;&#9;end
&#9;end&#9;
&#9;
&#9;newSetting.Change.MouseButton1Click:Connect(function()
&#9;&#9;toggle(not Settings[interName])
&#9;end)
&#9;
&#9;newSetting.Visible = true
&#9;newSetting.Parent = SettingList
&#9;
&#9;if defaultOn then
&#9;&#9;toggle(true)
&#9;end
end

createSetting(&quot;Click part to select&quot;,&quot;ClickSelect&quot;,false)
createSetting(&quot;Selection Box&quot;,&quot;SelBox&quot;,false)
createSetting(&quot;Clear property value on focus&quot;,&quot;ClearProps&quot;,false)
createSetting(&quot;Select ungrouped models&quot;,&quot;SelectUngrouped&quot;,true)
createSetting(&quot;SaveInstance decompiles scripts&quot;,&quot;SaveInstanceScripts&quot;,true)

--[[
ClickSelectOption.MouseButton1Up:Connect(function()
&#9;if Settings.ClickSelect then
&#9;&#9;Settings.ClickSelect = false
&#9;&#9;ClickSelectOption.Text = &quot;OFF&quot;
&#9;else
&#9;&#9;Settings.ClickSelect = true
&#9;&#9;ClickSelectOption.Text = &quot;ON&quot;
&#9;end
end)

SelectionBoxOption.MouseButton1Up:Connect(function()
&#9;if Settings.SelBox then
&#9;&#9;Settings.SelBox = false
&#9;&#9;SelectionBox.Adornee = nil
&#9;&#9;SelectionBoxOption.Text = &quot;OFF&quot;
&#9;else
&#9;&#9;Settings.SelBox = true
&#9;&#9;SelectionBoxOption.Text = &quot;ON&quot;
&#9;end
end)

ClearPropsOption.MouseButton1Up:Connect(function()
&#9;if Settings.ClearProps then
&#9;&#9;Settings.ClearProps = false
&#9;&#9;ClearPropsOption.Text = &quot;OFF&quot;
&#9;else
&#9;&#9;Settings.ClearProps = true
&#9;&#9;ClearPropsOption.Text = &quot;ON&quot;
&#9;end
end)

SelectUngroupedOption.MouseButton1Up:Connect(function()
&#9;if Settings.SelectUngrouped then
&#9;&#9;Settings.SelectUngrouped = false
&#9;&#9;SelectUngroupedOption.Text = &quot;OFF&quot;
&#9;else
&#9;&#9;Settings.SelectUngrouped = true
&#9;&#9;SelectUngroupedOption.Text = &quot;ON&quot;
&#9;end
end)
--]]

local function getSelection()
&#9;local t = GetSelection:Invoke()
&#9;if t and #t &gt; 0 then
&#9;&#9;return t[1]
&#9;else
&#9;&#9;return nil
&#9;end
end

Mouse.Button1Down:Connect(function()
&#9;if CurrentWindow == &quot;Explorer&quot; and Settings.ClickSelect then
&#9;&#9;local target = Mouse.Target
&#9;&#9;if target then
&#9;&#9;&#9;SetSelection:Invoke({target})
&#9;&#9;end
&#9;end
end)

SelectionChanged.Event:Connect(function()
&#9;if Settings.SelBox then
&#9;&#9;local success,err = pcall(function()
&#9;&#9;&#9;local selection = getSelection()
&#9;&#9;&#9;SelectionBox.Adornee = selection
&#9;&#9;end)
&#9;&#9;if err then
&#9;&#9;&#9;SelectionBox.Adornee = nil
&#9;&#9;end
&#9;end
end)

SettingsListener.OnInvoke = ReturnSetting

-- Map Copier

function createMapSetting(obj,interName,defaultOn)
&#9;local function toggle(on)
&#9;&#9;if on then
&#9;&#9;&#9;obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;obj.Status.Text = &quot;On&quot;
&#9;&#9;&#9;SaveMapSettings[interName] = true
&#9;&#9;else
&#9;&#9;&#9;obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
&#9;&#9;&#9;obj.Status.Text = &quot;Off&quot;
&#9;&#9;&#9;SaveMapSettings[interName] = false
&#9;&#9;end
&#9;end&#9;
&#9;
&#9;obj.Visible = true
&#9;obj.Parent = SaveMapSettingFrame
&#9;
&#9;if defaultOn then
&#9;&#9;toggle(true)
&#9;end
end

function createCopyWhatSetting(serv)
&#9;if SaveMapSettings.CopyWhat[serv] then
&#9;&#9;local newSetting = SaveMapCopyTemplate:Clone()
&#9;&#9;newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
&#9;&#9;newSetting.Info.Text = serv
&#9;&#9;
&#9;&#9;local function toggle(on)
&#9;&#9;&#9;if on then
&#9;&#9;&#9;&#9;newSetting.Change.enabled.Visible = true
&#9;&#9;&#9;&#9;SaveMapSettings.CopyWhat[serv] = true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;newSetting.Change.enabled.Visible = false
&#9;&#9;&#9;&#9;SaveMapSettings.CopyWhat[serv] = false
&#9;&#9;&#9;end
&#9;&#9;end&#9;
&#9;&#9;
&#9;&#9;newSetting.Visible = true
&#9;&#9;newSetting.Parent = SaveMapCopyList
&#9;end
end

createCopyWhatSetting(&quot;Workspace&quot;)

SaveMapName.Text = tostring(game.PlaceId)..&quot;MapCopy&quot;

SaveMapButton.MouseButton1Click:Connect(function()
&#9;if SaveInstance then
&#9;&#9;SaveInstance(game,SaveMapName.Text)
&#9;&#9;SaveMapButton.Text = &quot;The map has been saved&quot;
&#9;&#9;wait(5)
&#9;&#9;SaveMapButton.Text = &quot;Save&quot;
&#9;else
&#9;&#9;SaveMapButton.Text = &quot;The map could not be saved :(&quot;
&#9;&#9;wait(5)
&#9;&#9;SaveMapButton.Text = &quot;Save&quot;
&#9;end
end)

-- End Copier

wait()

IntroFrame:TweenPosition(UDim2.new(1,-301,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

switchWindows(&quot;Explorer&quot;)

wait(1)

SideMenu.Visible = true

for i = 0,1,0.1 do
&#9;IntroFrame.BackgroundTransparency = i
&#9;IntroFrame.Main.BackgroundTransparency = i
&#9;IntroFrame.Slant.ImageTransparency = i
&#9;IntroFrame.Title.TextTransparency = i
&#9;IntroFrame.Version.TextTransparency = i
&#9;IntroFrame.Creator.TextTransparency = i
&#9;wait()
end

IntroFrame.Visible = false

SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,150),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
CloseToggleButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
Slant:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

wait(0.5)

for i = 1,0,-0.1 do
&#9;OpenScriptEditorButton.Icon.ImageTransparency = i
&#9;CloseToggleButton.TextTransparency = i
&#9;wait()
end

CloseToggleButton.Active = true
CloseToggleButton.AutoButtonColor = true

OpenScriptEditorButton.Active = true
OpenScriptEditorButton.AutoButtonColor = true</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Frame" referent="RBXF9433C17EE3D4DC6A64E5ABAE0856918">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.168627456</R>
						<G>0.168627456</G>
						<B>0.168627456</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">SideMenu</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>-330</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>30</XO>
						<YS>0</YS>
						<YO>180</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="TextButton" referent="RBX558FD17427D64968934061F8D44B4B7A">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">Toggle</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">&gt;</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">24</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.800000012</float>
						<float name="TextTransparency">1</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXD6CCB4F1E9CD4EF08B21021947F7F4C6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">DEX</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXB0F300A1376D4C388A8B1E42C51BE5AB">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Version</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">v4</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">12</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="ImageLabel" referent="RBXDBB075B40DAD4BE6A9FD1EF790737922">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>rbxassetid://1513966937</url></Content>
						<Color3 name="ImageColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0.100000001</float>
						<int name="LayoutOrder">0</int>
						<string name="Name">Slant</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>90</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">180</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX63D0AF93AFE542018947EA0CD6403C17">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Main</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBXAC343918E335486E80B5C94AFD13F62F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">SlideOut</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>150</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBXAE1D8AF74A35487B89D5D3E26571EC81">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.145098045</R>
								<G>0.145098045</G>
								<B>0.164705887</B>
							</Color3>
							<float name="BackgroundTransparency">0.100000001</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">SlideFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-120</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>120</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBXB2CA5BF3B3A84C828929D837261AABF8">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.156862751</R>
									<G>0.156862751</G>
									<B>0.156862751</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Explorer</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">24</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX035DBC06EE1F468685A4E4FE0B43378A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://472635937</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<int name="LayoutOrder">0</int>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>5</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX5CF58781224D4D3F8C5AAEC21E06C25F">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.156862751</R>
									<G>0.156862751</G>
									<B>0.156862751</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">SaveMap</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">24</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXAE4138D8AB234F149D28D0E594B726AE">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://472636337</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<int name="LayoutOrder">0</int>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>5</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBXF7452EBB41E141089AC607E1B7885F23">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.156862751</R>
									<G>0.156862751</G>
									<B>0.156862751</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Settings</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">24</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX6C7A9AEF21774ACC8C1887D219462E7B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://472635774</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<int name="LayoutOrder">0</int>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>5</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX70B24F34AE614FB185C0343CD37B64F8">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.156862751</R>
									<G>0.156862751</G>
									<B>0.156862751</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">About</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">24</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXADCFD11EF60148529C348CD727EE9453">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://476354004</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<int name="LayoutOrder">0</int>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>5</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX1A2857427F6D4DF3857073B0E94A4A62">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">OpenScriptEditor</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"></string>
						<Color3 name="TextColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">24</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBXE0046BFF6B1B483A84F983340591928F">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://475456048</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">1</float>
							<int name="LayoutOrder">0</int>
							<string name="Name">Icon</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX929396C7C6534346B92F82A028A20191">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.913725555</R>
						<G>0.913725555</G>
						<B>0.913725555</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">SaveInstance</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.300000012</XS>
						<XO>0</XO>
						<YS>0.300000012</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>350</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="TextLabel" referent="RBXCBC3C39C00AD4D9B81257FAC7125234A">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.639215708</R>
							<G>0.635294139</G>
							<B>0.647058845</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Save Instance</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX23F929A8F05D471C9089054F181F940C">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.749019623</R>
							<G>0.749019623</G>
							<B>0.749019623</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">MainWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX39E7EA889FA048C1AB8DB83359E626D3">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Save</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Save</string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX9E1421A52A054928B14A3CAF2304C07C">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Desc</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)</string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXB11A5DB208344BEEBAC3DA42B9CA1F6C">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Cancel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.524999976</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Cancel</string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX09F6422A6FD943788B5EDF7020635DD5">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">false</bool>
							<string name="Name">FileName</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<Color3 name="PlaceholderColor3">
								<R>0.699999988</R>
								<G>0.699999988</G>
								<B>0.699999988</B>
							</Color3>
							<string name="PlaceholderText"></string>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>0</XO>
								<YS>0.400000006</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.850000024</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextEditable">true</bool>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX5CA551CECC074917A92445C6CA19AA99">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.600000024</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">SaveObjects</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>0</XO>
								<YS>0.625</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="TextLabel" referent="RBX8CAA69DDD45A4DB69AF50FB3DB1AE884">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.380392194</R>
									<G>0.380392194</G>
									<B>0.380392194</B>
								</Color3>
								<float name="BackgroundTransparency">0.400000006</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">enabled</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>3</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>14</XO>
									<YS>0</YS>
									<YO>14</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX88366E582CA94DBD88BCCB2BE6F77A48">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Desc2</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>30</XO>
								<YS>0.625</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.925000012</XS>
								<XO>-30</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Save &quot;Object&quot; type values</string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX7FB47E443DF14FEEAB109B4DEB32318E">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.0784313753</R>
						<G>0.0784313753</G>
						<B>0.0784313753</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Confirmation</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-175</XO>
						<YS>0.5</YS>
						<YO>-75</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>350</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBXD96729F0BBDC4E0C8E59B3FD9A9C2FC6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.639215708</R>
							<G>0.635294139</G>
							<B>0.647058845</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"> Confirm</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">3</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX46BDF2445EB34517B89BEA546B142B48">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.749019623</R>
							<G>0.749019623</G>
							<B>0.749019623</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">MainWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>150</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="TextButton" referent="RBX248E8598F1724698B185FD7EC2DC2215">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.345098048</R>
								<G>0.345098048</G>
								<B>0.345098048</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Yes</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Yes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBX2C16B357863D448491538FD79F9E910C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX60B3A076541C4280B7D62E72575CEA83">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.345098048</R>
								<G>0.345098048</G>
								<B>0.345098048</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Desc</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">The file, FILENAME, already exists. Overwrite?</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX8F095293D1E14DA884A4A0A8A45E3F31">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.345098048</R>
								<G>0.345098048</G>
								<B>0.345098048</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">No</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.524999976</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">No</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBXD174DE775D3B45B8AC8170491172770D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="UICorner" referent="RBXC4FC68B20FDE4F9495C2B199D3A0C7F6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>10</O>
							</UDim>
							<string name="Name"></string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXE3101E29314A4756AB79B84799F52B95">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.0588235296</R>
						<G>0.0588235296</G>
						<B>0.0784313753</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Caution</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-175</XO>
						<YS>0.5</YS>
						<YO>-75</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>350</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">5</int>
				</Properties>
				<Item class="TextLabel" referent="RBX7C085E931E184C09B3F889886BB177D6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.639215708</R>
							<G>0.635294139</G>
							<B>0.647058845</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">true</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"> Caution</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">5</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX5FC372061271474B97F2AF465485F0B6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.749019623</R>
							<G>0.749019623</G>
							<B>0.749019623</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">MainWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>150</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="TextLabel" referent="RBX7C180BC675C04202AFDFBDEE94A22F33">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">16</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Desc</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>82</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">The file, FILENAME, already exists. Overwrite?</string>
							<Color3 name="TextColor3">
								<R>0.980392158</R>
								<G>0.980392158</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">1</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXCCD6A7FBA34C412780D69C21F2B1B055">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.372549027</R>
								<G>0.372549027</G>
								<B>0.392156869</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Ok</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.300000012</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-45</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Ok</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
						<Item class="UICorner" referent="RBXD04319B50A4D4848976C22E782803A1D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="UICorner" referent="RBX6710A963E3044E5C962D2A905900B476">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>10</O>
							</UDim>
							<string name="Name"></string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXBD84104BCE38487981AB4CC9483D759F">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.0784313753</R>
						<G>0.0784313753</G>
						<B>0.0784313753</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">CallRemote</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-175</XO>
						<YS>0.5</YS>
						<YO>-100</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>350</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="TextLabel" referent="RBXC432AE1FBD0E430D9B39337439FA8E53">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.639215708</R>
							<G>0.635294139</G>
							<B>0.647058845</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"> Call Remote</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX3157513A5B0C4730B17B4731B49CDE4A">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.749019623</R>
							<G>0.749019623</G>
							<B>0.749019623</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">MainWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX58D8F1F92D7A4C1488A83DDAFD6E7B43">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Desc</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Arguments</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ScrollingFrame" referent="RBXDCB985A5E3DC465F9171442F1F39B423">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticCanvasSize">0</token>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<Content name="BottomImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
							<Vector2 name="CanvasPosition">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<UDim2 name="CanvasSize">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<token name="ElasticBehavior">0</token>
							<token name="HorizontalScrollBarInset">0</token>
							<int name="LayoutOrder">0</int>
							<Content name="MidImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
							<string name="Name">Arguments</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<Color3 name="ScrollBarImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="ScrollBarImageTransparency">0</float>
							<int name="ScrollBarThickness">12</int>
							<token name="ScrollingDirection">2</token>
							<bool name="ScrollingEnabled">true</bool>
							<bool name="Selectable">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TopImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
							<token name="VerticalScrollBarInset">0</token>
							<token name="VerticalScrollBarPosition">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXBB027D4F2E8A47C7A40D3CE9F5CDB056">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.600000024</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">DisplayReturned</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>0</XO>
								<YS>0.625</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="TextLabel" referent="RBXCEC01BE5AC464D59842DA191C0CD1CF1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.380392194</R>
									<G>0.380392194</G>
									<B>0.380392194</B>
								</Color3>
								<float name="BackgroundTransparency">0.400000006</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">enabled</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>3</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>14</XO>
									<YS>0</YS>
									<YO>14</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.494117677</R>
									<G>0.494117677</G>
									<B>0.494117677</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="UICorner" referent="RBXFC39AAAE715843ED885263F44A19D403">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBXA167A92A308D4657818F8AB98EE9609E">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Desc2</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>30</XO>
								<YS>0.625</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.925000012</XS>
								<XO>-30</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Display values returned</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXE03958D64BF94BB2BF027BFB2DE9F4DA">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Add</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.800000012</XS>
								<XO>0</XO>
								<YS>0.625</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">+</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">24</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX3E913AA574914EAAB298954AC4D9B92B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX8A01BCDB2D3046EE941FCEE0FBFAF9A8">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Subtract</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.899999976</XS>
								<XO>0</XO>
								<YS>0.625</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">-</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">24</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXDC091AAC6E3C44568BBA881DAB9873EF">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX435FD511F03C45CF8FF9B44473F2C4BC">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.223529428</R>
								<G>0.223529428</G>
								<B>0.223529428</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0.749019623</R>
								<G>0.749019623</G>
								<B>0.749019623</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ArgumentTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX82B242C1B9694F2B97E57E176A6B7B0D">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Type</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Script</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX1C50F36A9A4A45F9B17CB96BE69488BC">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">false</bool>
								<string name="Name">Value</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<Color3 name="PlaceholderColor3">
									<R>0.698039234</R>
									<G>0.698039234</G>
									<B>0.698039234</B>
								</Color3>
								<string name="PlaceholderText"></string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.600000024</XS>
									<XO>-12</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX014C0E4A4B714BE5A380DE3EDEADF5BB">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Cancel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.524999976</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Cancel</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX3CB06A1200EB4437823DCDCCC3FB403C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX392D2BFCCD5C4FEF90CABB7785045C27">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Ok</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.075000003</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Call</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXBCF77326C69B41FE8A9FB63377F0C465">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="UICorner" referent="RBX649A4685273D4ACC8926B18A1E148CFB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>10</O>
							</UDim>
							<string name="Name"></string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX3978EB0BFC3F42698E8386429902D7AD">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.0784313753</R>
						<G>0.0784313753</G>
						<B>0.0784313753</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">TableCaution</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.300000012</XS>
						<XO>0</XO>
						<YS>0.300000012</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>350</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="Frame" referent="RBXD27FE53FA05F43C0AC4A58CB4888F8F8">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.749019623</R>
							<G>0.749019623</G>
							<B>0.749019623</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">MainWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>150</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX969C15BADEB3489E87E3216FA6742C9B">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.423529446</R>
								<G>0.423529446</G>
								<B>0.423529446</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Ok</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.300000012</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-40</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Ok</string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX325BFC4E21C94E71BA99CC51D283B512">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ScrollingFrame" referent="RBX2DBDB8B2FDC641808BB28C83C6A2401B">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticCanvasSize">0</token>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<Content name="BottomImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
							<Vector2 name="CanvasPosition">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<UDim2 name="CanvasSize">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<token name="ElasticBehavior">0</token>
							<token name="HorizontalScrollBarInset">0</token>
							<int name="LayoutOrder">0</int>
							<Content name="MidImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
							<string name="Name">TableResults</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<Color3 name="ScrollBarImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="ScrollBarImageTransparency">0</float>
							<int name="ScrollBarThickness">12</int>
							<token name="ScrollingDirection">2</token>
							<bool name="ScrollingEnabled">true</bool>
							<bool name="Selectable">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TopImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
							<token name="VerticalScrollBarInset">0</token>
							<token name="VerticalScrollBarPosition">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXCEAF86160F1D4691AB571DC119E6CDB4">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.168627456</R>
								<G>0.168627456</G>
								<B>0.168627456</B>
							</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">
								<R>0.749019623</R>
								<G>0.749019623</G>
								<B>0.749019623</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">TableTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX8FBBDF2574144329BD645F1A1EAB640D">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.400000036</R>
									<G>0.400000036</G>
									<B>0.400000036</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Type</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Script</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.800000012</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX47D38B5CFF4E480DA95736DFE0DC8279">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.400000036</R>
									<G>0.400000036</G>
									<B>0.400000036</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Value</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.600000024</XS>
									<XO>-12</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Script</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.800000012</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="UICorner" referent="RBX5B1C10E3510A4DBEA6787BCF74FEA285">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>10</O>
							</UDim>
							<string name="Name"></string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBXB970C6108127457EA3C77025CA3B7D8F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.639215708</R>
							<G>0.635294139</G>
							<B>0.647058845</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Caution</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.800000012</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX9ACAA888ABAE472380D200A18E680528">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.117647067</R>
						<G>0.117647067</G>
						<B>0.117647067</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ScriptEditor</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-368</XO>
						<YS>0.5</YS>
						<YO>-216</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>642</XO>
						<YS>0</YS>
						<YO>25</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
					<int name="ZIndex">5</int>
				</Properties>
				<Item class="Frame" referent="RBX3D3B78FC84984326AAA634248275F6FB">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647067</R>
							<G>0.117647067</G>
							<B>0.117647067</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">TopBar</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX8979904718D749AC87942D7F9B52742D">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">10</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">[Script Viewer]</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">16</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX6326C2E6198A44E3AD47AC74B91FF028">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.137254909</R>
								<G>0.137254909</G>
								<B>0.137254909</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Other</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="TextBox" referent="RBX3EB2933835574DB79A14245543C376BB">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.0980392247</R>
									<G>0.0980392247</G>
									<B>0.0980392247</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">false</bool>
								<string name="Name">FileName</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<Color3 name="PlaceholderColor3">
									<R>0.699999988</R>
									<G>0.699999988</G>
									<B>0.699999988</B>
								</Color3>
								<string name="PlaceholderText"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>125</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">File Name</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="UIListLayout" referent="RBX9AF0E03F1F12450AA1E3D005FF8CF713">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<token name="FillDirection">0</token>
								<token name="HorizontalAlignment">1</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXADE465BAEA92466796C2E9B1B7E51104">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.176470593</R>
									<G>0.176470593</G>
									<B>0.176470593</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">SaveScript</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>125</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Save Script</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX486FD6E64D314E2D884B85D49AE7A57D">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.176470593</R>
									<G>0.176470593</G>
									<B>0.176470593</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<int name="LayoutOrder">2</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">CopyScript</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>150</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Copy To Clipboard</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX16AC8BBA23144712B642377D47A7B6D0">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.176470593</R>
									<G>0.176470593</G>
									<B>0.176470593</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<int name="LayoutOrder">2</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">ClearScript</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>125</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Clear Editor</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX940B565D588D4158894D54345A92140F">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">16</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Close</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-25</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>25</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">X</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="BindableEvent" referent="RBXDF57046940ED4E999AEAC907B1F6168B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OpenScript</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX2D39D352D37247458F35E67BD176DC9E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LocalScript</string>
						<string name="ScriptGuid">{CD09C9F6-1674-4F98-96AD-D26E2FB20FE7}</string>
						<ProtectedString name="Source"><![CDATA[-- < Services > --
local UserInputService = game:GetService('UserInputService')
local TextService = game:GetService('TextService')
-- < Aliases > --
local Vector2_new = Vector2.new
local Color3_fromRGB = Color3.fromRGB
local Color3_new = Color3.new
local table_insert = table.insert
local table_concat = table.concat
local min, max, floor, ceil, random = math.min, math.max, math.floor, math.ceil, math.random
local sub, gsub, match, gmatch, find, rep, format, lower = string.sub, string.gsub, string.match, string.gmatch, string.find, string.rep, string.format, string.lower
local udim2 = UDim2.new
local newInst = Instance.new
-- < Bindables > --
local Bindables = script.Parent.Parent:WaitForChild("Bindables", 300)
local OpenScript_Bindable = Bindables:WaitForChild("OpenScript", 300)
-- < Source > --
local editor = script.Parent

local SaveScript = editor:WaitForChild("TopBar"):WaitForChild("Other"):WaitForChild('SaveScript')
local CopyScript = editor:WaitForChild("TopBar"):WaitForChild("Other"):WaitForChild('CopyScript')
local ClearScript = editor:WaitForChild("TopBar"):WaitForChild("Other"):WaitForChild('ClearScript')
local CloseEditor = editor:WaitForChild("TopBar"):WaitForChild("Close")
local FileName = editor:WaitForChild("TopBar"):WaitForChild("Other"):WaitForChild('FileName')
local Title	= editor:WaitForChild("TopBar"):WaitForChild("title")

local cache = {}

local LocalPlayer = game:GetService("Players").LocalPlayer
local PlayerMouse = LocalPlayer:GetMouse()
local Heartbeat = game:GetService("RunService").Heartbeat

local dragger = {}
do
	function dragger.new(frame)
		frame.Draggable = false
		local s, event = pcall(function()
			return frame.MouseEnter
		end)

		if s then
			frame.Active = true

			event:Connect(function()
				local input = frame.InputBegan:Connect(function(key)
					if key.UserInputType == Enum.UserInputType.MouseButton1 then
						local objectPosition = Vector2_new(PlayerMouse.X - frame.AbsolutePosition.X, PlayerMouse.Y - frame.AbsolutePosition.Y)
						while Heartbeat:Wait() and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
							pcall(function()
								frame:TweenPosition(udim2(0, PlayerMouse.X - objectPosition.X + (frame.Size.X.Offset * frame.AnchorPoint.X), 0, PlayerMouse.Y - objectPosition.Y + (frame.Size.Y.Offset * frame.AnchorPoint.Y)), 'Out', 'Quad', .1, true)
							end)
						end
					end
				end)

				local leave
				leave = frame.MouseLeave:Connect(function()
					input:Disconnect()
					leave:Disconnect()
				end)
			end)
		end
	end
end

dragger.new(editor)

local newline, tab = "\n", "\t"
local TabText = rep(" ", 4)
local SplitCacheResult, SplitCacheStr, SplitCacheDel
function Split(str, del)
	if SplitCacheStr == str and SplitCacheDel == del then
		return SplitCacheResult
	end
	local res = {}
	if #del == 0 then
		for i in gmatch(str, ".") do
			table_insert(res, i)
		end
	else
		local i,Si,si = 0, 1, nil
		str ..= del
		while i do
			si, Si, i = i, find(str, del, i + 1, true)
			if i == nil then
				return res
			end
			table_insert(res, sub(str, si + 1, Si - 1))
		end
	end
	SplitCacheResult, SplitCacheStr, SplitCacheDel = res, str, del
	return res
end

local Place = {
	new = function(X, Y)
		return {X = X, Y = Y}
	end
}

local Lexer do
	local lua_builtin = {}
	for Key, T in next, {} do
		if type(Key) == "string" then
			table_insert(lua_builtin, Key)
			if type(T) == "table" then
				for T_Key, _ in next, T do
					table_insert(lua_builtin, Key.."."..T_Key)
				end
			end
		end
	end
	local Keywords = {
		["and"] = true,
		["break"] = true,
		["do"] = true,
		["else"] = true,
		["elseif"] = true,
		["end"] = true,
		["false"] = true,
		["for"] = true,
		["function"] = true,
		["if"] = true,
		["in"] = true,
		["local"] = true,
		["nil"] = true,
		["not"] = true,
		["true"] = true,
		["or"] = true,
		["repeat"] = true,
		["continue"] = true,
		["return"] = true,
		["then"] = true,
		["until"] = true,
		["while"] = true,
		["self"] = true
	}
	local Tokens = {
		Comment = 1,
		Keyword = 2,
		Number = 3,
		Operator = 4,
		String = 5,
		Identifier = 6,
		Builtin = 7,
		Symbol = 19400
	}
	local Stream
	do
		function Stream(Input, FileName)
			local Index, Line, Column = 1,1,0
			FileName = FileName or "{none}"
			local cols = {}
			return {
				Back = function()
					Index -= 1
					local Char = sub(Input, Index, Index)
					if Char == newline then
						Line -= 1
						Column = cols[#cols]
						cols[#cols] = nil
					else
						Column -= 1
					end
				end,
				Next = function()
					local Char = sub(Input, Index, Index)
					Index += 1
					if Char == newline then
						Line += 1
						cols[#cols + 1] = Column
						Column = 0
					else
						Column += 1
					end
					return Char, {
						Index = Index,
						Line = Line,
						Column = Column,
						File = FileName
					}
				end,
				Peek = function(length)
					return sub(Input, Index, Index + (length or 1) - 1)
				end,
				EOF = function()
					return Index > #Input
				end,
				Fault = function(Error)
					error(Error .. " (col " .. Column .. ", ln " .. Line .. ", file " .. FileName .. ")", 0)
				end
			}
		end
	end

	local idenCheck, numCheck, opCheck = "abcdefghijklmnopqrstuvwxyz_", "0123456789", "+-*/%^#~=<>:,."
	local blank, dot, equal, openbrak, closebrak, backslash, dash, quote, apos = "", ".", "=", "[", "]", "\\", "-", "\"", "'"
	function Lexer(Code)
		local Input = Stream(Code)
		local Current, LastToken, self
		local Clone = function(Table)
			local R = {}
			local Table_mt = {}--getrawmetatable(Table)
			for K, V in next, Table do
				R[K] = V
			end
			if Table_mt then
				--setrawmetatable(R, Table_mt)
			end
			return R
		end
		for Key, Value in next, Clone(Tokens) do
			Tokens[Value] = Key
		end
		local function Check(Value, Type, Start)
			if Type == Tokens.Identifier then
				return find(idenCheck, lower(Value), 1, true) ~= nil or not Start and find(numCheck, Value, 1, true) ~= nil
			elseif Type == Tokens.Keyword then
				return (Keywords[Value]) and true or false
			elseif Type == Tokens.Number then
				if Value == "." and not Start then
					return true
				end
				return find(numCheck, Value, 1, true) ~= nil
			elseif Type == Tokens.Operator then
				return find(opCheck, Value, 1, true) ~= nil
			end
		end
		local function Next()
			if Current ~= nil then
				local Token = Current
				Current = nil
				return Token
			end
			if Input.EOF() then
				return nil
			end
			local Char, DebugInfo = Input.Next()
			local Result = {
				Type = Tokens.Symbol
			}
			local sValue = Char
			for i = 0, 256 do
				local open = openbrak .. rep(equal, i) .. openbrak
				if Char .. Input.Peek(#open - 1) == open then
					self.StringDepth = i + 1
					break
				end
			end
			local resulting = false
			if 0 < self.StringDepth then
				local closer = closebrak .. rep(equal, self.StringDepth - 1) .. closebrak
				Input.Back()
				local Value = blank
				while not Input.EOF() and Input.Peek(#closer) ~= closer do
					Char, DebugInfo = Input.Next()
					Value ..= Char
				end
				if Input.Peek(#closer) == closer then
					for i = 1, #closer do
						Value ..= Input.Next()
					end
					self.StringDepth = 0
				end
				Result.Value = Value
				Result.Type = Tokens.String
				resulting = true
			elseif 0 < self.CommentDepth then
				local closer = closebrak .. rep(equal, self.CommentDepth - 1) .. closebrak
				Input.Back()
				local Value = blank
				while not Input.EOF() and Input.Peek(#closer) ~= closer do
					Char, DebugInfo = Input.Next()
					Value ..= Char
				end
				if Input.Peek(#closer) == closer then
					for i = 1, #closer do
						Value ..= Input.Next()
					end
					self.CommentDepth = 0
				end
				Result.Value = Value
				Result.Type = Tokens.Comment
				resulting = true
			end
			local skip = 1
			for i = 1, #lua_builtin do
				local k = lua_builtin[i]
				if Input.Peek(#k - 1) == sub(k, 2) and Char == sub(k, 1, 1) and skip < #k then
					Result.Type = Tokens.Builtin
					Result.Value = k
					skip = #k
					resulting = true
				end
			end
			for i = 1, skip - 1 do
				Char, DebugInfo = Input.Next()
			end
			if resulting then
			elseif Check(Char, Tokens.Identifier, true) then
				local Value = Char
				while Check(Input.Peek(), Tokens.Identifier) and not Input.EOF() do
					Value ..= Input.Next()
				end
				Result.Type = Check(Value, Tokens.Keyword) and Tokens.Keyword or Tokens.Identifier
				Result.Value = Value
			elseif Char == dash and Input.Peek() == dash then
				local Value = Char .. Input.Next()
				for i = 0, 256 do
					local open = openbrak .. rep(equal, i) .. openbrak
					if Input.Peek(#open) == open then
						self.CommentDepth = i + 1
						break
					end
				end
				if 0 < self.CommentDepth then
					local closer = closebrak .. rep(equal, self.CommentDepth - 1) .. closebrak
					while not Input.EOF() and Input.Peek(#closer) ~= closer do
						Char, DebugInfo = Input.Next()
						Value ..= Char
					end
					if Input.Peek(#closer) == closer then
						for i = 1, #closer do
							Value ..= Input.Next()
						end
						self.CommentDepth = 0
					end
				else
					while not Input.EOF() and not find(newline, Char, 1, true) do
						Char, DebugInfo = Input.Next()
						Value ..= Char
					end
				end
				Result.Value = Value
				Result.Type = Tokens.Comment
			elseif Check(Char, Tokens.Number, true) or Char == dot and Check(Input.Peek(), Tokens.Number, true) then
				local Value = Char
				while Check(Input.Peek(), Tokens.Number) and not Input.EOF() do
					Value ..= Input.Next()
				end
				Result.Value = Value
				Result.Type = Tokens.Number
			elseif Char == quote then
				local Escaped = false
				local String = blank
				Result.Value = quote
				while not Input.EOF() do
					local Char = Input.Next()
					Result.Value ..= Char
					if Escaped then
						String ..= Char
						Escaped = false
					elseif Char == backslash then
						Escaped = true
					elseif Char == quote or Char == newline then
						break
					else
						String ..= Char
					end
				end
				Result.Type = Tokens.String
			elseif Char == apos then
				local Escaped = false
				local String = blank
				Result.Value = apos
				while not Input.EOF() do
					local Char = Input.Next()
					Result.Value ..= Char
					if Escaped then
						String ..= Char
						Escaped = false
					elseif Char == backslash then
						Escaped = true
					elseif Char == apos or Char == newline then
						break
					else
						String ..= Char
					end
				end
				Result.Type = Tokens.String
			elseif Check(Char, Tokens.Operator) then
				Result.Value = Char
				Result.Type = Tokens.Operator
			else
				Result.Value = Char
			end
			Result.TypeName = Tokens[Result.Type]
			LastToken = Result
			return Result
		end
		local function Peek()
			local Result = Next()
			Current = Result
			return Result
		end
		self = {
			Next = Next,
			Peek = Peek,
			EOF = function()
				return Peek() == nil
			end,
			GetLast = function()
				return LastToken
			end,
			CommentDepth = 0,
			StringDepth = 0
		}
		return self
	end
end

function Place.fromIndex(CodeEditor, Index)
	local cache = CodeEditor.PlaceCache
	local fromCache = {}
	if cache.fromIndex then
		fromCache = cache.fromIndex
	else
		cache.fromIndex = fromCache
	end
	if fromCache[Index] then
	end
	local Content = CodeEditor.Content
	local ContentUpto = sub(Content, 1, Index)
	if Index == 0 then
		return Place.new(0, 0)
	end
	local Lines = Split(ContentUpto, newline)
	local res = Place.new(#gsub(Lines[#Lines], tab, TabText), #Lines - 1)
	fromCache[Index] = res
	return res
end
function Place.toIndex(CodeEditor, Place)
	local cache = CodeEditor.PlaceCache
	local toCache = {}
	if cache.toIndex then
		toCache = cache.toIndex
	else
		cache.toIndex = toCache
	end
	local Content = CodeEditor.Content
	if Place.X == 0 and Place.Y == 0 then
		return 0
	end
	local Lines = CodeEditor.Lines
	local Index = 0
	for I = 1, Place.Y do
		Index += #Lines[I] + 1
	end
	local line = Lines[Place.Y + 1]
	local roundedX = Place.X
	local ix = 0
	for i = 1, #line do
		local c = sub(line, i, i)
		local pix = ix
		if c == tab then
			ix += #TabText
		else
			ix += 1
		end
		if Place.X == ix then
			roundedX = i
		elseif pix < Place.X and ix > Place.X then
			if Place.X - pix < ix - Place.X then
				roundedX = i - 1
			else
				roundedX = i
			end
		end
	end
	local res = Index + min(#line, roundedX)
	toCache[Place.X .. "-$-" .. Place.Y] = res
	return res
end
local Selection = {}
local Side = {Left = 1, Right = 2}
function Selection.new(Start, End, CaretSide)
	return {
		Start = Start,
		End = End,
		Side = CaretSide
	}
end
local Themes = {
	Plain = {
		LineSelection = Color3_fromRGB(46, 46, 46),
		Background = Color3_fromRGB(45, 45, 45),
		Comment = Color3_fromRGB(150, 150, 150),
		Keyword = Color3_fromRGB(204, 153, 204),
		Builtin = Color3_fromRGB(102, 153, 204),
		Number = Color3_fromRGB(250, 145, 85),
		Operator = Color3_fromRGB(102, 204, 204),
		String = Color3_fromRGB(153, 204, 153),
		Text = Color3_fromRGB(204, 204, 204),
		SelectionBackground = Color3_fromRGB(150, 150, 150),
		SelectionColor = Color3_fromRGB(0, 0, 0),
		SelectionGentle = Color3_fromRGB(65, 65, 65)
	}
}

local EditorLib = {
	["Place"] = Place,
	["Selection"] = Selection,
	NewTheme = function(Name, Theme)
		Themes[Name] = Theme
	end
}

local TextCursor = {
	Image = "rbxassetid://1188942192",
	HotspotX = 3,
	HotspotY = 8,
	Size = udim2(0, 7, 0, 17)
}
function EditorLib.Initialize(Frame, Options)
	local themestuff = {}
	local function ThemeSet(obj, prop, val)
		themestuff[obj] = themestuff[obj] or {}
		themestuff[obj][prop] = val
	end
	local baseZIndex = Frame.ZIndex
	Options.CaretBlinkingRate = tonumber(Options.CaretBlinkingRate) or .25
	Options.FontSize = tonumber(Options.FontSize or Options.TextSize) or 14
	Options.CaretFocusedOpacity = tonumber(Options.CaretOpacity and Options.CaretOpacity.Focused or Options.CaretFocusedOpacity) or 1
	Options.CaretUnfocusedOpacity = tonumber(Options.CaretOpacity and Options.CaretOpacity.Unfocused or Options.CaretUnfocusedOpacity) or 0
	Options.Theme = type(Options.Theme) == "string" and Options.Theme or "Plain"
	local SizeDot = TextService:GetTextSize(".", Options.FontSize, Options.Font, Vector2_new(1000, 1000))
	local SizeM = TextService:GetTextSize("m", Options.FontSize, Options.Font, Vector2_new(1000, 1000))
	local SizeAV = TextService:GetTextSize("AV", Options.FontSize, Options.Font, Vector2_new(1000, 1000))
	local Editor = {
		Content = "",
		Lines = {""},
		Focused = false,
		PlaceCache = {},
		Selection = Selection.new(0, 0, Side.Left),
		StartingSelection = Selection.new(0, 0, Side.Left),
		LastKeyCode = false,
		UndoStack = {},
		RedoStack = {}
	}
	local CharWidth = SizeM.X
	local CharHeight = SizeM.Y + 4
	if (SizeDot.X ~= SizeM.X or SizeDot.Y ~= SizeM.Y) and SizeAV.X ~= SizeM.X + SizeDot.X then
		return error("CodeEditor requires a monospace font with no currying", 2)
	end
	local ContentChangedEvent = newInst("BindableEvent")
	local FocusLostEvent = newInst("BindableEvent")
	local PlayerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local Container = newInst("Frame")
	Container.Name = "Container"
	Container.BorderSizePixel = 0
	Container.BackgroundColor3 = Themes[Options.Theme].Background
	ThemeSet(Container, "BackgroundColor3", "Background")
	Container.Size = udim2(1, 0, 1, 0)
	Container.ClipsDescendants = true
	local GutterSize = CharWidth * 4
	local TextArea = newInst("ScrollingFrame")
	TextArea.Name = "TextArea"
	TextArea.BackgroundTransparency = 1
	TextArea.BorderSizePixel = 0
	TextArea.Size = udim2(1, -GutterSize, 1, 0)
	TextArea.Position = udim2(0, GutterSize, 0, 0)
	TextArea.ScrollBarThickness = 10
	TextArea.ScrollBarImageTransparency = 0
	TextArea.ScrollBarImageColor3 = Color3_fromRGB(20, 20, 20)
	TextArea.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	TextArea.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	TextArea.ZIndex = 3

	local Gutter = newInst("Frame")
	Gutter.Name = "Gutter"
	Gutter.ZIndex = baseZIndex
	Gutter.BorderSizePixel = 0
	Gutter.BackgroundTransparency = .96
	Gutter.Size = udim2(0, GutterSize - 5, 1.5, 0)
	local GoodMouseDetector = newInst("TextButton")
	GoodMouseDetector.Text = [[]]
	GoodMouseDetector.BackgroundTransparency = 1
	GoodMouseDetector.Size = udim2(1, 0, 1, 0)
	GoodMouseDetector.Position = udim2(0, 0, 0, 0)
	GoodMouseDetector.Visible = false
	local Scroll = newInst("TextButton")
	Scroll.Name = "VertScroll"
	Scroll.Size = udim2(0, 10, 1, 0)
	Scroll.Position = udim2(1, -10, 0, 0)
	Scroll.BackgroundTransparency = 1
	Scroll.Text = ""
	Scroll.ZIndex = 1000
	Scroll.Parent = Container
	local ScrollBar = newInst("TextButton")
	ScrollBar.Name = "ScrollBar"
	ScrollBar.Size = udim2(1, 0, 0, 36)
	ScrollBar.Position = udim2(0, 0, 0, 0)
	ScrollBar.Text = ""
	ScrollBar.BackgroundColor3 = Themes[Options.Theme].ScrollBar or Color3_fromRGB(120, 120, 120)
	ScrollBar.BackgroundTransparency = .75
	ScrollBar.BorderSizePixel = 0
	ScrollBar.AutoButtonColor = false
	ScrollBar.ZIndex = 3 + baseZIndex
	ScrollBar.Parent = Scroll
	local CaretIndicator = newInst("Frame")
	CaretIndicator.Name = "CaretIndicator"
	CaretIndicator.Size = udim2(1, 0, 0, 2)
	CaretIndicator.Position = udim2(0, 0, 0, 0)
	CaretIndicator.BorderSizePixel = 0
	CaretIndicator.BackgroundColor3 = Themes[Options.Theme].Text
	ThemeSet(CaretIndicator, "BackgroundColor3", "Text")
	CaretIndicator.BackgroundTransparency = .29803921568627456
	CaretIndicator.ZIndex = 4 + baseZIndex
	CaretIndicator.Parent = Scroll
	local MarkersFolder = newInst("Folder", Scroll)
	local markers = {}
	local updateMarkers

	do
		local lerp = function(a, b, r)
			return a + r * (b - a)
		end
		function updateMarkers()
			MarkersFolder:ClearAllChildren()
			local ra = Themes[Options.Theme].Background.r
			local ga = Themes[Options.Theme].Background.g
			local ba = Themes[Options.Theme].Background.b
			local rb = Themes[Options.Theme].Text.r
			local gb = Themes[Options.Theme].Text.g
			local bb = Themes[Options.Theme].Text.b
			local r = lerp(ra, rb, .2980392156862745)
			local g = lerp(ga, gb, .2980392156862745)
			local b = lerp(ba, bb, .2980392156862745)
			local color = Color3_new(r, g, b)
			for i, v in ipairs(markers) do
				local Marker = newInst("Frame")
				Marker.BorderSizePixel = 0
				Marker.BackgroundColor3 = color
				Marker.Size = udim2(0, 4, 0, 6)
				Marker.Position = udim2(0, 4, v * CharHeight / TextArea.CanvasSize.Y.Offset, 0)
				Marker.ZIndex = 4 + baseZIndex
				Marker.Parent = MarkersFolder
			end
		end
	end
	do
		TextArea.Changed:Connect(function(property)
			if property == "CanvasSize" or property == "CanvasPosition" then
				Gutter.Position = udim2(0, 0, 0, -TextArea.CanvasPosition.Y)
			end
		end)
	end
	local ScrollBorder = newInst("Frame")
	ScrollBorder.Name = "ScrollBorder"
	ScrollBorder.Position = udim2(0, -1, 0, 0)
	ScrollBorder.Size = udim2(0, 1, 1, 0)
	ScrollBorder.BorderSizePixel = 0
	ScrollBorder.BackgroundColor3 = Color3_fromRGB(34, 34, 34)
	ScrollBorder.Parent = Scroll
	do
		TextArea.Changed:Connect(function(property)
			if property == "CanvasSize" or property == "CanvasPosition" then
				local percent = TextArea.AbsoluteWindowSize.X / TextArea.CanvasSize.X.Offset
				ScrollBar.Size = udim2(percent, 0, 1, 0)
				local max = max(TextArea.CanvasSize.X.Offset - TextArea.AbsoluteWindowSize.X, 0)
				local percent = max == 0 and 0 or TextArea.CanvasPosition.X / max
				local x = percent * (Scroll.AbsoluteSize.X - ScrollBar.AbsoluteSize.X)
				ScrollBar.Position = udim2(0, x, 0, 0)
				Scroll.Visible = false
			end
		end)
	end
	local LineSelection = newInst("Frame")
	LineSelection.Name = "LineSelection"
	LineSelection.BackgroundColor3 = Themes[Options.Theme].Background
	ThemeSet(LineSelection, "BackgroundColor3", "Background")
	LineSelection.BorderSizePixel = 2
	LineSelection.BorderColor3 = Themes[Options.Theme].LineSelection
	ThemeSet(LineSelection, "BorderColor3", "LineSelection")
	LineSelection.Size = udim2(1, -4, 0, CharHeight - 4)
	LineSelection.Position = udim2(0, 2, 0, 2)
	LineSelection.ZIndex = -1 + baseZIndex
	LineSelection.Parent = TextArea
	LineSelection.Visible = false

	local ErrorHighlighter = newInst("Frame")
	ErrorHighlighter.Name = "ErrorHighlighter"
	ErrorHighlighter.BackgroundColor3 = Color3_fromRGB(255, 0, 0)
	ErrorHighlighter.BackgroundTransparency = .9
	ErrorHighlighter.BorderSizePixel = 0
	ErrorHighlighter.Size = udim2(1, -4, 0, CharHeight - 4)
	ErrorHighlighter.Position = udim2(0, 2, 0, 2)
	ErrorHighlighter.ZIndex = 5 + baseZIndex
	ErrorHighlighter.Visible = false
	ErrorHighlighter.Parent = TextArea

	local ErrorMessage = newInst("TextLabel")
	ErrorMessage.Name = "ErrorMessage"
	ErrorMessage.BackgroundColor3 = Themes[Options.Theme].Background:Lerp(Color3_new(1, 1, 1), .1)
	ErrorMessage.TextColor3 = Color3_fromRGB(255, 152, 152)
	ErrorMessage.BorderSizePixel = 0
	ErrorMessage.Visible = false
	ErrorMessage.Size = udim2(0, 150, 0, CharHeight - 4)
	ErrorMessage.Position = udim2(0, 2, 0, 2)
	ErrorMessage.ZIndex = 6 + baseZIndex
	ErrorMessage.Parent = Container

	local Tokens = newInst("Frame")
	Tokens.BackgroundTransparency = 1
	Tokens.Name = "Tokens"
	Tokens.Parent = TextArea

	local Selection = newInst("Frame")
	Selection.BackgroundTransparency = 1
	Selection.Name = "Selection"
	Selection.ZIndex = baseZIndex
	Selection.Parent = TextArea

	local TextBox = newInst("TextBox")
	TextBox.BackgroundTransparency = 1
	TextBox.Size = udim2(0, 0, 0, 0)
	TextBox.Position = udim2(-1, 0, -1, 0)
	TextBox.Text = ""
	TextBox.ShowNativeInput = false
	TextBox.MultiLine = true
	TextBox.ClearTextOnFocus = true

	local Caret = newInst("Frame")
	Caret.Name = "Caret"
	Caret.BorderSizePixel = 0
	Caret.BackgroundColor3 = Themes[Options.Theme].Text
	ThemeSet(Caret, "BackgroundColor3", "Text")
	Caret.Size = udim2(0, 2, 0, CharHeight)
	Caret.Position = udim2(0, 0, 0, 0)
	Caret.ZIndex = 100
	Caret.Visible = false

	local selectedword
	local tokens = {}

	local function NewToken(Content, Color, Position, Parent)
		local Token = newInst("TextLabel")
		Token.BorderSizePixel = 0
		Token.TextColor3 = Themes[Options.Theme][Color]
		Token.BackgroundTransparency = (Content == selectedword) and 0 or 1
		Token.BackgroundColor3 = Themes[Options.Theme].SelectionGentle
		Token.Size = udim2(0, CharWidth * #Content, 0, CharHeight)
		Token.Position = udim2(0, Position.X * CharWidth, 0, Position.Y * CharHeight)
		Token.Font = Options.Font
		Token.TextSize = Options.FontSize
		Token.Text = Content
		Token.TextXAlignment = "Left"
		Token.ZIndex = baseZIndex
		Token.Parent = Parent
		tokens[#tokens + 1] = Token
	end

	local function updateselected()
		for _, v in ipairs(tokens) do
			v.BackgroundTransparency = (v.Text == selectedword) and 0 or 1
		end
		markers = {}
		if selectedword and selectedword ~= "" and selectedword ~= tab then
			for LineNumber = 1, #Editor.Lines do
				local line = Editor.Lines[LineNumber]
				local Dnable = "[^A-Za-z0-9_]"
				local has = false
				if sub(line, 1, #selectedword) == selectedword then
					has = true
				elseif sub(line, #line - #selectedword + 1) == selectedword then
					has = true
				elseif match(line, Dnable .. gsub(selectedword, "%W", "%%%1") .. Dnable) then
					has = true
				end
				if has then
					markers[#markers + 1] = LineNumber - 1
				end
			end
		end
		updateMarkers()
	end
	local DrawnLines = {}
	local depth, sdepth = {}, {}
	local function DrawTokens()
		local LineBegin = floor(TextArea.CanvasPosition.Y / CharHeight)
		local LineEnd = ceil((TextArea.CanvasPosition.Y + TextArea.AbsoluteWindowSize.Y) / CharHeight)
		LineEnd = min(LineEnd, #Editor.Lines)
		for LineNumber = 1, LineBegin - 1 do
			if not depth[LineNumber] then
				local line = Editor.Lines[LineNumber] or ""
				if match(line, "%[%=+%[") or match(line, "%]%=+%]") then
					local LexerStream = Lexer(line)
					LexerStream.CommentDepth = depth[LineNumber - 1] or 0
					LexerStream.StringDepth = sdepth[LineNumber - 1] or 0
					while not LexerStream.EOF() do
						LexerStream.Next()
					end
					sdepth[LineNumber] = LexerStream.StringDepth
					depth[LineNumber] = LexerStream.CommentDepth
				else
					sdepth[LineNumber] = sdepth[LineNumber - 1] or 0
					depth[LineNumber] = depth[LineNumber - 1] or 0
				end
			end
		end
		for LineNumber = LineBegin, LineEnd do
			if not DrawnLines[LineNumber] then
				DrawnLines[LineNumber] = true
				local X, Y = 0, LineNumber - 1
				local LineLabel = newInst("TextLabel")
				LineLabel.BorderSizePixel = 0
				LineLabel.TextColor3 = Color3_fromRGB(144, 145, 139)
				LineLabel.BackgroundTransparency = 1
				LineLabel.Size = udim2(1, 0, 0, CharHeight)
				LineLabel.Position = udim2(0, 0, 0, Y * CharHeight)
				LineLabel.Font = Options.Font
				LineLabel.TextSize = Options.FontSize
				LineLabel.TextXAlignment = Enum.TextXAlignment.Right
				LineLabel.Text = LineNumber
				LineLabel.Parent = Gutter
				LineLabel.ZIndex = baseZIndex
				if Editor.Lines[Y + 1] then
					local LexerStream = Lexer(Editor.Lines[Y + 1])
					LexerStream.CommentDepth = depth[LineNumber - 1] or 0
					LexerStream.StringDepth = sdepth[LineNumber - 1] or 0
					while not LexerStream.EOF() do
						local Token = LexerStream.Next()
						local Value = Token.Value
						local TokenType = Token.TypeName
						if find(" \t\r\n", Value, 1, true) == nil then
							NewToken(gsub(Value, tab, TabText), (TokenType == "Identifier" or TokenType == "Symbol") and "Text" or TokenType, Place.new(X, Y), Tokens)
						end
						X += #gsub(Value, tab, TabText)
					end
					depth[LineNumber] = LexerStream.CommentDepth
					sdepth[LineNumber] = LexerStream.StringDepth
				end
			end
		end
	end
	TextArea.Changed:Connect(function(Property)
		if Property == "CanvasPosition" or Property == "AbsoluteWindowSize" then
			DrawTokens()
		end
	end)
	local function ClearTokensAndSelection()
		depth = {}
		Tokens:ClearAllChildren()
		Selection:ClearAllChildren()
		Gutter:ClearAllChildren()
	end
	local function Write(Content, Start, End)
		local InBetween = sub(Editor.Content, Start + 1, End)
		local NoLN = find(InBetween, newline, 1, true) == nil and find(Content, newline, 1, true) == nil
		local StartPlace, EndPlace
		if NoLN then
			StartPlace, EndPlace = Place.fromIndex(Editor, Start), Place.fromIndex(Editor, End)
		end
		Editor.Content = sub(Editor.Content, 1, Start) .. Content .. sub(Editor.Content, End + 1)
		ContentChangedEvent:Fire(Editor.Content)
		Editor.PlaceCache = {}
		local CanvasWidth = TextArea.CanvasSize.X.Offset - 14
		Editor.Lines = Split(Editor.Content, newline)
		for _, Res in ipairs(Editor.Lines) do
			local width = #gsub(Res, tab, TabText) * CharWidth
			if CanvasWidth < width then
				CanvasWidth = width
			end
		end

		ClearTokensAndSelection()
		TextArea.CanvasSize = udim2(0, 3000, 0, select(2, gsub(Editor.Content, newline, "")) * CharHeight + TextArea.AbsoluteWindowSize.Y)
		DrawnLines = {}
		DrawTokens()
	end
	local function SetContent(Content)
		Editor.Content = Content
		ContentChangedEvent:Fire(Editor.Content)
		Editor.PlaceCache = {}
		Editor.Lines = Split(Editor.Content, newline)
		ClearTokensAndSelection()
		local CanvasWidth = TextArea.CanvasSize.X.Offset - 14
		for _, Res in ipairs(Editor.Lines) do
			if CanvasWidth < #Res then
				CanvasWidth = #Res * CharWidth
			end
		end
		TextArea.CanvasSize = udim2(0, 3000, 0, select(2, gsub(Editor.Content, newline, "")) * CharHeight + TextArea.AbsoluteWindowSize.Y)
		DrawnLines = {}
		DrawTokens()
	end
	local function UpdateSelection()
		Selection:ClearAllChildren()
		Selection.ZIndex = (Themes[Options.Theme].SelectionColor) and 2 or 1 + baseZIndex
		Tokens.ZIndex = (Themes[Options.Theme].SelectionColor) and 1 or 2 + baseZIndex
		if Editor.Selection.Start == Editor.Selection.End then
			LineSelection.Visible = true
			local CaretPlace = Place.fromIndex(Editor, Editor.Selection.Start)
			LineSelection.Position = udim2(0, 2, 0, CharHeight * CaretPlace.Y + 2)
		else
			LineSelection.Visible = false
		end
		local Index = 0
		local Start = #gsub(sub(Editor.Content, 1, Editor.Selection.Start), tab, TabText)
		local End = #gsub(sub(Editor.Content, 1, Editor.Selection.End), tab, TabText)
		for LineNumber, Line in ipairs(Editor.Lines) do
			Line = gsub(Line, tab, TabText)
			local StartX = Start - Index
			local EndX = End - Index
			local Y = LineNumber - 1
			local GoesOverLine = false
			if StartX < 0 then
				StartX = 0
			end
			if EndX > #Line then
				GoesOverLine = true
				EndX = #Line
			end
			local Width = EndX - StartX
			if GoesOverLine then
				Width += .5
			end
			if Width > 0 then
				local color = Themes[Options.Theme].SelectionColor
				local SelectionSegment = newInst(color and "TextLabel" or "Frame")
				SelectionSegment.BorderSizePixel = 0
				if color then
					SelectionSegment.TextColor3 = color
					SelectionSegment.Font = Options.Font
					SelectionSegment.TextSize = Options.FontSize
					SelectionSegment.Text = sub(Line, StartX + 1, EndX)
					SelectionSegment.TextXAlignment = "Left"
					SelectionSegment.ZIndex = baseZIndex
				end
				SelectionSegment.BackgroundColor3 = Themes[Options.Theme].SelectionBackground
				SelectionSegment.Size = udim2(0, CharWidth * Width, 0, CharHeight)
				SelectionSegment.Position = udim2(0, StartX * CharWidth, 0, Y * CharHeight)
				SelectionSegment.Parent = Selection
			end
			Index += #Line + 1
		end
		local NewY = Caret.Position.Y.Offset
		local MinBoundsY = TextArea.CanvasPosition.Y
		local MaxBoundsY = TextArea.CanvasPosition.Y + TextArea.AbsoluteWindowSize.Y - CharHeight
		if NewY < MinBoundsY then
			TextArea.CanvasPosition = Vector2_new(0, NewY)
		end
		if NewY > MaxBoundsY then
			TextArea.CanvasPosition = Vector2_new(0, NewY - TextArea.AbsoluteWindowSize.Y + CharHeight)
		end
	end
	TextBox.Parent = TextArea
	Caret.Parent = TextArea
	TextArea.Parent = Container
	Gutter.Parent = Container
	Container.Parent = Frame
	local function updateCaret(CaretPlace)
		Caret.Position = udim2(0, CaretPlace.X * CharWidth, 0, CaretPlace.Y * CharHeight)
		local percent = CaretPlace.Y * CharHeight / TextArea.CanvasSize.Y.Offset
		CaretIndicator.Position = udim2(0, 0, percent, -1)
	end
	local PressedKey, WorkingKey, LeftShift, RightShift, Shift, LeftCtrl, RightCtrl, Ctrl
	local MovementTimeout = tick()
	local BeginSelect, MoveCaret
	local function SetVisibility(Visible)
		Editor.Visible = Visible
	end
	local function selectWord()
		local Index = (Editor.Selection.Side == Side.Right) and Editor.Selection.End or Editor.Selection.Start
		local code = Editor.Content
		local left = max(Index - 1, 0)
		local right = min(Index + 1, #code)
		local Dable = "[A-Za-z0-9_]"
		while left ~= 0 and match(sub(code, left + 1, left + 1), Dable) do
			left -= 1
		end
		while right ~= #code and match(sub(code, right, right), Dable) do
			right += 1
		end
		if not match(sub(code, left + 1, left + 1), Dable) then
			left += 1
		end
		if not match(sub(code, right, right), Dable) then
			right -= 1
		end
		if left < right then
			Editor.Selection.Start = left
			Editor.Selection.End = right
		else
			Editor.Selection.Start = Index
			Editor.Selection.End = Index
		end
	end
	local settledAt
	local lastClick, lastCaretPos = 0, 0
	local function PushToUndoStack()
		Editor.UndoStack[#Editor.UndoStack + 1] = {
			Content = Editor.Content,
			Selection = {
				Start = Editor.Selection.Start,
				End = Editor.Selection.End,
				Side = Editor.Selection.Side
			},
			LastKeyCode = false
		}
		if #Editor.RedoStack > 0 then
			Editor.RedoStack = {}
		end
	end
	local function Undo()
		if #Editor.UndoStack > 1 then
			local Thing = Editor.UndoStack[#Editor.UndoStack - 1]
			for Key, Value in next, Thing do
				Editor[Key] = Value
			end
			Editor.SetContent(Thing.Content)
			Editor.RedoStack[#Editor.RedoStack + 1] = Editor.UndoStack[#Editor.UndoStack]
			Editor.UndoStack[#Editor.UndoStack] = nil
		end
	end
	local function Redo()
		if #Editor.RedoStack > 0 then
			local Thing = Editor.RedoStack[#Editor.RedoStack]
			for Key, Value in next, Thing do
				Editor[Key] = Value
			end
			Editor.SetContent(Thing.Content)
			Editor.UndoStack[#Editor.UndoStack + 1] = Thing
			Editor.RedoStack[#Editor.RedoStack] = nil
		end
	end
	PlayerMouse.Move:Connect(function()
		if BeginSelect then
			local Index = GetIndexAtMouse()
			if type(BeginSelect) == "number" then
				BeginSelect = {BeginSelect, BeginSelect}
			end
			Editor.Selection.Start = min(BeginSelect[1], Index)
			Editor.Selection.End = max(BeginSelect[2], Index)
			if Editor.Selection.Start ~= Editor.Selection.End then
				if Editor.Selection.Start == Index then
					Editor.Selection.Side = Side.Left
				else
					Editor.Selection.Side = Side.Right
				end
			end
			if BeginSelect[3] then
				selectWord()
				Editor.Selection.Start = min(BeginSelect[1], Editor.Selection.Start)
				Editor.Selection.End = max(BeginSelect[2], Editor.Selection.End)
			end
			local Ind = Editor.Selection.Start
			if Editor.Selection.Side == Side.Right then
				Ind = Editor.Selection.End
			end
			local CaretPlace = Place.fromIndex(Editor, Ind)
			updateCaret(CaretPlace)
			UpdateSelection()
		end
	end)
	TextBox.Focused:Connect(function()
		Editor.Focused = true
	end)
	TextBox.FocusLost:Connect(function()
		Editor.Focused = false
		FocusLostEvent:Fire()
		PressedKey = nil
		WorkingKey = nil
	end)
	function MoveCaret(Amount)
		local Direction = Amount < 0 and -1 or 1
		if Amount < 0 then
			Amount = -Amount
		end
		for Index = 1, Amount do
			if Direction == -1 then
				local Start = Editor.Selection.Start
				local End = Editor.Selection.End
				if Shift then
					if Start == End then
						if Start > 0 then
							Editor.Selection.Start = Start - 1
							Editor.Selection.Side = Side.Left
						end
					elseif Editor.Selection.Side == Side.Left then
						if Start > 0 then
							Editor.Selection.Start = Start - 1
						end
					elseif Editor.Selection.Side == Side.Right then
						Editor.Selection.End = End - 1
					end
				elseif Start ~= End then
					Editor.Selection.End = Start
				elseif Start > 0 then
					Editor.Selection.Start = Start - 1
					Editor.Selection.End = End - 1
				end
			elseif Direction == 1 then
				local Start = Editor.Selection.Start
				local End = Editor.Selection.End
				if Shift then
					if Start == End then
						if Start < #Editor.Content then
							Editor.Selection.End = End + 1
							Editor.Selection.Side = Side.Right
						end
					elseif Editor.Selection.Side == Side.Left then
						Editor.Selection.Start = Start + 1
					elseif Editor.Selection.Side == Side.Right and End < #Editor.Content then
						Editor.Selection.End = End + 1
					end
				elseif Start ~= End then
					Editor.Selection.Start = End
				elseif Start < #Editor.Content then
					Editor.Selection.Start = Start + 1
					Editor.Selection.End = End + 1
				end
			end
		end
	end
	local LastKeyCode
	local function ProcessInput(Type, Data)
		MovementTimeout = tick() + .25
		if Type == "Control+Key" then
			LastKeyCode = nil
		elseif Type == "KeyPress" then
			local Dat = Data
			if Dat == Enum.KeyCode.Up then
				Dat = Enum.KeyCode.Down
			end
			if LastKeyCode ~= Dat then
				Editor.StartingSelection.Start = Editor.Selection.Start
				Editor.StartingSelection.End = Editor.Selection.End
				Editor.StartingSelection.Side = Editor.Selection.Side
			end
			LastKeyCode = Dat
		elseif Type == "StringInput" then
			local Start = Editor.Selection.Start
			local End = Editor.Selection.End
			if Data == newline then
				local CaretPlaceInd = Editor.Selection.Start
				if Editor.Selection.Side == Side.Right then
					CaretPlaceInd = Editor.Selection.End
				end
				local CaretPlace = Place.fromIndex(Editor, CaretPlaceInd)
				local CaretLine = Editor.Lines
				CaretLine = CaretLine[CaretPlace.Y + 1]
				CaretLine = sub(CaretLine, 1, CaretPlace.X)
				local TabAmount = 0
				while sub(CaretLine, TabAmount + 1, TabAmount + 1) == tab do
					TabAmount += 1
				end
				Data ..= rep(tab, TabAmount)
				local SpTabAmount = 0
				while sub(CaretLine, SpTabAmount + 1, SpTabAmount + 1) == " " do
					SpTabAmount += 1
				end
				Data ..= gsub(rep(" ", SpTabAmount), TabText, tab)
				Write(Data, Start, End)
				Editor.Selection.Start = Start + #Data
				Editor.Selection.End = Editor.Selection.Start
				PushToUndoStack()
			elseif Data == tab and Editor.Selection.Start ~= Editor.Selection.End then
				local lstart = Place.fromIndex(Editor, Editor.Selection.Start)
				local lend = Place.fromIndex(Editor, Editor.Selection.End)
				local changes = 0
				local change1 = 0
				for i = lstart.Y + 1, lend.Y + 1 do
					local line = Editor.Lines[i]
					local change = 0
					if Shift then
						if sub(line, 1, 1) == tab then
							line = sub(line, 2)
							change = -1
						end
					else
						line = tab .. line
						change = 1
					end
					changes += change
					if i == lstart.Y + 1 then
						change1 = change
					end
					Editor.Lines[i] = line
				end
				SetContent(table_concat(Editor.Lines, newline))
				Editor.Selection.Start += change1
				Editor.Selection.End += changes
				PushToUndoStack()
			else
				Write(Data, Start, End)
				Editor.Selection.Start = Start + #Data
				Editor.Selection.End = Editor.Selection.Start
				PushToUndoStack()
			end
		end
		local CaretPlaceInd = (Editor.Selection.Side == Side.Right) and Editor.Selection.End or Editor.Selection.Start
		local CaretPlace = Place.fromIndex(Editor, CaretPlaceInd)
		updateCaret(CaretPlace)
		UpdateSelection()
	end
	TextBox:GetPropertyChangedSignal("Text"):Connect(function()
		if TextBox.Text ~= "" then
			ProcessInput("StringInput", (gsub(TextBox.Text, "\r", "")))
			TextBox.Text = ""
		end
	end)
	UserInputService.InputBegan:Connect(function(Input)
		if UserInputService:GetFocusedTextBox() == TextBox and Input.UserInputType ~= Enum.UserInputType.MouseButton1 then
			local KeyCode = Input.KeyCode
			if KeyCode == Enum.KeyCode.LeftShift then
				LeftShift = true
				Shift = true
			elseif KeyCode == Enum.KeyCode.RightShift then
				RightShift = true
				Shift = true
			elseif KeyCode == Enum.KeyCode.LeftControl then
				LeftCtrl = true
				Ctrl = true
			elseif KeyCode == Enum.KeyCode.RightControl then
				RightCtrl = true
				Ctrl = true
			else
				PressedKey = KeyCode
				ProcessInput(not (not Ctrl or Shift) and "Control+Key" or "KeyPress", KeyCode)
				local UniqueID = newproxy()
				WorkingKey = UniqueID
				wait(.25)
				if WorkingKey == UniqueID then
					WorkingKey = true
				end
			end
		end
	end)
	UserInputService.InputEnded:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			BeginSelect = nil
		end
		if Input.KeyCode == Enum.KeyCode.LeftShift then
			LeftShift = false
		end
		if Input.KeyCode == Enum.KeyCode.RightShift then
			RightShift = false
		end
		if Input.KeyCode == Enum.KeyCode.LeftControl then
			LeftCtrl = false
		end
		if Input.KeyCode == Enum.KeyCode.RightControl then
			RightCtrl = false
		end
		Shift = LeftShift or RightShift
		Ctrl = LeftCtrl or RightCtrl
		if PressedKey == Input.KeyCode then
			PressedKey = nil
			WorkingKey = nil
		end
	end)
	local Count = 0
	Heartbeat:Connect(function()
		if Count == 0 and WorkingKey == true then
			ProcessInput(not (not Ctrl or Shift) and "Control+Key" or "KeyPress", PressedKey)
		end
		Count = (Count + 1) % 2
	end)
	Editor.Write = Write
	Editor.SetContent = SetContent
	Editor.SetVisibility = SetVisibility
	Editor.PushToUndoStack = PushToUndoStack
	Editor.Undo = Undo
	Editor.Redo = Redo
	function Editor.UpdateTheme(theme)
		for obj, v in next, themestuff do
			for key, value in next, v do
				obj[key] = Themes[theme][value]
			end
		end
		Options.Theme = theme
		ClearTokensAndSelection()
		updateMarkers()
	end
	function Editor.HighlightError(Visible, Line, Msg)
		if Visible then
			ErrorHighlighter.Position = udim2(0, 2, 0, CharHeight * Line + 2 - CharHeight)
			ErrorMessage.Text = "Line " .. Line .. " - " .. Msg
			ErrorMessage.Size = udim2(0, ErrorMessage.TextBounds.X + 15, 0, ErrorMessage.TextBounds.Y + 8)
		else
			ErrorMessage.Visible = false
		end
		ErrorHighlighter.Visible = Visible
	end
	Editor.ContentChanged = ContentChangedEvent.Event
	Editor.FocusLost = FocusLostEvent.Event
	TextArea.CanvasPosition = Vector2_new(0, 0)
	return Editor, TextBox, ClearTokensAndSelection, TextArea
end

local ScriptEditor, EditorGrid, Clear, TxtArea = EditorLib.Initialize(editor:FindFirstChild("Editor"), {
	Font = Enum.Font.Code,
	TextSize = 16,
	Language = "Luau",
	CaretBlinkingRate = .5
})

local function openScript(o)
	EditorGrid.Text = ""

	local Triggers = {'--This script could not be decompiled due to it having no bytecode', '"--This script could not be decompiled due to it having no bytecode"'}

	local id = o:GetDebugId()

	if cache[id] then
		ScriptEditor.SetContent(cache[id])
	else
		local decompiled = decompile(o)
		if find(decompiled, Triggers[1]) and not find(decompiled, Triggers[2]) then
			if #o.Source > 0 then
				decompiled = format("-- Script GUID: %s\n\n%s\n", tostring(gethiddenproperty(o,"ScriptGuid")) or "{Exploit generated script}", o.Source)
			elseif #o.Source <= 0 then
				decompiled = "-- Synapse X Dex Decompiler\n-- This script has no bytecode and no source.\n-- It can not be viewed."
			end
		elseif #decompiled <= 0 then
			decompiled = format("-- Script GUID: %s\n-- Synapse X Dex Decompiler\n-- Decompiler returned nothing, script has no bytecode or has anti-decompiler implemented.", tostring(gethiddenproperty(o,"ScriptGuid")))
		else
			decompiled = format("-- Script GUID: %s\n%s", tostring(gethiddenproperty(o,"ScriptGuid")), decompiled)
		end
		cache[id] = decompiled
		Heartbeat:Wait()
		ScriptEditor.SetContent(cache[id])
	end

	Title.Text = "[Script Viewer] Viewing: " .. o.Name
end

OpenScript_Bindable.Event:Connect(function(object)
	script.Parent.Visible = true
	openScript(object)
end)

SaveScript.Activated:Connect(function()
	if ScriptEditor.Content ~= "" then
		local fileName = FileName.Text
		if fileName == "File Name" or FileName == "" then
			fileName = "LocalScript_" .. random(1, 5000)
		end
		fileName ..= ".lua"
		writefile(fileName, ScriptEditor.Content)
	end
end)

CopyScript.Activated:Connect(function()
	setclipboard(ScriptEditor.Content)
end)

ClearScript.Activated:Connect(function()
	ScriptEditor.SetContent("")
	TxtArea.CanvasPosition = Vector2_new(0, 0)
	Title.Text = "[Script Viewer]"
	Clear()
end)

CloseEditor.Activated:Connect(function()
	script.Parent.Visible = false
end)]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX297A5FB46FA74ED4B0DD29308577E016">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Editor</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>25</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>642</XO>
							<YS>0</YS>
							<YO>436</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
			</Item>
			<Item class="ImageButton" referent="RBX93B9623C279846159CC6A2805608DDC3">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoButtonColor">true</bool>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="HoverImage"><null></null></Content>
					<Content name="Image"><url>rbxassetid://1513966937</url></Content>
					<Color3 name="ImageColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0.100000001</float>
					<int name="LayoutOrder">0</int>
					<bool name="Modal">false</bool>
					<string name="Name">Toggle</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Content name="PressedImage"><null></null></Content>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">180</float>
					<token name="ScaleType">0</token>
					<bool name="Selectable">true</bool>
					<bool name="Selected">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>40</XO>
						<YS>0</YS>
						<YO>40</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBXAEDE2FA327994371B34B2D2686071CBC">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>2</XO>
							<YS>0</YS>
							<YO>10</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">180</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">&lt;</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">24</float>
						<Color3 name="TextStrokeColor3">
							<R>0.117647067</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX45D51C5427214457A5301616847E002E">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<float name="BackgroundTransparency">0.100000001</float>
					<Color3 name="BorderColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">PropertiesFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0.5</YS>
						<YO>36</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>300</XO>
						<YS>0.5</YS>
						<YO>-36</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="LocalScript" referent="RBXD34F2193E0104ED989A7C791F3C1CFC7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Properties</string>
						<string name="ScriptGuid">{2AC1441A-C30C-4919-BF0B-90D7478B2332}</string>
						<ProtectedString name="Source"><![CDATA[--[[

Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type

--]]

wait(0.2)
local math_floor = math.floor
local math_ceil = math.ceil
local math_max = math.max
local string_len = string.len
local string_sub = string.sub
local string_gsub = string.gsub
local string_split = string.split
local string_format = string.format
local string_find = string.find
local string_lower = string.lower
local table_concat = table.concat
local table_insert = table.insert
local table_sort = table.sort
local Instance_new = Instance.new
local Color3_fromRGB = Color3.fromRGB
local Color3_new = Color3.new
local UDim2_new = UDim2.new
local Vector3_new = Vector3.new
local Vector2_new = Vector2.new
local NumberRange_new = NumberRange.new
local BrickColor_palette = BrickColor.palette

local Gui = script.Parent.Parent
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")
print = ExplorerFrame:WaitForChild("GetPrint"):Invoke()


-- Services
local Teams = game:GetService("Teams")
local Workspace = game:GetService("Workspace")
local Debris = game:GetService("Debris")
local ContentProvider = game:GetService("ContentProvider")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RemoteEvent = ReplicatedStorage:WaitForChild("DexEvent");

-- Functions
function httpGet(url)
	return game:HttpGet(url,true)
end

-- RbxApi Stuff

local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
local maxChunkSize = 100 * 1000
local ApiJson
if script:FindFirstChild("RawApiJson") then
	ApiJson = script.RawApiJson
else
	ApiJson = ""
end

function getLocalApiJson()
	return require(ApiJson) -- scel was here oOOooOoOOoOOoOOoOo
end

function getCurrentApiJson()
	local jsonStr = nil
	if readfile and getelysianpath then
		if readfile(getelysianpath().."Xpl0rerApi.txt") then
			print("Api found in folder!")
			jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
			return jsonStr
		end
	end
	local success
	if not SetGlobal then
		success = pcall(function()
			jsonStr = httpGet(apiUrl)
			print("Fetched json successfully")
		end)
	end
	if success then
		print("Returning json")
		--print(jsonStr:sub(1,500))
		return jsonStr
	else
		print("Error fetching json: " .. tostring(err))
		print("Falling back to local copy")
		return getLocalApiJson()
	end
end

function splitStringIntoChunks(jsonStr)
	-- Splits up a string into a table with a given size
	local t = {}
	for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
		local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
		table.insert(t, str)
	end
	return t
end

local jsonToParse = getCurrentApiJson()
local apiChunks = splitStringIntoChunks(jsonToParse)

function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

	-- Services
	local HttpService = game:GetService("HttpService")
	local ServerStorage = game:GetService("ServerStorage")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")

	-- Remotes
	--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
	--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

	-- Functions
	local JsonDecode = function(s) return HttpService:JSONDecode(s) end

	local function GetApiRemoteFunction(index)
		if (apiChunks[index]) then
			return apiChunks[index], #apiChunks
		else
			print("Bad index for GetApiJson")
			return nil
		end
	end

	local function getApiJson()
		local apiTable = {}
		local firstPage, pageCount = GetApiRemoteFunction(1)
		table.insert(apiTable, firstPage)
		for i = 2, pageCount do
			--print("Fetching API page # " .. tostring(i))
			local result = GetApiRemoteFunction(i)
			table.insert(apiTable, result)
		end
		return table.concat(apiTable)
	end

	local json = getApiJson()
	local apiDump =  JsonDecode(json)

	local Classes = {}
	local Enums = {}

	local function sortAlphabetic(t, property)
		table.sort(t,
			function(x,y) return x[property] < y[property]
			end)
	end

	local function isEnum(name)
		return Enums[name] ~= nil
	end

	local function getProperties(className)
		local class = Classes[className]
		local properties = {}

		if not class then return properties end

		while class do
			for _,property in pairs(class.Properties) do
				table.insert(properties, property)
			end
			class = Classes[class.Superclass]
		end

		sortAlphabetic(properties, "Name")

		return properties
	end

	for _,item in pairs(apiDump) do
		local itemType = item.type
		-- Classes --
		if (itemType == 'Class') then
			Classes[item.Name] = item
			item.Properties = {}
			item.Functions = {}
			item.YieldFunctions = {}
			item.Events = {}
			item.Callbacks = {}
			-- Members --
		elseif (itemType == 'Property') then
			table.insert(Classes[item.Class].Properties, item)
		elseif (itemType == 'Function') then
			table.insert(Classes[item.Class].Functions, item)
		elseif (itemType == 'YieldFunction') then
			table.insert(Classes[item.Class].YieldFunctions, item)
		elseif (itemType == 'Event') then
			table.insert(Classes[item.Class].Events, item)
		elseif (itemType == 'Callback') then
			table.insert(Classes[item.Class].Callbacks, item)
			-- Enums --
		elseif (itemType == 'Enum') then
			Enums[item.Name] = item
			item.EnumItems = {}
		elseif (itemType == 'EnumItem') then
			Enums[item.Enum].EnumItems[item.Name] = item
		end
	end

	return {
		Classes = Classes;
		Enums = Enums;
		GetProperties = getProperties;
		IsEnum = isEnum;
	}
end

-- Modules
local Permissions = {CanEdit = true}
local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

-- Styles

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial,
	Margin = 5,
	Black = Color3_fromRGB(0,0,5),
	Black2 = Color3_fromRGB(24,24,29),
	White = Color3_fromRGB(244,244,249),
	White2 = Color3_fromRGB(200,200,205),
	Hover = Color3_fromRGB(2,128,149),
	Hover2 = Color3_fromRGB(5,102,146)
}

local Row = {
	Font = Styles.Font,
	FontSize = Enum.FontSize.Size12,
	TextXAlignment = Enum.TextXAlignment.Left,
	TextColor = Styles.White,
	TextColorOver = Styles.White2,
	TextLockedColor = Color3_fromRGB(155, 155, 160),
	Height = 24,
	BorderColor = Color3_fromRGB(54, 54, 55),
	BackgroundColor = Styles.Black2,
	BackgroundColorAlternate = Color3_fromRGB(32, 32, 37),
	BackgroundColorMouseover = Color3_fromRGB(40, 40, 45),
	TitleMarginLeft = 15
}

local DropDown = {
	Font = Styles.Font,
	FontSize = Enum.FontSize.Size14,
	TextColor = Color3_fromRGB(255, 255, 255),
	TextColorOver = Styles.White2,
	TextXAlignment = Enum.TextXAlignment.Left,
	Height = 16,
	BackColor = Styles.Black2,
	BackColorOver = Styles.Hover2,
	BorderColor = Color3_fromRGB(45, 45, 50),
	BorderSizePixel = 2,
	ArrowColor = Color3_fromRGB(80, 80, 83),
	ArrowColorOver = Styles.Hover
}

local BrickColors = {
	BoxSize = 13,
	BorderSizePixel = 1,
	BorderColor = Color3_fromRGB(53, 53, 55),
	FrameColor = Color3_fromRGB(53, 53, 55),
	Size = 20,
	Padding = 4,
	ColorsPerRow = 8,
	OuterBorder = 1,
	OuterBorderColor = Styles.Black
}

wait(1)

local bindGetSelection = ExplorerFrame.GetSelection
local bindSelectionChanged = ExplorerFrame.SelectionChanged
local bindGetApi = PropertiesFrame.GetApi
local bindGetAwait = PropertiesFrame.GetAwaiting
local bindSetAwait = PropertiesFrame.SetAwaiting

local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

local propertiesSearch = PropertiesFrame.Header.TextBox

local AwaitingObjectValue = false
local AwaitingObjectObj
local AwaitingObjectProp

function searchingProperties()
	if propertiesSearch.Text ~= "" then
		return true
	end
	return false
end

local function GetSelection()
	local selection = bindGetSelection:Invoke()
	if #selection == 0 then
		return nil
	else
		return selection
	end
end

-- Number

local function Round(number, decimalPlaces)
	return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
end

-- Strings

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

-- Data Type Handling

local function ToString(value, type)
	if type == "float" then
		return tostring(Round(value,2))
	elseif type == "Content" then
		if string.find(value,"/asset") then
			local match = string.find(value, "=") + 1
			local id = string.sub(value, match)
			return id
		else
			return tostring(value)
		end
	elseif type == "Vector2" then
		local x = value.x
		local y = value.y
		return string.format("%g, %g", x,y)
	elseif type == "Vector3" then
		local x = value.x
		local y = value.y
		local z = value.z
		return string.format("%g, %g, %g", x,y,z)
	elseif type == "Color3" then
		local r = value.r
		local g = value.g
		local b = value.b
		return string.format("%d, %d, %d", r*255,g*255,b*255)
	elseif type == "UDim2" then
		local xScale = value.X.Scale
		local xOffset = value.X.Offset
		local yScale = value.Y.Scale
		local yOffset = value.Y.Offset
		return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
	else
		return tostring(value)
	end
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		if tonumber(value) ~= nil then
			value = ContentUrl .. value
		end
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	else
		return nil
	end
end


-- Tables

local function CopyTable(T)
	local t2 = {}
	for k,v in pairs(T) do
		t2[k] = v
	end
	return t2
end

local function SortTable(T)
	table.sort(T,
		function(x,y) return x.Name < y.Name
		end)
end

-- Spritesheet
local Sprite = {
	Width = 13;
	Height = 13;
}

local Spritesheet = {
	Image = "http://www.roblox.com/asset/?id=128896947";
	Height = 256;
	Width = 256;
}

local Images = {
	"unchecked",
	"checked",
	"unchecked_over",
	"checked_over",
	"unchecked_disabled",
	"checked_disabled"
}

local function SpritePosition(spriteName)
	local x = 0
	local y = 0
	for i,v in pairs(Images) do
		if (v == spriteName) then
			return {x, y}
		end
		x = x + Sprite.Height
		if (x + Sprite.Width) > Spritesheet.Width then
			x = 0
			y = y + Sprite.Height
		end
	end
end

local function GetCheckboxImageName(checked, readOnly, mouseover)
	if checked then
		if readOnly then
			return "checked_disabled"
		elseif mouseover then
			return "checked_over"
		else
			return "checked"
		end
	else
		if readOnly then
			return "unchecked_disabled"
		elseif mouseover then
			return "unchecked_over"
		else
			return "unchecked"
		end
	end
end

local MAP_ID = 418720155

-- Gui Controls --

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end


local function CreateCell()
	local tableCell = Instance.new("Frame")
	tableCell.Size = UDim2.new(0.5, -1, 1, 0)
	tableCell.BackgroundColor3 = Row.BackgroundColor
	tableCell.BorderColor3 = Row.BorderColor
	return tableCell
end

local function CreateLabel(readOnly)
	local label = Instance.new("TextLabel")
	label.Font = Row.Font
	label.FontSize = Row.FontSize
	label.TextXAlignment = Row.TextXAlignment
	label.BackgroundTransparency = 1

	if readOnly then
		label.TextColor3 = Row.TextLockedColor
	else
		label.TextColor3 = Row.TextColor
	end
	return label
end

local function CreateTextButton(readOnly, onClick)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
		button.MouseButton1Click:Connect(function()
			onClick()
		end)
	end
	return button
end

local function CreateObject(readOnly)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
	end
	local cancel = Create(Icon('ImageButton',177),{
		Name = "Cancel";
		Visible = false;
		Position = UDim2.new(1,-20,0,0);
		Size = UDim2.new(0,20,0,20);
		Parent = button;
	})
	return button
end

local function CreateTextBox(readOnly)
	if readOnly then
		local box = CreateLabel(readOnly)
		return box
	else
		local box = Instance.new("TextBox")
		if not SettingsRemote:Invoke("ClearProps") then
			box.ClearTextOnFocus = false
		end
		box.Font = Row.Font
		box.FontSize = Row.FontSize
		box.TextXAlignment = Row.TextXAlignment
		box.BackgroundTransparency = 1
		box.TextColor3 = Row.TextColor
		return box
	end
end

local function CreateDropDownItem(text, onClick)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text

	button.MouseEnter:Connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
	end)
	button.MouseLeave:Connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:Connect(function()
		onClick(text)
	end)
	return button
end

local function CreateDropDown(choices, currentChoice, readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Name = "DropDown"
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true

	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;

	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame

	local function showArrow(color)
		if arrow then arrow:Destroy() end

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = color;
		})
		local graphicSize = 16/2

		arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
		arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
		arrow.Parent = frame
	end

	local function hideMenu()
		expanded = false
		showArrow(DropDown.ArrowColor)
		if menu then menu:Destroy() end
	end

	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame

		local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
		local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
		if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
			menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		end

		local function choice(name)
			onClick(name)
			hideMenu()
		end

		for i,name in pairs(choices) do
			local option = CreateDropDownItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 16)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end

	showArrow(DropDown.ArrowColor)

	if not readOnly then

		button.MouseEnter:Connect(function()
			button.TextColor3 = Row.TextColor
			showArrow(DropDown.ArrowColorOver)
		end)
		button.MouseLeave:Connect(function()
			button.TextColor3 = Row.TextColor
			if not expanded then
				showArrow(DropDown.ArrowColor)
			end
		end)
		button.MouseButton1Click:Connect(function()
			if expanded then
				hideMenu()
			else
				showMenu()
			end
		end)
	end

	return frame,button
end

local function CreateBrickColor(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1

	local colorPalette = Instance.new("Frame")
	colorPalette.BackgroundTransparency = 0
	colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
	colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
	colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
	colorPalette.BorderColor3 = BrickColors.BorderColor
	colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
	colorPalette.ZIndex = 5
	colorPalette.Visible = false
	colorPalette.BorderSizePixel = BrickColors.OuterBorder
	colorPalette.BorderColor3 = BrickColors.OuterBorderColor
	colorPalette.Parent = frame

	local function show()
		colorPalette.Visible = true
	end

	local function hide()
		colorPalette.Visible = false
	end

	local function toggle()
		colorPalette.Visible = not colorPalette.Visible
	end

	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.MouseButton1Click:Connect(function()
		if not readOnly then
			toggle()
		end
	end)

	if readOnly then
		colorBox.AutoButtonColor = false
	end

	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize

	local propertyLabel = CreateTextButton(readOnly, function()
		if not readOnly then
			toggle()
		end
	end)
	propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
	propertyLabel.Parent = frame

	local size = (1 / BrickColors.ColorsPerRow)

	for index = 0, 127 do
		local brickColor = BrickColor.palette(index)
		local color3 = brickColor.Color

		local x = size * (index % BrickColors.ColorsPerRow)
		local y = size * math.floor(index / BrickColors.ColorsPerRow)

		local brickColorBox = Instance.new("TextButton")
		brickColorBox.Text = ""
		brickColorBox.Size = UDim2.new(size,0,size,0)
		brickColorBox.BackgroundColor3 = color3
		brickColorBox.Position = UDim2.new(x, 0, y, 0)
		brickColorBox.ZIndex = colorPalette.ZIndex
		brickColorBox.Parent = colorPalette

		brickColorBox.MouseButton1Click:Connect(function()
			hide()
			onClick(brickColor)
		end)
	end

	return frame,propertyLabel,colorBox
end

local function CreateColor3Control(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1

	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.AutoButtonColor = false

	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, spacingBefore, 0, 0)
	box.Parent = frame

	return frame,box,colorBox
end

function CreateCheckbox(value, readOnly, onClick)
	local checked = value
	local mouseover = false

	local checkboxFrame = Instance.new("ImageButton")
	checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
	checkboxFrame.BackgroundTransparency = 1
	checkboxFrame.ClipsDescendants = true
	--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

	local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
	spritesheetImage.Name = "SpritesheetImageLabel"
	spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
	spritesheetImage.Image = Spritesheet.Image
	spritesheetImage.BackgroundTransparency = 1

	local function updateSprite()
		local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
		local spritePosition = SpritePosition(spriteName)
		spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
	end

	local function setValue(val)
		checked = val
		updateSprite()
	end

	if not readOnly then
		checkboxFrame.MouseEnter:Connect(function() mouseover = true updateSprite() end)
		checkboxFrame.MouseLeave:Connect(function() mouseover = false updateSprite() end)
		checkboxFrame.MouseButton1Click:Connect(function()
			onClick(checked)
		end)
	end

	updateSprite()

	return checkboxFrame, setValue
end



-- Code for handling controls of various data types --

local Controls = {}

Controls["default"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]

	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end

	if not readOnly then
		box.FocusLost:Connect(function(enterPressed)
			Set(object, propertyData, ToValue(box.Text,propertyType))
			update()
		end)
	end

	update()

	object.Changed:Connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)

	return box
end

Controls["bool"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local checked = object[propertyName]

	local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
		Set(object, propertyData, not checked)
	end)
	checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

	setValue(checked)

	local function update()
		checked = object[propertyName]
		setValue(checked)
	end

	object.Changed:Connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)

	if object:IsA("BoolValue") then
		object.Changed:Connect(function(val)
			update()
		end)
	end

	update()

	return checkbox
end

Controls["BrickColor"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
		Set(object, propertyData, brickColor)
	end)

	local function update()
		local value = object[propertyName]
		brickColorBox.BackgroundColor3 = value.Color
		label.Text = tostring(value)
	end

	update()

	object.Changed:Connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)

	return frame
end

Controls["Color3"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,textBox,colorBox = CreateColor3Control(readOnly)

	textBox.FocusLost:Connect(function(enterPressed)
		Set(object, propertyData, ToValue(textBox.Text,"Color3"))
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end)

	local function update()
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end

	update()

	object.Changed:Connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)

	return frame
end

Controls["Enum"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]

	local enumName = object[propertyName].Name

	local enumNames = {}
	for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
		table.insert(enumNames, enum.Name)
	end

	local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
		Set(object, propertyData, value)
	end)
	--dropdown.Parent = frame

	local function update()
		local value = object[propertyName].Name
		propertyLabel.Text = tostring(value)
	end

	update()

	object.Changed:Connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)

	return dropdown
end

Controls["Object"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]

	local box = CreateObject(readOnly,function()end)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		if AwaitingObjectObj == object then
			if AwaitingObjectValue == true then
				box.Text = "Select an Object"
				return
			end
		end
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end

	if not readOnly then
		box.MouseButton1Click:Connect(function()
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				update()
				return
			end
			AwaitingObjectValue = true
			AwaitingObjectObj = object
			AwaitingObjectProp = propertyData
			box.Text = "Select an Object"
		end)

		box.Cancel.Visible = true
		box.Cancel.MouseButton1Click:Connect(function()
			object[propertyName] = nil
		end)
	end

	update()

	object.Changed:Connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)

	if object:IsA("ObjectValue") then
		object.Changed:Connect(function(val)
			update()
		end)
	end

	return box
end

function GetControl(object, propertyData, readOnly)
	local propertyType = propertyData["ValueType"]
	local control = nil

	if Controls[propertyType] then
		control = Controls[propertyType](object, propertyData, readOnly)
	elseif RbxApi.IsEnum(propertyType) then
		control = Controls["Enum"](object, propertyData, readOnly)
	elseif RbxApi.Classes[propertyType] then
		control = Controls["Object"](object, propertyData, readOnly)
	else
		control = Controls["default"](object, propertyData, readOnly)
	end
	return control
end
-- Permissions

function CanEditObject(object)
	local player = Players.LocalPlayer
	local character = player.Character
	return Permissions.CanEdit
end

function CanEditProperty(object,propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "readonly" then
			return false
		end
	end
	return CanEditObject(object)
end

--RbxApi
local function PropertyIsHidden(propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

function Set(object, propertyData, value)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]

	if value == nil then return end

	for i,v in pairs(GetSelection()) do
		if CanEditProperty(v,propertyData) then
			pcall(function()
				--print("Setting " .. propertyName .. " to " .. tostring(value))
				v[propertyName] = value
				RemoteEvent:InvokeServer("SetProperty", v, propertyName, value)
			end)
		end
	end

end

function CreateRow(object, propertyData, isAlternateRow)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	local propertyValue = object[propertyName]
	--rowValue, rowValueType, isAlternate
	local backColor = Row.BackgroundColor;
	if (isAlternateRow) then
		backColor = Row.BackgroundColorAlternate
	end

	local readOnly = not CanEditProperty(object, propertyData)
	--if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

	local rowFrame = Instance.new("Frame")
	rowFrame.Size = UDim2.new(1,0,0,Row.Height)
	rowFrame.BackgroundTransparency = 1
	rowFrame.Name = 'Row'

	local propertyLabelFrame = CreateCell()
	propertyLabelFrame.Parent = rowFrame
	propertyLabelFrame.ClipsDescendants = true

	local propertyLabel = CreateLabel(readOnly)
	propertyLabel.Text = propertyName
	propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
	propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
	propertyLabel.Parent = propertyLabelFrame

	local propertyValueFrame = CreateCell()
	propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
	propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
	propertyValueFrame.Parent = rowFrame

	local control = GetControl(object, propertyData, readOnly)
	control.Parent = propertyValueFrame

	rowFrame.MouseEnter:Connect(function()
		propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
		propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
	end)
	rowFrame.MouseLeave:Connect(function()
		propertyLabelFrame.BackgroundColor3 = backColor
		propertyValueFrame.BackgroundColor3 = backColor
	end)

	propertyLabelFrame.BackgroundColor3 = backColor
	propertyValueFrame.BackgroundColor3 = backColor

	return rowFrame
end

function ClearPropertiesList()
	for _,instance in pairs(ContentFrame:GetChildren()) do
		instance:Destroy()
	end
end

local selection = Gui:FindFirstChild("Selection", 1)
print(selection)

function displayProperties(props)
	for i,v in pairs(props) do
		pcall(function()
			local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
			a.Position = UDim2.new(0,0,0,numRows*Row.Height)
			a.Parent = ContentFrame
			numRows = numRows + 1
		end)
	end
end

function checkForDupe(prop,props)
	for i,v in pairs(props) do
		if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
			return true
		end
	end
	return false
end

function sortProps(t)
	table.sort(t,
		function(x,y) return x.propertyData.Name < y.propertyData.Name
		end)
end

function showProperties(obj)
	ClearPropertiesList()
	if obj == nil then return end
	local propHolder = {}
	local foundProps = {}
	numRows = 0
	for _,nextObj in pairs(obj) do
		if not foundProps[nextObj.className] then
			foundProps[nextObj.className] = true
			for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
				local suc, err = pcall(function()
					if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
						if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
							table.insert(propHolder,{propertyData = v, object = nextObj})
						end
					end
				end)
				--[[if not suc then
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
			end
		end
	end
	sortProps(propHolder)
	displayProperties(propHolder)
	ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
	scrollBar.ScrollIndex = 0
	scrollBar.TotalSpace = numRows * Row.Height
	scrollBar.Update()
end

----------------------------------------------------------------
-----------------------SCROLLBAR STUFF--------------------------
----------------------------------------------------------------
----------------------------------------------------------------
local ScrollBarWidth = 16

local ScrollStyles = {
	Background = Color3.fromRGB(37, 37, 42),
	Border = Color3.fromRGB(20, 20, 25),
	Selected = Color3.fromRGB(5, 100, 140),
	BorderSelected = Color3.fromRGB(2, 130, 145),
	Text = Color3.fromRGB(245, 245, 250),
	TextDisabled = Color3.fromRGB(188, 188, 193),
	TextSelected = Color3.fromRGB(255, 255, 255),
	Button = Color3.fromRGB(31, 31, 36),
	ButtonBorder = Color3.fromRGB(133, 133, 138),
	ButtonSelected = Color3.fromRGB(0, 168, 155),
	Field = Color3.fromRGB(37, 37, 42),
	FieldBorder = Color3.fromRGB(50, 50, 55),
	TitleBackground = Color3.fromRGB(11, 11, 16)
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:Connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
				))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
				))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
			))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame",
			Position = horizontal and UDim2_new(0,0,1,-ScrollBarWidth) or UDim2_new(1,-ScrollBarWidth,0,0),
			Size = horizontal and UDim2_new(1,0,0,ScrollBarWidth) or UDim2_new(0,ScrollBarWidth,1,0),
			BackgroundTransparency = 1,
			Create('ImageButton',{
				Name = "ScrollDown",
				Position = horizontal and UDim2_new(1,-ScrollBarWidth,0,0) or UDim2_new(0,0,1,-ScrollBarWidth),
				Size = UDim2_new(0, ScrollBarWidth, 0, ScrollBarWidth),
				BackgroundColor3 = ScrollStyles.Button,
				BorderColor3 = ScrollStyles.Border,
				ImageColor3 = Styles.White
			}),
			Create('ImageButton',{
				Name = "ScrollUp",
				Size = UDim2_new(0, ScrollBarWidth, 0, ScrollBarWidth),
				BackgroundColor3 = ScrollStyles.Button,
				BorderColor3 = ScrollStyles.Border,
				ImageColor3 = Styles.White
			}),
			Create('ImageButton',{
				Name = "ScrollBar",
				Size = horizontal and UDim2_new(1,-ScrollBarWidth*2,1,0) or UDim2_new(1,0,1,-ScrollBarWidth*2),
				Position = horizontal and UDim2_new(0,ScrollBarWidth,0,0) or UDim2_new(0,0,0,ScrollBarWidth),
				AutoButtonColor = false,
				BackgroundColor3 = Color3_new(1/4, 1/4, 1/4),
				BorderColor3 = ScrollStyles.Border,
				Create('ImageButton',{
					Name = "ScrollThumb",
					AutoButtonColor = false,
					Size = UDim2_new(0, ScrollBarWidth, 0, ScrollBarWidth),
					BackgroundColor3 = ScrollStyles.Button,
					BorderColor3 = ScrollStyles.Border,
					ImageColor3 = Styles.White
				})
			})
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic",
			BorderSizePixel = 0,
			BackgroundColor3 = Color3_new(1, 1, 1)
		})

		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
		local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
		ScrollDownGraphic.Position = UDim2_new(.5,-graphicSize/2,.5,-graphicSize/2)
		ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
		local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
		ScrollUpGraphic.Position = UDim2_new(.5,-graphicSize/2,.5,-graphicSize/2)
		ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2_new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2_new(.5,-size/2,.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag",
			Position = UDim2_new(-.25,0,-.25,0),
			Size = UDim2_new(1.5,0,1.5,0),
			Transparency = 1,
			AutoButtonColor = false,
			Active = true,
			ZIndex = 10
		})

		local Class = setmetatable({
			GUI = ScrollFrame,
			ScrollIndex = 0,
			VisibleSpace = 0,
			TotalSpace = 0,
			PageIncrement = 1
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2_new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.X < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2_new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.X
				ScrollThumbFrame.Position = UDim2_new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.X)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2_new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.Y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2_new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.Y
				ScrollThumbFrame.Position = UDim2_new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.Y)/barSize,0)
			end
		end

		local lastDown, lastUp
		local scrollStyle = {BackgroundColor3=Color3_new(1, 1, 1),BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=Color3_new(1, 1, 1),BackgroundTransparency=.7}

		local function Update()
			local t,v,s = Class.TotalSpace,Class.VisibleSpace,Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down,up = Class:CanScrollDown(),Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children,style = ScrollDownGraphic:GetChildren(),down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children,style = ScrollUpGraphic:GetChildren(),up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:Connect(function()
			scrollEventID = tick()
			local current,up_con = scrollEventID,nil
			up_con = MouseDrag.MouseButton1Up:Connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:Disconnect()
				drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(.2)
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:Connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:Connect(function()
			scrollEventID = tick()
			local current,up_con = scrollEventID,nil
			up_con = MouseDrag.MouseButton1Up:Connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:Disconnect()
				drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:Connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:Connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:Connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:Disconnect()
					drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.X then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.X + ScrollThumbFrame.AbsoluteSize.X then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.X then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:Connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:Connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:Disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.Y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.Y + ScrollThumbFrame.AbsoluteSize.Y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.Y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:Connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.X
				local drag_con,up_con
				drag_con = MouseDrag.MouseMoved:Connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.X
					local bar_drag = ScrollBarFrame.AbsoluteSize.X - ScrollThumbFrame.AbsoluteSize.X
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:Connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:Disconnect(); drag_con = nil
					up_con:Disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:Connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.Y
				local drag_con,up_con
				drag_con = MouseDrag.MouseMoved:Connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.Y
					local bar_drag = ScrollBarFrame.AbsoluteSize.Y - ScrollThumbFrame.AbsoluteSize.Y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:Connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:Disconnect(); drag_con = nil
					up_con:Disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in next, Class do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end
		Update()
		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
MainFrame.Position = UDim2.new(0, 0, 0, 0)
MainFrame.BackgroundTransparency = 1
MainFrame.ClipsDescendants = true
MainFrame.Parent = PropertiesFrame

ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 0, 0)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-ScrollBarWidth,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = PropertiesFrame;
})

scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = ScrollBarWidth
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-ScrollBarWidth);
	Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
	Visible = false;
	Parent = PropertiesFrame;
})

do
	local listEntries = {}
	local nameConnLookup = {}

	function scrollBar.UpdateCallback(self)
		scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
		scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
		ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
	end

	function scrollBarH.UpdateCallback(self)

	end

	MainFrame.Changed:Connect(function(p)
		if p == 'AbsoluteSize' then
			scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
			scrollBarH:Update()
			scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
			scrollBar:Update()
		end
	end)

	local wheelAmount = Row.Height
	PropertiesFrame.MouseWheelForward:Connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	PropertiesFrame.MouseWheelBackward:Connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
scrollBar:Update()

showProperties(GetSelection())

bindSelectionChanged.Event:Connect(function()
	showProperties(GetSelection())
end)

bindSetAwait.Event:Connect(function(obj)
	if AwaitingObjectValue then
		AwaitingObjectValue = false
		local mySel = obj
		if mySel then
			pcall(function()
				Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
			end)
		end
	end
end)

propertiesSearch.Changed:Connect(function(prop)
	if prop == "Text" then
		showProperties(GetSelection())
	end
end)

bindGetApi.OnInvoke = function()
	return RbxApi
end

bindGetAwait.OnInvoke = function()
	return AwaitingObjectValue
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX6E4A60932CC74046A7ADCE125F3027F1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">RawApiJson</string>
							<string name="ScriptGuid">{FDDD25E9-C30C-4EF5-8272-BA67D07DF564}</string>
							<ProtectedString name="Source">return [==[[{&quot;Superclass&quot;:null,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Instance&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Archivable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClassName&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataCost&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Name&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Parent&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RobloxLocked&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;archivable&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Instance&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearAllChildren&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Clone&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Destroy&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindFirstAncestor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindFirstAncestorOfClass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindFirstAncestorWhichIsA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;recursive&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;FindFirstChild&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindFirstChildOfClass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;recursive&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;FindFirstChildWhichIsA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetChildren&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;scopeLength&quot;,&quot;Default&quot;:&quot;4&quot;}],&quot;Name&quot;:&quot;GetDebugId&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;notbrowsable&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetDescendants&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetFullName&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;EventInstance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;property&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPropertyChangedSignal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;descendant&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsAncestorOf&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ancestor&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsDescendantOf&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Remove&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;childName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;timeOut&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WaitForChild&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;children&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;clone&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;destroy&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;recursive&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;findFirstChild&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;getChildren&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;isA&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ancestor&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;isDescendantOf&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;remove&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;child&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;parent&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;AncestryChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;property&quot;,&quot;Type&quot;:&quot;Property&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;child&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ChildAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;child&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ChildRemoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;descendant&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DescendantAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;descendant&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DescendantRemoving&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;child&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;childAdded&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Accoutrement&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AttachmentForward&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Accoutrement&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AttachmentPoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Accoutrement&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AttachmentPos&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Accoutrement&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AttachmentRight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Accoutrement&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AttachmentUp&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Accoutrement&quot;},{&quot;Superclass&quot;:&quot;Accoutrement&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Accessory&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Accoutrement&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Hat&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AdService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ShowVideoAd&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;AdService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;adShown&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;VideoAdClosed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;AdService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AdvancedDragger&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AnalyticsService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReleaseRBXEventStream&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;counterName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;amount&quot;,&quot;Default&quot;:&quot;1&quot;}],&quot;Name&quot;:&quot;ReportCounter&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;seriesName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;points&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;throttlingPercentage&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReportInfluxSeries&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;category&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReportStats&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventContext&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;additionalArgs&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendEventDeferred&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventContext&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;additionalArgs&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendEventImmediately&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventContext&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;additionalArgs&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetRBXEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventContext&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;eventName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;additionalArgs&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetRBXEventStream&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;category&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;action&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;label&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;TrackEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;args&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UpdateHeartbeatObject&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AnalyticsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Animation&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AnimationId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Animation&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AnimationController&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlayingAnimationTracks&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationController&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;animation&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadAnimation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationController&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;animationTrack&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;AnimationPlayed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationController&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AnimationTrack&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Animation&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Animation&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsPlaying&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Length&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Looped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;AnimationPriority&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Priority&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Speed&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TimePosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WeightCurrent&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WeightTarget&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;AnimationTrack&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;speed&quot;,&quot;Default&quot;:&quot;1&quot;}],&quot;Name&quot;:&quot;AdjustSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;weight&quot;,&quot;Default&quot;:&quot;1&quot;},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;fadeTime&quot;,&quot;Default&quot;:&quot;0.100000001&quot;}],&quot;Name&quot;:&quot;AdjustWeight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;keyframeName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTimeOfKeyframe&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;fadeTime&quot;,&quot;Default&quot;:&quot;0.100000001&quot;},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;weight&quot;,&quot;Default&quot;:&quot;1&quot;},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;speed&quot;,&quot;Default&quot;:&quot;1&quot;}],&quot;Name&quot;:&quot;Play&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;fadeTime&quot;,&quot;Default&quot;:&quot;0.100000001&quot;}],&quot;Name&quot;:&quot;Stop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;DidLoop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;keyframeName&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;KeyframeReached&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Stopped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AnimationTrack&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Animator&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;animation&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadAnimation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Animator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;deltaTime&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;StepAnimations&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Animator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AssetService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;placeName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;templatePlaceID&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;CreatePlaceAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;placeName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;templatePlaceID&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;CreatePlaceInPlayerInventoryAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;packageAssetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetAssetIdsForPackage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;thumbnailSize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;assetType&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;GetAssetThumbnailAsync&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;creationID&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCreatorAssetID&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetGamePlacesAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SavePlaceAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AssetService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Attachment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Axis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Orientation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rotation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SecondaryAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Visible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldAxis&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldCFrame&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldOrientation&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldPosition&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldRotation&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldSecondaryAxis&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Attachment&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetSecondaryAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;axis&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;axis&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetSecondaryAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Attachment&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BadgeService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;badgeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AwardBadge&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;badgeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetBadgeInfoAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;badgeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsDisabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;badgeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsLegal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;badgeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UserHasBadge&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;badgeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UserHasBadgeAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;userId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;badgeId&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;BadgeAwarded&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;BadgeService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BasePlayerGui&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;BasePlayerGui&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CoreGui&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SelectionImageObject&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;CoreGui&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Version&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;CoreGui&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;guiAdornee&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;NormalId&quot;,&quot;Name&quot;:&quot;faceId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetUserGuiRendering&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;CoreGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;BasePlayerGui&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PlayerGui&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;ScreenOrientation&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentScreenOrientation&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PlayerGui&quot;},{&quot;ValueType&quot;:&quot;ScreenOrientation&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScreenOrientation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerGui&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SelectionImageObject&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerGui&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetTopbarTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;transparency&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTopbarTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;transparency&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;TopbarTransparencyChangedSignal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;BasePlayerGui&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StarterGui&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ProcessUserInput&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;StarterGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ResetPlayerGuiOnSpawn&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;StarterGui&quot;},{&quot;ValueType&quot;:&quot;ScreenOrientation&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScreenOrientation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShowDevelopmentGui&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterGui&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CoreGuiType&quot;,&quot;Name&quot;:&quot;coreGuiType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCoreGuiEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;parameterName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;getFunction&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterGetCore&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;parameterName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;setFunction&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterSetCore&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;parameterName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetCore&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CoreGuiType&quot;,&quot;Name&quot;:&quot;coreGuiType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetCoreGuiEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;parameterName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCore&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;coreGuiType&quot;,&quot;Type&quot;:&quot;CoreGuiType&quot;},{&quot;Name&quot;:&quot;enabled&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;CoreGuiChangedSignal&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;StarterGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Beam&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Attachment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attachment0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;Class:Attachment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attachment1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;ColorSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurveSize0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurveSize1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FaceCamera&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightEmission&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightInfluence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Segments&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Texture&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;TextureMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;NumberSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Width0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Width1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ZOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;offset&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;SetTextureOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Beam&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BindableEvent&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Fire&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BindableEvent&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;Event&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BindableEvent&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BindableFunction&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Invoke&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BindableFunction&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;OnInvoke&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BindableFunction&quot;,&quot;type&quot;:&quot;Callback&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyMover&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyAngularVelocity&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyAngularVelocity&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyAngularVelocity&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;P&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyAngularVelocity&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;angularvelocity&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyAngularVelocity&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;maxTorque&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyAngularVelocity&quot;},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyForce&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Force&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyForce&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;force&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyForce&quot;},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyGyro&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyGyro&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;D&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyGyro&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyGyro&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;P&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyGyro&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;cframe&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyGyro&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;maxTorque&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyGyro&quot;},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyPosition&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;D&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyPosition&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyPosition&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;P&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyPosition&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyPosition&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;maxForce&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyPosition&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyPosition&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetLastForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyPosition&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;lastForce&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyPosition&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ReachedTarget&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyPosition&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyThrust&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Force&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyThrust&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Location&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyThrust&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;force&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyThrust&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;location&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyThrust&quot;},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyVelocity&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyVelocity&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;P&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyVelocity&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Velocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyVelocity&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;maxForce&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyVelocity&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;velocity&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BodyVelocity&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetLastForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyVelocity&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;lastForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyVelocity&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;BodyMover&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RocketPropulsion&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CartoonFactor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxThrust&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Target&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetRadius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ThrustD&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ThrustP&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TurnD&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TurnP&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Abort&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Fire&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;fire&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;RocketPropulsion&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ReachedTarget&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RocketPropulsion&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Button&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClickableWhenViewportHidden&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Button&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Button&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Icon&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Button&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;active&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetActive&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Button&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Click&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Button&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CacheableContentProvider&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;CacheableContentProvider&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;MeshContentProvider&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;CacheableContentProvider&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SolidModelContentProvider&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Camera&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraSubject&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;CameraType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CoordinateFrame&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FieldOfView&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Focus&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HeadLocked&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HeadScale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NearPlaneZ&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ViewportSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;focus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Camera&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;ignoreList&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetLargestCutoffDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPanSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Array&quot;,&quot;Name&quot;:&quot;castPoints&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;ignoreList&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPartsObscuringTarget&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;CoordinateFrame&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRenderCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRoll&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetTiltSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;endPos&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;endFocus&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;duration&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Interpolate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;units&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PanUnits&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Ray&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;depth&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;ScreenPointToRay&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CameraPanMode&quot;,&quot;Name&quot;:&quot;mode&quot;,&quot;Default&quot;:&quot;Classic&quot;}],&quot;Name&quot;:&quot;SetCameraPanMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;rollAngle&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetRoll&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;units&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;TiltUnits&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Ray&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;depth&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;ViewportPointToRay&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;worldPoint&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WorldToScreenPoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;worldPoint&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WorldToViewportPoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;distance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Zoom&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;entering&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;FirstPersonTransition&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;InterpolationFinished&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Camera&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ChangeHistoryService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCanRedo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCanUndo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Redo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ResetWaypoints&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;state&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEnabled&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetWaypoint&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Undo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;waypoint&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;OnRedo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;waypoint&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;OnUndo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ChangeHistoryService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CharacterAppearance&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;CharacterAppearance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BodyColors&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HeadColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HeadColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftArmColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftArmColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftLegColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftLegColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightArmColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightArmColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightLegColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightLegColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TorsoColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TorsoColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BodyColors&quot;},{&quot;Superclass&quot;:&quot;CharacterAppearance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CharacterMesh&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BaseTextureId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CharacterMesh&quot;},{&quot;ValueType&quot;:&quot;BodyPart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BodyPart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CharacterMesh&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MeshId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CharacterMesh&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OverlayTextureId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CharacterMesh&quot;},{&quot;Superclass&quot;:&quot;CharacterAppearance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Clothing&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Clothing&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Pants&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PantsTemplate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pants&quot;},{&quot;Superclass&quot;:&quot;Clothing&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Shirt&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShirtTemplate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Shirt&quot;},{&quot;Superclass&quot;:&quot;CharacterAppearance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ShirtGraphic&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Graphic&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ShirtGraphic&quot;},{&quot;Superclass&quot;:&quot;CharacterAppearance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Skin&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkinColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Skin&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Chat&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LoadDefaultChat&quot;,&quot;tags&quot;:[&quot;ScriptWriteRestricted: [NotAccessibleSecurity]&quot;],&quot;Class&quot;:&quot;Chat&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;partOrCharacter&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ChatColor&quot;,&quot;Name&quot;:&quot;color&quot;,&quot;Default&quot;:&quot;Blue&quot;}],&quot;Name&quot;:&quot;Chat&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;partOrCharacter&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ChatColor&quot;,&quot;Name&quot;:&quot;color&quot;,&quot;Default&quot;:&quot;Blue&quot;}],&quot;Name&quot;:&quot;ChatLocal&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetShouldUseLuaChat&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;ChatCallbackType&quot;,&quot;Name&quot;:&quot;callbackType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;callbackArguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;InvokeChatCallback&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;ChatCallbackType&quot;,&quot;Name&quot;:&quot;callbackType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;callbackFunction&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterChatCallback&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CanUserChatAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userIdFrom&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userIdTo&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CanUsersChatAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;stringToFilter&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;playerFrom&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;playerTo&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FilterStringAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;stringToFilter&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;playerFrom&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FilterStringForBroadcast&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;stringToFilter&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;playerToFilterFor&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FilterStringForPlayerAsync&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;part&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;color&quot;,&quot;Type&quot;:&quot;ChatColor&quot;}],&quot;Name&quot;:&quot;Chatted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Chat&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ClickDetector&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CursorIcon&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ClickDetector&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxActivationDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ClickDetector&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;playerWhoClicked&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;MouseClick&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ClickDetector&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;playerWhoHovered&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;MouseHoverEnter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ClickDetector&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;playerWhoHovered&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;MouseHoverLeave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ClickDetector&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;playerWhoClicked&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;RightMouseClick&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ClickDetector&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;playerWhoClicked&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;mouseClick&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ClickDetector&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ClusterPacketCache&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CollectionService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;instance&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddTag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;class&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCollection&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;EventInstance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetInstanceAddedSignal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;EventInstance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetInstanceRemovedSignal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTagged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;instance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTags&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;instance&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;HasTag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;instance&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveTag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;instance&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ItemAdded&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;instance&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ItemRemoved&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;CollectionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Configuration&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Constraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Attachment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attachment0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Constraint&quot;},{&quot;ValueType&quot;:&quot;Class:Attachment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attachment1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Constraint&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Constraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Constraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Visible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Constraint&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AlignOrientation&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxAngularVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignOrientation&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignOrientation&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrimaryAxisOnly&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignOrientation&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReactionTorqueEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignOrientation&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Responsiveness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignOrientation&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RigidityEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignOrientation&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AlignPosition&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ApplyAtCenterOfMass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignPosition&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignPosition&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignPosition&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReactionForceEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignPosition&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Responsiveness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignPosition&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RigidityEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;AlignPosition&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BallSocketConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LimitsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Radius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Restitution&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TwistLimitsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TwistLowerAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TwistUpperAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UpperAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BallSocketConstraint&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HingeConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;ActuatorType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ActuatorType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentAngle&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LimitsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LowerAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MotorMaxAcceleration&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MotorMaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Radius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Restitution&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ServoMaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UpperAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HingeConstraint&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LineForce&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ApplyAtCenterOfMass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineForce&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InverseSquareLaw&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineForce&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Magnitude&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineForce&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineForce&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReactionForceEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineForce&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RodConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentDistance&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;RodConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Length&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RodConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Thickness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RodConstraint&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RopeConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentDistance&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;RopeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Length&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RopeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Restitution&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RopeConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Thickness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RopeConstraint&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SlidingBallConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;ActuatorType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ActuatorType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentPosition&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LimitsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LowerLimit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MotorMaxAcceleration&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MotorMaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Restitution&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ServoMaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Speed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetPosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UpperLimit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Velocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SlidingBallConstraint&quot;},{&quot;Superclass&quot;:&quot;SlidingBallConstraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CylindricalConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;ActuatorType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularActuatorType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularLimitsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularRestitution&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AngularVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentAngle&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InclinationAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LowerAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MotorMaxAngularAcceleration&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MotorMaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RotationAxisVisible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ServoMaxTorque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UpperAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WorldRotationAxis&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;CylindricalConstraint&quot;},{&quot;Superclass&quot;:&quot;SlidingBallConstraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PrismaticConstraint&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SpringConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Coils&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentLength&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Damping&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FreeLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LimitsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxForce&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Radius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Stiffness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Thickness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpringConstraint&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Torque&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;ActuatorRelativeTo&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RelativeTo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Torque&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Torque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Torque&quot;},{&quot;Superclass&quot;:&quot;Constraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VectorForce&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ApplyAtCenterOfMass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VectorForce&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Force&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VectorForce&quot;},{&quot;ValueType&quot;:&quot;ActuatorRelativeTo&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RelativeTo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VectorForce&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ContentProvider&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BaseUrl&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ContentProvider&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RequestQueueSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ContentProvider&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Content&quot;,&quot;Name&quot;:&quot;contentId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Preload&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ContentProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetBaseUrl&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;ContentProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Array&quot;,&quot;Name&quot;:&quot;contentIdList&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PreloadAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContentProvider&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ContextActionService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;functionToBind&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;createTouchButton&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;inputTypes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindAction&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;functionToBind&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;createTouchButton&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;priorityLevel&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;inputTypes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindActionAtPriority&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;functionToBind&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;createTouchButton&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;inputTypes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindActionToInputTypes&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;userInputTypeForActivation&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;keyCodeForActivation&quot;,&quot;Default&quot;:&quot;Unknown&quot;}],&quot;Name&quot;:&quot;BindActivate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;functionToBind&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;createTouchButton&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;inputTypes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindCoreAction&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;functionToBind&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;createTouchButton&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;priorityLevel&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;inputTypes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindCoreActionAtPriority&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;UserInputState&quot;,&quot;Name&quot;:&quot;state&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;inputObject&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CallFunction&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;actionButton&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FireActionButtonFoundSignal&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetAllBoundActionInfo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetAllBoundCoreActionInfo&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetBoundActionInfo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetBoundCoreActionInfo&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCurrentLocalToolIcon&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetDescription&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;image&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetImage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;UDim2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetPosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;title&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTitle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UnbindAction&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;userInputTypeForActivation&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;keyCodeForActivation&quot;,&quot;Default&quot;:&quot;Unknown&quot;}],&quot;Name&quot;:&quot;UnbindActivate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;UnbindAllActions&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UnbindCoreAction&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetButton&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;actionAdded&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;createTouchButton&quot;,&quot;Type&quot;:&quot;bool&quot;},{&quot;Name&quot;:&quot;functionInfoTable&quot;,&quot;Type&quot;:&quot;Dictionary&quot;},{&quot;Name&quot;:&quot;isCore&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;BoundActionAdded&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;actionChanged&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;changeName&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;changeTable&quot;,&quot;Type&quot;:&quot;Dictionary&quot;}],&quot;Name&quot;:&quot;BoundActionChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;actionRemoved&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;functionInfoTable&quot;,&quot;Type&quot;:&quot;Dictionary&quot;},{&quot;Name&quot;:&quot;isCore&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;BoundActionRemoved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;actionName&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;GetActionButtonEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;toolEquipped&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;LocalToolEquipped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;toolUnequipped&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;LocalToolUnequipped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ContextActionService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Controller&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Button&quot;,&quot;Name&quot;:&quot;button&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;caption&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindButton&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Button&quot;,&quot;Name&quot;:&quot;button&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetButton&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Button&quot;,&quot;Name&quot;:&quot;button&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UnbindButton&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Button&quot;,&quot;Name&quot;:&quot;button&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;caption&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;bindButton&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Button&quot;,&quot;Name&quot;:&quot;button&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;getButton&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;button&quot;,&quot;Type&quot;:&quot;Button&quot;}],&quot;Name&quot;:&quot;ButtonChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HumanoidController&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SkateboardController&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Steer&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;SkateboardController&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Throttle&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;SkateboardController&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;axis&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;AxisChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardController&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Controller&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VehicleController&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ControllerService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CookiesService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CorePackages&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CustomEvent&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetAttachedReceivers&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEvent&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;newValue&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEvent&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;receiver&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ReceiverConnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEvent&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;receiver&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ReceiverDisconnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEvent&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CustomEventReceiver&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Source&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEventReceiver&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCurrentValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEventReceiver&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;event&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;EventConnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEventReceiver&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;event&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;EventDisconnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEventReceiver&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;newValue&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;SourceValueChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CustomEventReceiver&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DataModelMesh&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Offset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModelMesh&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Scale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModelMesh&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VertexColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModelMesh&quot;},{&quot;Superclass&quot;:&quot;DataModelMesh&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BevelMesh&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;notbrowsable&quot;]},{&quot;Superclass&quot;:&quot;BevelMesh&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BlockMesh&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;BevelMesh&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CylinderMesh&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;DataModelMesh&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FileMesh&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MeshId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FileMesh&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FileMesh&quot;},{&quot;Superclass&quot;:&quot;FileMesh&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SpecialMesh&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;MeshType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MeshType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpecialMesh&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DataStoreService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutomaticRetry&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;DataStoreService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LegacyNamingScheme&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataStoreService&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;scope&quot;,&quot;Default&quot;:&quot;global&quot;}],&quot;Name&quot;:&quot;GetDataStore&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataStoreService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetGlobalDataStore&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataStoreService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;scope&quot;,&quot;Default&quot;:&quot;global&quot;}],&quot;Name&quot;:&quot;GetOrderedDataStore&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataStoreService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;DataStoreRequestType&quot;,&quot;Name&quot;:&quot;requestType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetRequestBudgetForRequestType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataStoreService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Debris&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxItems&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Debris&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;item&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;lifetime&quot;,&quot;Default&quot;:&quot;10&quot;}],&quot;Name&quot;:&quot;AddItem&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Debris&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetLegacyMaxItems&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Debris&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;item&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;lifetime&quot;,&quot;Default&quot;:&quot;10&quot;}],&quot;Name&quot;:&quot;addItem&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Debris&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DebugSettings&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataModel&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;ErrorReporting&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ErrorReporting&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GfxCard&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InstanceCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsFmodProfilingEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsScriptStackTracingEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;JobCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LuaRamLimit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OsIs64Bit&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OsPlatform&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OsPlatformId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OsVer&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlayerCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReportSoundWarnings&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RobloxProductName&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RobloxVersion&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SIMD&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SystemProductName&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;TickCountSampleMethod&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TickCountPreciseOverride&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VideoMemory&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebugSettings&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DebuggerBreakpoint&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Condition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerBreakpoint&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerBreakpoint&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Line&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebuggerBreakpoint&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DebuggerManager&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DebuggingEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DebuggerManager&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;script&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddDebugger&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;EnableDebugging&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetDebuggers&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Resume&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StepIn&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StepOut&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StepOver&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;debugger&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DebuggerAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;debugger&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DebuggerRemoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerManager&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DebuggerWatch&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Expression&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerWatch&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CheckSyntax&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DebuggerWatch&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Dialog&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;DialogBehaviorType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BehaviorType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ConversationDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GoodbyeChoiceActive&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GoodbyeDialog&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InUse&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InitialPrompt&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;DialogPurpose&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Purpose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;DialogTone&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Tone&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TriggerDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TriggerOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCurrentPlayers&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;isUsing&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetPlayerIsUsing&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Dialog&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;dialogChoice&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SignalDialogChoiceSelected&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Dialog&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;dialogChoice&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DialogChoiceSelected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dialog&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DialogChoice&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GoodbyeChoiceActive&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DialogChoice&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GoodbyeDialog&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DialogChoice&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ResponseDialog&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DialogChoice&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UserDialog&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DialogChoice&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Dragger&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Axis&quot;,&quot;Name&quot;:&quot;axis&quot;,&quot;Default&quot;:&quot;X&quot;}],&quot;Name&quot;:&quot;AxisRotate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dragger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;mousePart&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;pointOnMousePart&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;parts&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;MouseDown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dragger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Ray&quot;,&quot;Name&quot;:&quot;mouseRay&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;MouseMove&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dragger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseUp&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Dragger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Explosion&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BlastPressure&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BlastRadius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DestroyJointRadiusPercent&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;},{&quot;ValueType&quot;:&quot;ExplosionType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExplosionType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Visible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;part&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;distance&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;Hit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Explosion&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FaceInstance&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Face&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FaceInstance&quot;},{&quot;Superclass&quot;:&quot;FaceInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Decal&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Decal&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocalTransparencyModifier&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;Decal&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Shiny&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Decal&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Specular&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Decal&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Texture&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Decal&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Decal&quot;},{&quot;Superclass&quot;:&quot;Decal&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Texture&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StudsPerTileU&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Texture&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StudsPerTileV&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Texture&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Feature&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FaceId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Feature&quot;},{&quot;ValueType&quot;:&quot;InOut&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InOut&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Feature&quot;},{&quot;ValueType&quot;:&quot;LeftRight&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftRight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Feature&quot;},{&quot;ValueType&quot;:&quot;TopBottom&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TopBottom&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Feature&quot;},{&quot;Superclass&quot;:&quot;Feature&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Hole&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;Feature&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;MotorFeature&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Fire&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Fire&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Fire&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Heat&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Fire&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SecondaryColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Fire&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Fire&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;size&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Fire&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FlagStandService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FlyweightService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;FlyweightService&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CSGDictionaryService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;FlyweightService&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NonReplicatedCSGDictionaryService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Folder&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ForceField&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Visible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ForceField&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FriendService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlatformFriends&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;FriendService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;friendData&quot;,&quot;Type&quot;:&quot;Array&quot;}],&quot;Name&quot;:&quot;FriendsUpdated&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;FriendService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FunctionalTest&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Description&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FunctionalTest&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;Error&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FunctionalTest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;Failed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FunctionalTest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;Pass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FunctionalTest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;Passed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FunctionalTest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;Warn&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FunctionalTest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GamePassService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;gamePassId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PlayerHasPass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GamePassService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GameSettings&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AdditionalCoreIncludeDirs&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BubbleChatLifetime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BubbleChatMaxBubbles&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ChatHistory&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ChatScrollLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CollisionSoundEnabled&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CollisionSoundVolume&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HardwareMouse&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxCollisionSounds&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OverrideStarterScript&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReportAbuseChatHistory&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SoftwareSound&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VideoCaptureEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;ValueType&quot;:&quot;VideoQualitySettings&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VideoQuality&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GameSettings&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;recording&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;VideoRecordingChangeRequest&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GameSettings&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GamepadService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Geometry&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GlobalDataStore&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Connection&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;callback&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;OnUpdate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;delta&quot;,&quot;Default&quot;:&quot;1&quot;}],&quot;Name&quot;:&quot;IncrementAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;transformFunction&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UpdateAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;GlobalDataStore&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;OrderedDataStore&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;ascending&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;pagesize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;minValue&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;maxValue&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetSortedAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;OrderedDataStore&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GoogleAnalyticsConfiguration&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GroupService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;groupId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetAlliesAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GroupService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;groupId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetEnemiesAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GroupService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;groupId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetGroupInfoAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GroupService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetGroupsAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GroupService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiBase&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GuiBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiBase2d&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AbsolutePosition&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;GuiBase2d&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AbsoluteRotation&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;GuiBase2d&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AbsoluteSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;GuiBase2d&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoLocalize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiBase2d&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Localize&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiBase2d&quot;},{&quot;ValueType&quot;:&quot;Class:LocalizationTable&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RootLocalizationTable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiBase2d&quot;},{&quot;Superclass&quot;:&quot;GuiBase2d&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiObject&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Active&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AnchorPoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackgroundColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackgroundColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackgroundTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BorderColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BorderColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BorderSizePixel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClipsDescendants&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Draggable&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LayoutOrder&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NextSelectionDown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NextSelectionLeft&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NextSelectionRight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NextSelectionUp&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rotation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Selectable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SelectionImageObject&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;SizeConstraint&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SizeConstraint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Visible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ZIndex&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UDim2&quot;,&quot;Name&quot;:&quot;endPosition&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;EasingDirection&quot;,&quot;Name&quot;:&quot;easingDirection&quot;,&quot;Default&quot;:&quot;Out&quot;},{&quot;Type&quot;:&quot;EasingStyle&quot;,&quot;Name&quot;:&quot;easingStyle&quot;,&quot;Default&quot;:&quot;Quad&quot;},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;time&quot;,&quot;Default&quot;:&quot;1&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;override&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;callback&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TweenPosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UDim2&quot;,&quot;Name&quot;:&quot;endSize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;EasingDirection&quot;,&quot;Name&quot;:&quot;easingDirection&quot;,&quot;Default&quot;:&quot;Out&quot;},{&quot;Type&quot;:&quot;EasingStyle&quot;,&quot;Name&quot;:&quot;easingStyle&quot;,&quot;Default&quot;:&quot;Quad&quot;},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;time&quot;,&quot;Default&quot;:&quot;1&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;override&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;callback&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TweenSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UDim2&quot;,&quot;Name&quot;:&quot;endSize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;UDim2&quot;,&quot;Name&quot;:&quot;endPosition&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;EasingDirection&quot;,&quot;Name&quot;:&quot;easingDirection&quot;,&quot;Default&quot;:&quot;Out&quot;},{&quot;Type&quot;:&quot;EasingStyle&quot;,&quot;Name&quot;:&quot;easingStyle&quot;,&quot;Default&quot;:&quot;Quad&quot;},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;time&quot;,&quot;Default&quot;:&quot;1&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;override&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;callback&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TweenSizeAndPosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;initialPosition&quot;,&quot;Type&quot;:&quot;UDim2&quot;}],&quot;Name&quot;:&quot;DragBegin&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;DragStopped&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;input&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;InputBegan&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;input&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;InputChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;input&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;InputEnded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseEnter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseLeave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseMoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseWheelBackward&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseWheelForward&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SelectionGained&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SelectionLost&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;}],&quot;Name&quot;:&quot;TouchLongPress&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;totalTranslation&quot;,&quot;Type&quot;:&quot;Vector2&quot;},{&quot;Name&quot;:&quot;velocity&quot;,&quot;Type&quot;:&quot;Vector2&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;}],&quot;Name&quot;:&quot;TouchPan&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;scale&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;velocity&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;}],&quot;Name&quot;:&quot;TouchPinch&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;rotation&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;velocity&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;}],&quot;Name&quot;:&quot;TouchRotate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;swipeDirection&quot;,&quot;Type&quot;:&quot;SwipeDirection&quot;},{&quot;Name&quot;:&quot;numberOfTouches&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;TouchSwipe&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;}],&quot;Name&quot;:&quot;TouchTap&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Frame&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;FrameStyle&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Style&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Frame&quot;},{&quot;Superclass&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiButton&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoButtonColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Modal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Selected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;},{&quot;ValueType&quot;:&quot;ButtonStyle&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Style&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;verb&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetVerb&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;inputObject&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Activated&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseButton1Click&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseButton1Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseButton1Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseButton2Click&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseButton2Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;x&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;y&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;MouseButton2Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ImageButton&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HoverImage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Image&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageRectOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageRectSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsLoaded&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PressedImage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;ScaleType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScaleType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;Rect2D&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SliceCenter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SliceScale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TileSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageButton&quot;},{&quot;Superclass&quot;:&quot;GuiButton&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TextButton&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Font&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Font&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;FontSize&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FontSize&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LineHeight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocalizedText&quot;,&quot;tags&quot;:[&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Text&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextBounds&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextFits&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextScaled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextStrokeColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextStrokeTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;TextTruncate&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextTruncate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextWrap&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextWrapped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;TextXAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextXAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ValueType&quot;:&quot;TextYAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextYAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextButton&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTextFromInput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TextButton&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiLabel&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GuiLabel&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ImageLabel&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Image&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageRectOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageRectSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ImageTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsLoaded&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;ScaleType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScaleType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;Rect2D&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SliceCenter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SliceScale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TileSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageLabel&quot;},{&quot;Superclass&quot;:&quot;GuiLabel&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TextLabel&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Font&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Font&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;FontSize&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FontSize&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LineHeight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocalizedText&quot;,&quot;tags&quot;:[&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Text&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextBounds&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextFits&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextScaled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextStrokeColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextStrokeTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;TextTruncate&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextTruncate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextWrap&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextWrapped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;TextXAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextXAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ValueType&quot;:&quot;TextYAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextYAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextLabel&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTextFromInput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TextLabel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ScrollingFrame&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AbsoluteWindowSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BottomImage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CanvasPosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CanvasSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;ElasticBehavior&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ElasticBehavior&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;ScrollBarInset&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HorizontalScrollBarInset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MidImage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScrollBarImageColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScrollBarImageTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScrollBarThickness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;ScrollingDirection&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScrollingDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScrollingEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TopImage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;ScrollBarInset&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VerticalScrollBarInset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ValueType&quot;:&quot;VerticalScrollBarPosition&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VerticalScrollBarPosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScrollingFrame&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ScrollToTop&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ScrollingFrame&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;GuiObject&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TextBox&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClearTextOnFocus&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;Font&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Font&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;FontSize&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FontSize&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LineHeight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ManualFocusRelease&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MultiLine&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OverlayNativeInput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaceholderColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaceholderText&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShowNativeInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Text&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextBounds&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextFits&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextScaled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextStrokeColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextStrokeTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;TextTruncate&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextTruncate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextWrap&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextWrapped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;TextXAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextXAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ValueType&quot;:&quot;TextYAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextYAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CaptureFocus&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsFocused&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;submitted&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;ReleaseFocus&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ResetKeyboardMode&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTextFromInput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;enterPressed&quot;,&quot;Type&quot;:&quot;bool&quot;},{&quot;Name&quot;:&quot;inputThatCausedFocusLoss&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;FocusLost&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Focused&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;GuiBase2d&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LayerCollector&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LayerCollector&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ResetOnSpawn&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LayerCollector&quot;},{&quot;ValueType&quot;:&quot;ZIndexBehavior&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ZIndexBehavior&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LayerCollector&quot;},{&quot;Superclass&quot;:&quot;LayerCollector&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BillboardGui&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Active&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Adornee&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AlwaysOnTop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClipsDescendants&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExtentsOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExtentsOffsetWorldSpace&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightInfluence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlayerToHideFrom&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SizeOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StudsOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StudsOffsetWorldSpace&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BillboardGui&quot;},{&quot;Superclass&quot;:&quot;LayerCollector&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PluginGui&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Title&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PluginGui&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;function&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;BindToClose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector2&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRelativeMousePosition&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;pluginDragEvent&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PluginDragDropped&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;pluginDragEvent&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PluginDragEntered&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;pluginDragEvent&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PluginDragLeft&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;pluginDragEvent&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PluginDragMoved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WindowFocusReleased&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WindowFocused&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DockWidgetPluginGui&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HostWidgetWasRestored&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DockWidgetPluginGui&quot;},{&quot;Superclass&quot;:&quot;PluginGui&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;QWidgetPluginGui&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;LayerCollector&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ScreenGui&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DisplayOrder&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScreenGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IgnoreGuiInset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScreenGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnTopOfCoreBlur&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;ScreenGui&quot;},{&quot;Superclass&quot;:&quot;ScreenGui&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiMain&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;LayerCollector&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SurfaceGui&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Active&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Adornee&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AlwaysOnTop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CanvasSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClipsDescendants&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Face&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightInfluence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ToolPunchThroughDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ZOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceGui&quot;},{&quot;Superclass&quot;:&quot;GuiBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiBase3d&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiBase3d&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiBase3d&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiBase3d&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Visible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiBase3d&quot;},{&quot;Superclass&quot;:&quot;GuiBase3d&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FloorWire&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CycleOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;From&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StudsBetweenTextures&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Texture&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;To&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Velocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WireRadius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FloorWire&quot;},{&quot;Superclass&quot;:&quot;GuiBase3d&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PVAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:PVInstance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Adornee&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PVAdornment&quot;},{&quot;Superclass&quot;:&quot;PVAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AlwaysOnTop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SizeRelativeOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ZIndex&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseButton1Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseButton1Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseEnter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MouseLeave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BoxHandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BoxHandleAdornment&quot;},{&quot;Superclass&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ConeHandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Height&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ConeHandleAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Radius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ConeHandleAdornment&quot;},{&quot;Superclass&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CylinderHandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Height&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylinderHandleAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Radius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CylinderHandleAdornment&quot;},{&quot;Superclass&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ImageHandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Image&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageHandleAdornment&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ImageHandleAdornment&quot;},{&quot;Superclass&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LineHandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Length&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineHandleAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Thickness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LineHandleAdornment&quot;},{&quot;Superclass&quot;:&quot;HandleAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SphereHandleAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Radius&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SphereHandleAdornment&quot;},{&quot;Superclass&quot;:&quot;PVAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ParabolaAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;A&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ParabolaAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;B&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ParabolaAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;C&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ParabolaAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Range&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ParabolaAdornment&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Thickness&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ParabolaAdornment&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;ignoreDescendentsTable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindPartOnParabola&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ParabolaAdornment&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;PVAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SelectionBox&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LineThickness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionBox&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SurfaceColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;SelectionBox&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SurfaceColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionBox&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SurfaceTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionBox&quot;},{&quot;Superclass&quot;:&quot;PVAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SelectionSphere&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SurfaceColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;SelectionSphere&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SurfaceColor3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionSphere&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SurfaceTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionSphere&quot;},{&quot;Superclass&quot;:&quot;GuiBase3d&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PartAdornment&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Adornee&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PartAdornment&quot;},{&quot;Superclass&quot;:&quot;PartAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HandlesBase&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;HandlesBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ArcHandles&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Axes&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Axes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ArcHandles&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;axis&quot;,&quot;Type&quot;:&quot;Axis&quot;}],&quot;Name&quot;:&quot;MouseButton1Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ArcHandles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;axis&quot;,&quot;Type&quot;:&quot;Axis&quot;}],&quot;Name&quot;:&quot;MouseButton1Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ArcHandles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;axis&quot;,&quot;Type&quot;:&quot;Axis&quot;},{&quot;Name&quot;:&quot;relativeAngle&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;deltaRadius&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;MouseDrag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ArcHandles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;axis&quot;,&quot;Type&quot;:&quot;Axis&quot;}],&quot;Name&quot;:&quot;MouseEnter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ArcHandles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;axis&quot;,&quot;Type&quot;:&quot;Axis&quot;}],&quot;Name&quot;:&quot;MouseLeave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ArcHandles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;HandlesBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Handles&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Faces&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Faces&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;},{&quot;ValueType&quot;:&quot;HandlesStyle&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Style&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;face&quot;,&quot;Type&quot;:&quot;NormalId&quot;}],&quot;Name&quot;:&quot;MouseButton1Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;face&quot;,&quot;Type&quot;:&quot;NormalId&quot;}],&quot;Name&quot;:&quot;MouseButton1Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;face&quot;,&quot;Type&quot;:&quot;NormalId&quot;},{&quot;Name&quot;:&quot;distance&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;MouseDrag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;face&quot;,&quot;Type&quot;:&quot;NormalId&quot;}],&quot;Name&quot;:&quot;MouseEnter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;face&quot;,&quot;Type&quot;:&quot;NormalId&quot;}],&quot;Name&quot;:&quot;MouseLeave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Handles&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;PartAdornment&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SurfaceSelection&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceSelection&quot;},{&quot;Superclass&quot;:&quot;GuiBase3d&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SelectionLasso&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Humanoid&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Humanoid&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionLasso&quot;},{&quot;Superclass&quot;:&quot;SelectionLasso&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SelectionPartLasso&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Part&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionPartLasso&quot;},{&quot;Superclass&quot;:&quot;SelectionLasso&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SelectionPointLasso&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Point&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SelectionPointLasso&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiItem&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GuiItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Backpack&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GuiItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BackpackItem&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BackpackItem&quot;},{&quot;Superclass&quot;:&quot;BackpackItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HopperBin&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Active&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HopperBin&quot;},{&quot;ValueType&quot;:&quot;BinType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BinType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HopperBin&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Disable&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HopperBin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ToggleSelect&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HopperBin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Deselected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HopperBin&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;mouse&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Selected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HopperBin&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;BackpackItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Tool&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CanBeDropped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Grip&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GripForward&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GripPos&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GripRight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GripUp&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ManualActivationOnly&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RequiresHandle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ToolTip&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Activate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Deactivate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Activated&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Deactivated&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;mouse&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Equipped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Unequipped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Tool&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Flag&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TeamColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Flag&quot;},{&quot;Superclass&quot;:&quot;GuiItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ButtonBindingWidget&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GuiItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiRoot&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;GuiItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Hopper&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;GuiItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StarterPack&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuiService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoSelectGuiEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;Class:Folder&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CoreEffectFolder&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;Class:Folder&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CoreGuiFolder&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CoreGuiNavigationEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GuiNavigationEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsModalDialog&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsWindows&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MenuIsOpen&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SelectedCoreObject&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SelectedObject&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;dialog&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CenterDialogType&quot;,&quot;Name&quot;:&quot;centerDialogType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;showFunction&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;hideFunction&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddCenterDialog&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddKey&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;selectionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;selectionParent&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddSelectionParent&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;selectionName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;selections&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddSelectionTuple&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;SpecialKey&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddSpecialKey&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;data&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;notificationType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BroadcastNotification&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearError&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;input&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CloseStatsBasedOnInputString&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetBrickCount&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetClosestDialogToPosition&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;ConnectionError&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetErrorCode&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetErrorMessage&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;ConnectionError&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetErrorType&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetGuiInset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetNotificationTypeList&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetResolutionScale&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetSafeZoneOffsets&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetUiMessage&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsMemoryTrackerEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsTenFootInterface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;OpenBrowserWindow&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;title&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;OpenNativeOverlay&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;dialog&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveCenterDialog&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveKey&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;selectionName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveSelectionGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;SpecialKey&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveSpecialKey&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x1&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y1&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x2&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y2&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetGlobalGuiInset&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;open&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetMenuIsOpen&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;top&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;bottom&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;left&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;right&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetSafeZoneOffsets&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UiMessageType&quot;,&quot;Name&quot;:&quot;msgType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;uiMessage&quot;,&quot;Default&quot;:&quot;errorCode&quot;}],&quot;Name&quot;:&quot;SetUiMessage&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;input&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ShowStatsBasedOnInputString&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ToggleFullscreen&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector2&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetScreenResolution&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;BrowserWindowClosed&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;newErrorMessage&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;ErrorMessageChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;key&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;modifiers&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;KeyPressed&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MenuClosed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MenuOpened&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SafeZoneOffsetsChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ShowLeaveConfirmation&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;key&quot;,&quot;Type&quot;:&quot;SpecialKey&quot;},{&quot;Name&quot;:&quot;modifiers&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;SpecialKeyPressed&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;msgType&quot;,&quot;Type&quot;:&quot;UiMessageType&quot;},{&quot;Name&quot;:&quot;newUiMessage&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;UiMessageChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;title&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;text&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;SendCoreUiNotification&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;GuiService&quot;,&quot;type&quot;:&quot;Callback&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GuidRegistryService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HapticService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;inputType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;VibrationMotor&quot;,&quot;Name&quot;:&quot;vibrationMotor&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetMotor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HapticService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;inputType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;VibrationMotor&quot;,&quot;Name&quot;:&quot;vibrationMotor&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsMotorSupported&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HapticService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;inputType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsVibrationSupported&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HapticService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;inputType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;VibrationMotor&quot;,&quot;Name&quot;:&quot;vibrationMotor&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;vibrationValues&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetMotor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HapticService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HttpRbxApiService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;apiUrlPath&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThrottlingPriority&quot;,&quot;Name&quot;:&quot;priority&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;GetAsync&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRbxApiService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;apiUrl&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThrottlingPriority&quot;,&quot;Name&quot;:&quot;priority&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;GetAsyncFullUrl&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRbxApiService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;apiUrlPath&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;data&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThrottlingPriority&quot;,&quot;Name&quot;:&quot;priority&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;HttpContentType&quot;,&quot;Name&quot;:&quot;content_type&quot;,&quot;Default&quot;:&quot;ApplicationJson&quot;},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;PostAsync&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRbxApiService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;apiUrl&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;data&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThrottlingPriority&quot;,&quot;Name&quot;:&quot;priority&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;HttpContentType&quot;,&quot;Name&quot;:&quot;content_type&quot;,&quot;Default&quot;:&quot;ApplicationJson&quot;},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;PostAsyncFullUrl&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRbxApiService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;requestOptions&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThrottlingPriority&quot;,&quot;Name&quot;:&quot;priority&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;HttpContentType&quot;,&quot;Name&quot;:&quot;content_type&quot;,&quot;Default&quot;:&quot;ApplicationJson&quot;},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;RequestAsync&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRbxApiService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HttpRequest&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Cancel&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRequest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;callback&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Start&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpRequest&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;HttpService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HttpEnabled&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;HttpService&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;wrapInCurlyBraces&quot;,&quot;Default&quot;:&quot;true&quot;}],&quot;Name&quot;:&quot;GenerateGUID&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetHttpEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;input&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;JSONDecode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;input&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;JSONEncode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;options&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RequestInternal&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetHttpEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;input&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UrlEncode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;nocache&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;headers&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;data&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;HttpContentType&quot;,&quot;Name&quot;:&quot;content_type&quot;,&quot;Default&quot;:&quot;ApplicationJson&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;compress&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;headers&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PostAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;requestOptions&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RequestAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;HttpService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Humanoid&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoJumpEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoRotate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutomaticScalingEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;HumanoidDisplayDistanceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DisplayDistanceType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Material&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FloorMaterial&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Health&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HealthDisplayDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;HumanoidHealthDisplayType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HealthDisplayType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HipHeight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Jump&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;JumpPower&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftLeg&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxHealth&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxSlopeAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MoveDirection&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NameDisplayDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;NameOcclusion&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NameOcclusion&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlatformStand&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;HumanoidRigType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RigType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightLeg&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RootPart&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SeatPart&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Sit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetPoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Torso&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WalkSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WalkToPart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WalkToPoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;maxHealth&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;accessory&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddAccessory&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;status&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddCustomStatus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Status&quot;,&quot;Name&quot;:&quot;status&quot;,&quot;Default&quot;:&quot;Poison&quot;}],&quot;Name&quot;:&quot;AddStatus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;BuildRigFromAttachments&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;HumanoidStateType&quot;,&quot;Name&quot;:&quot;state&quot;,&quot;Default&quot;:&quot;None&quot;}],&quot;Name&quot;:&quot;ChangeState&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;tool&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;EquipTool&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetAccessories&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;BodyPartR15&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetBodyPartR15&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Limb&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetLimb&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlayingAnimationTracks&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;HumanoidStateType&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetState&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;HumanoidStateType&quot;,&quot;Name&quot;:&quot;state&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetStateEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetStatuses&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;status&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;HasCustomStatus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Status&quot;,&quot;Name&quot;:&quot;status&quot;,&quot;Default&quot;:&quot;Poison&quot;}],&quot;Name&quot;:&quot;HasStatus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;animation&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadAnimation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;moveDirection&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;relativeToCamera&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;Move&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;location&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;MoveTo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RemoveAccessories&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;status&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveCustomStatus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Status&quot;,&quot;Name&quot;:&quot;status&quot;,&quot;Default&quot;:&quot;Poison&quot;}],&quot;Name&quot;:&quot;RemoveStatus&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;BodyPartR15&quot;,&quot;Name&quot;:&quot;bodyPart&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReplaceBodyPartR15&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetClickToWalkEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;HumanoidStateType&quot;,&quot;Name&quot;:&quot;state&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetStateEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;amount&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;TakeDamage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;UnequipTools&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;animation&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;loadAnimation&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;amount&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;takeDamage&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;animationTrack&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;AnimationPlayed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;speed&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;Climbing&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;status&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;CustomStatusAdded&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;status&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;CustomStatusRemoved&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Died&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;FallingDown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;FreeFalling&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;GettingUp&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;health&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;HealthChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;Jumping&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;reached&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;MoveToFinished&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;PlatformStanding&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;Ragdoll&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;speed&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;Running&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;},{&quot;Name&quot;:&quot;currentSeatPart&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Seated&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;old&quot;,&quot;Type&quot;:&quot;HumanoidStateType&quot;},{&quot;Name&quot;:&quot;new&quot;,&quot;Type&quot;:&quot;HumanoidStateType&quot;}],&quot;Name&quot;:&quot;StateChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;HumanoidStateType&quot;},{&quot;Name&quot;:&quot;isEnabled&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;StateEnabledChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;status&quot;,&quot;Type&quot;:&quot;Status&quot;}],&quot;Name&quot;:&quot;StatusAdded&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;status&quot;,&quot;Type&quot;:&quot;Status&quot;}],&quot;Name&quot;:&quot;StatusRemoved&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;active&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;Strafing&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;speed&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;Swimming&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchingPart&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;humanoidPart&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Touched&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Humanoid&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;InputObject&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Delta&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InputObject&quot;},{&quot;ValueType&quot;:&quot;KeyCode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;KeyCode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InputObject&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InputObject&quot;},{&quot;ValueType&quot;:&quot;UserInputState&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UserInputState&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InputObject&quot;},{&quot;ValueType&quot;:&quot;UserInputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UserInputType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InputObject&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;InsertService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AllowInsertFreeModels&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;notbrowsable&quot;],&quot;Class&quot;:&quot;InsertService&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ApproveAssetId&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetVersionId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ApproveAssetVersionId&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;instance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Insert&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;assetPath&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadLocalAsset&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetBaseCategories&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetBaseSets&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;categoryId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCollection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;searchText&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;pageNum&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetFreeDecals&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;searchText&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;pageNum&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetFreeModels&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetLatestAssetVersionAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserCategories&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserSets&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadAsset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetVersionId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadAssetVersion&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;loadAsset&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;InsertService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;InstancePacketCache&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;JointInstance&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;C0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointInstance&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;C1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointInstance&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Part0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointInstance&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Part1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointInstance&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;part1&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;JointInstance&quot;},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DynamicRotate&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BaseAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DynamicRotate&quot;},{&quot;Superclass&quot;:&quot;DynamicRotate&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RotateP&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;DynamicRotate&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RotateV&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Glue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;F0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Glue&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;F1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Glue&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;F2&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Glue&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;F3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Glue&quot;},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ManualSurfaceJointInstance&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;ManualSurfaceJointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ManualGlue&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;ManualSurfaceJointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ManualWeld&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Motor&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Motor&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DesiredAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Motor&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Motor&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetDesiredAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Motor&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Motor&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Motor6D&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transform&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;Motor6D&quot;},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Rotate&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Snap&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VelocityMotor&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VelocityMotor&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DesiredAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VelocityMotor&quot;},{&quot;ValueType&quot;:&quot;Class:Hole&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Hole&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VelocityMotor&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VelocityMotor&quot;},{&quot;Superclass&quot;:&quot;JointInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Weld&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;JointsService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearJoinAfterMoveJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CreateJoinAfterMoveJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;joinInstance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetJoinAfterMoveInstance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;joinTarget&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetJoinAfterMoveTarget&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ShowPermissibleJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;JointsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;KeyboardService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Keyframe&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Time&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Keyframe&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pose&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddPose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Keyframe&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPoses&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Keyframe&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pose&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemovePose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Keyframe&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;KeyframeSequence&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Loop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequence&quot;},{&quot;ValueType&quot;:&quot;AnimationPriority&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Priority&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequence&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;keyframe&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddKeyframe&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequence&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetKeyframes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequence&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;keyframe&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveKeyframe&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequence&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Content&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetKeyframeSequence&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;useCache&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetKeyframeSequenceById&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Content&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;keyframeSequence&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterActiveKeyframeSequence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Content&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;keyframeSequence&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterKeyframeSequence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetAnimations&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Content&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetKeyframeSequenceAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;KeyframeSequenceProvider&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Light&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Brightness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Light&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Light&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Light&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Shadows&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Light&quot;},{&quot;Superclass&quot;:&quot;Light&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PointLight&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Range&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PointLight&quot;},{&quot;Superclass&quot;:&quot;Light&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SpotLight&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Angle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpotLight&quot;},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Face&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpotLight&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Range&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpotLight&quot;},{&quot;Superclass&quot;:&quot;Light&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SurfaceLight&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Angle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceLight&quot;},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Face&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceLight&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Range&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SurfaceLight&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Lighting&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Ambient&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Brightness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClockTime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ColorShift_Bottom&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ColorShift_Top&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExposureCompensation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FogColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FogEnd&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FogStart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GeographicLatitude&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GlobalShadows&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OutdoorAmbient&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Outlines&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShadowColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TimeOfDay&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMinutesAfterMidnight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMoonDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMoonPhase&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetSunDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;minutes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetMinutesAfterMidnight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;getMinutesAfterMidnight&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;minutes&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;setMinutesAfterMidnight&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;skyboxChanged&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;LightingChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Lighting&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LocalizationService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ForcePlayModeGameLocaleId&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ForcePlayModeRobloxLocaleId&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsTextScraperRunning&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RobloxForcePlayModeGameLocaleId&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RobloxForcePlayModeRobloxLocaleId&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RobloxLocaleId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SystemLocaleId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCorescriptLocalizations&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTranslatorForPlayer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StartTextScraper&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StopTextScraper&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;PromptExportToCSVs&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;PromptImportFromCSVs&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;AutoTranslateWillRun&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LocalizationTable&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevelopmentLanguage&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Root&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SourceLocaleId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetContents&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetEntries&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;targetLocaleId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetString&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;localeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTranslator&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveEntry&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;localeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveEntryValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveKey&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;localeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveTargetLocale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;contents&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetContents&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;entries&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntries&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;targetLocaleId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntry&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;newContext&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntryContext&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;example&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntryExample&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;newKey&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntryKey&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;newSource&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntrySource&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;localeId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetEntryValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetIsExemptFromUGCAnalytics&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LocalizationTable&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LogService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ExecuteScript&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetHttpResultHistory&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetLogHistory&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RequestHttpResultApproved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RequestServerHttpResult&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RequestServerOutput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;httpResult&quot;,&quot;Type&quot;:&quot;Dictionary&quot;}],&quot;Name&quot;:&quot;HttpResultOut&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;messageType&quot;,&quot;Type&quot;:&quot;MessageType&quot;}],&quot;Name&quot;:&quot;MessageOut&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;isApproved&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;OnHttpResultApproved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;httpResult&quot;,&quot;Type&quot;:&quot;Dictionary&quot;}],&quot;Name&quot;:&quot;ServerHttpResultOut&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;messageType&quot;,&quot;Type&quot;:&quot;MessageType&quot;},{&quot;Name&quot;:&quot;timestamp&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;ServerMessageOut&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;LogService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LoginService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Logout&quot;,&quot;tags&quot;:[&quot;RobloxSecurity&quot;],&quot;Class&quot;:&quot;LoginService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;PromptLogin&quot;,&quot;tags&quot;:[&quot;RobloxSecurity&quot;],&quot;Class&quot;:&quot;LoginService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;loginError&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;LoginFailed&quot;,&quot;tags&quot;:[&quot;RobloxSecurity&quot;],&quot;Class&quot;:&quot;LoginService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;username&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;LoginSucceeded&quot;,&quot;tags&quot;:[&quot;RobloxSecurity&quot;],&quot;Class&quot;:&quot;LoginService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LuaSettings&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreScriptStartsReported&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DefaultWaitTime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GcFrequency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GcLimit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GcPause&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GcStepMul&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WaitingThreadsBudget&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;LuaSettings&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LuaSourceContainer&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;Superclass&quot;:&quot;LuaSourceContainer&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BaseScript&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Disabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BaseScript&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LinkedSource&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BaseScript&quot;},{&quot;Superclass&quot;:&quot;BaseScript&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CoreScript&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;BaseScript&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Script&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;ProtectedString&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Source&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Script&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetHash&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Script&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Script&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LocalScript&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;LuaSourceContainer&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ModuleScript&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LinkedSource&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ModuleScript&quot;},{&quot;ValueType&quot;:&quot;ProtectedString&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Source&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ModuleScript&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;LuaWebService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;MarketplaceService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PlayerCanMakePurchases&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;gamePassId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PromptGamePassPurchase&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;productId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PromptNativePurchase&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;productId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;equipIfPurchased&quot;,&quot;Default&quot;:&quot;true&quot;},{&quot;Type&quot;:&quot;CurrencyType&quot;,&quot;Name&quot;:&quot;currencyType&quot;,&quot;Default&quot;:&quot;Default&quot;}],&quot;Name&quot;:&quot;PromptProductPurchase&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;equipIfPurchased&quot;,&quot;Default&quot;:&quot;true&quot;},{&quot;Type&quot;:&quot;CurrencyType&quot;,&quot;Name&quot;:&quot;currencyType&quot;,&quot;Default&quot;:&quot;Default&quot;}],&quot;Name&quot;:&quot;PromptPurchase&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;productId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PromptThirdPartyPurchase&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;robuxAmount&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReportAssetSale&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ReportRobuxUpsellStarted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;ticket&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;playerId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;productId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SignalClientPurchaseSuccess&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;gamePassId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;success&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SignalPromptGamePassPurchaseFinished&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;productId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;success&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SignalPromptProductPurchaseFinished&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;success&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SignalPromptPurchaseFinished&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SignalServerLuaDialogClosed&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetDeveloperProductsAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;InfoType&quot;,&quot;Name&quot;:&quot;infoType&quot;,&quot;Default&quot;:&quot;Asset&quot;}],&quot;Name&quot;:&quot;GetProductInfo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRobuxBalance&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;InfoType&quot;,&quot;Name&quot;:&quot;infoType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;productId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;expectedPrice&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;requestId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PerformPurchase&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;assetId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PlayerOwnsAsset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;gamePassId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UserOwnsGamePassAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;ClientLuaDialogRequested&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;ticket&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;playerId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;productId&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;ClientPurchaseSuccess&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;productId&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;wasPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;NativePurchaseFinished&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gamePassId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;wasPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;PromptGamePassPurchaseFinished&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gamePassId&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;PromptGamePassPurchaseRequested&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;userId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;productId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;isPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;PromptProductPurchaseFinished&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;productId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;equipIfPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;},{&quot;Name&quot;:&quot;currencyType&quot;,&quot;Type&quot;:&quot;CurrencyType&quot;}],&quot;Name&quot;:&quot;PromptProductPurchaseRequested&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;assetId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;isPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;PromptPurchaseFinished&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;assetId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;equipIfPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;},{&quot;Name&quot;:&quot;currencyType&quot;,&quot;Type&quot;:&quot;CurrencyType&quot;}],&quot;Name&quot;:&quot;PromptPurchaseRequested&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;serverResponseTable&quot;,&quot;Type&quot;:&quot;Dictionary&quot;}],&quot;Name&quot;:&quot;ServerPurchaseVerification&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;productId&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;receipt&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;wasPurchased&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;ThirdPartyPurchaseFinished&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;ReturnType&quot;:&quot;ProductPurchaseDecision&quot;,&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;receiptInfo&quot;,&quot;Type&quot;:&quot;Dictionary&quot;}],&quot;Name&quot;:&quot;ProcessReceipt&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MarketplaceService&quot;,&quot;type&quot;:&quot;Callback&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Message&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Text&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Message&quot;},{&quot;Superclass&quot;:&quot;Message&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Hint&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Mouse&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Hit&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Icon&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Origin&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Target&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetFilter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TargetSurface&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;Ray&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UnitRay&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ViewSizeX&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ViewSizeY&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;X&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Y&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;hit&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Mouse&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Button1Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Button1Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Button2Down&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Button2Up&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Idle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;key&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;KeyDown&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;key&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;KeyUp&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Move&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WheelBackward&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WheelForward&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;key&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;keyDown&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PlayerMouse&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Mouse&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PluginMouse&quot;,&quot;tags&quot;:[]},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;instances&quot;,&quot;Type&quot;:&quot;Objects&quot;}],&quot;Name&quot;:&quot;DragEnter&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginMouse&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;MouseService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NetworkMarker&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Received&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkMarker&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NetworkPeer&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;limit&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetOutgoingKBPSLimit&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;NetworkPeer&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;NetworkPeer&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NetworkClient&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Ticket&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkClient&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;peer&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;replicator&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ConnectionAccepted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkClient&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;peer&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;code&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;reason&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;ConnectionFailed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkClient&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;peer&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;ConnectionRejected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkClient&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;NetworkPeer&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NetworkServer&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Port&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;NetworkServer&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetClientCount&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;NetworkServer&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NetworkReplicator&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CloseConnection&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;NetworkReplicator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlayer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkReplicator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;verbosityLevel&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;GetRakStatsString&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;NetworkReplicator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;NetworkReplicator&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ClientReplicator&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;request&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RequestServerStats&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ClientReplicator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;stats&quot;,&quot;Type&quot;:&quot;Dictionary&quot;}],&quot;Name&quot;:&quot;StatsReceived&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ClientReplicator&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;NetworkReplicator&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ServerReplicator&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NetworkSettings&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ArePhysicsRejectionsReported&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClientPhysicsSendRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataGCRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataMtuAdjust&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;PacketPriority&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataSendPriority&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataSendRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExtraMemoryUsed&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FreeMemoryMBytes&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IncommingReplicationLag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsQueueErrorComputed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NetworkOwnerRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsMtuAdjust&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;PacketPriority&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsSendPriority&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsSendRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PreferredClientPort&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintBits&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintEvents&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintFilters&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintInstances&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintPhysicsErrors&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintProperties&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintSplitMessage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintStreamInstanceQuota&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrintTouches&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReceiveRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RenderStreamedRegions&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShowActiveAnimationAsset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TouchSendRate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TrackDataTypes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TrackPhysicsDetails&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UseInstancePacketCache&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UsePhysicsPacketCache&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NetworkSettings&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NotificationService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsLuaChatEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;NotificationService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsLuaGamesPageEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;NotificationService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsLuaHomePageEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;NotificationService&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;AppShellActionType&quot;,&quot;Name&quot;:&quot;actionType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ActionEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;AppShellActionType&quot;,&quot;Name&quot;:&quot;actionType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ActionTaken&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CancelAllNotification&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;alertId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CancelNotification&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;alertId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;alertMsg&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;minutesToFire&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ScheduleNotification&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetScheduledNotifications&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;connectionName&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;connectionState&quot;,&quot;Type&quot;:&quot;ConnectionState&quot;},{&quot;Name&quot;:&quot;sequenceNumber&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;RobloxConnectionChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;eventData&quot;,&quot;Type&quot;:&quot;Map&quot;}],&quot;Name&quot;:&quot;RobloxEventReceived&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;NotificationService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PVInstance&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;Superclass&quot;:&quot;PVInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BasePart&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Anchored&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackParamA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackParamB&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;SurfaceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;InputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BackSurfaceInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BottomParamA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BottomParamB&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;SurfaceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BottomSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;InputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BottomSurfaceInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BrickColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CanCollide&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CenterOfMass&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CollisionGroupId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;PhysicalProperties&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CustomPhysicalProperties&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Elasticity&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Friction&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FrontParamA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FrontParamB&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;SurfaceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FrontSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;InputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FrontSurfaceInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftParamA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftParamB&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;SurfaceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;InputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LeftSurfaceInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocalTransparencyModifier&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Locked&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Material&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Material&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Orientation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReceiveAge&quot;,&quot;tags&quot;:[&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Reflectance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ResizeIncrement&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Faces&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ResizeableFaces&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightParamA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightParamB&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;SurfaceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;InputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RightSurfaceInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RotVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rotation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SpecificGravity&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TopParamA&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TopParamB&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;SurfaceType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TopSurface&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;InputType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TopSurfaceInput&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Velocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;brickColor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;BreakJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CanCollideWith&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CanSetNetworkOwnership&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;recursive&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;GetConnectedParts&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMass&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetNetworkOwner&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetNetworkOwnershipAuto&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;CoordinateFrame&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRenderCFrame&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRootPart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetTouchingParts&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsGrounded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MakeJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;NormalId&quot;,&quot;Name&quot;:&quot;normalId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;deltaAmount&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Resize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;playerInstance&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;SetNetworkOwner&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SetNetworkOwnershipAuto&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;breakJoints&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;getMass&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;makeJoints&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;NormalId&quot;,&quot;Name&quot;:&quot;normalId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;deltaAmount&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;resize&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;parts&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CollisionFidelity&quot;,&quot;Name&quot;:&quot;collisionfidelity&quot;,&quot;Default&quot;:&quot;Default&quot;}],&quot;Name&quot;:&quot;SubtractAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;parts&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CollisionFidelity&quot;,&quot;Name&quot;:&quot;collisionfidelity&quot;,&quot;Default&quot;:&quot;Default&quot;}],&quot;Name&quot;:&quot;UnionAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;part&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;LocalSimulationTouched&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;OutfitChanged&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;otherPart&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;StoppedTouching&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;otherPart&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;TouchEnded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;otherPart&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Touched&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;otherPart&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;touched&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CornerWedgePart&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FormFactorPart&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;FormFactor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FormFactor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;FormFactorPart&quot;},{&quot;ValueType&quot;:&quot;FormFactor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;formFactor&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;FormFactorPart&quot;},{&quot;Superclass&quot;:&quot;FormFactorPart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Part&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;PartType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Shape&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Part&quot;},{&quot;Superclass&quot;:&quot;Part&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FlagStand&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TeamColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FlagStand&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;FlagCaptured&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FlagStand&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Part&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Platform&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Part&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Seat&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Disabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Seat&quot;},{&quot;ValueType&quot;:&quot;Class:Humanoid&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Occupant&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Seat&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;humanoid&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Sit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Seat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Part&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SkateboardPlatform&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;Class:SkateboardController&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Controller&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;SkateboardPlatform&quot;},{&quot;ValueType&quot;:&quot;Class:Humanoid&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ControllingHumanoid&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;SkateboardPlatform&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Steer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StickyWheels&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Throttle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;impulseWorld&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ApplySpecificImpulse&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;humanoid&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;skateboardController&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Equipped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;newState&quot;,&quot;Type&quot;:&quot;MoveState&quot;},{&quot;Name&quot;:&quot;oldState&quot;,&quot;Type&quot;:&quot;MoveState&quot;}],&quot;Name&quot;:&quot;MoveStateChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;humanoid&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Unequipped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SkateboardPlatform&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;humanoid&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;skateboardController&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;equipped&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;SkateboardPlatform&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;humanoid&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;unequipped&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;SkateboardPlatform&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Part&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SpawnLocation&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AllowTeamChangeOnTouch&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpawnLocation&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Duration&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpawnLocation&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpawnLocation&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Neutral&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpawnLocation&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TeamColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SpawnLocation&quot;},{&quot;Superclass&quot;:&quot;FormFactorPart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;WedgePart&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;MeshPart&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MeshId&quot;,&quot;tags&quot;:[&quot;ScriptWriteRestricted: [NotAccessibleSecurity]&quot;],&quot;Class&quot;:&quot;MeshPart&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureID&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;MeshPart&quot;},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PartOperation&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TriangleCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PartOperation&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UsePartColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PartOperation&quot;},{&quot;Superclass&quot;:&quot;PartOperation&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NegateOperation&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;PartOperation&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UnionOperation&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Terrain&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsSmooth&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ValueType&quot;:&quot;Region3int16&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxExtents&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WaterColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WaterReflectance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WaterTransparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WaterWaveSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WaterWaveSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AutowedgeCell&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3int16&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AutowedgeCells&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CellCenterToWorld&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CellCornerToWorld&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Clear&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ConvertToSmooth&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3int16&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CopyRegion&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CountCells&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;center&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;radius&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Material&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FillBall&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;cframe&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;size&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Material&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FillBlock&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;resolution&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Material&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FillRegion&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCell&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Color3&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Material&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetMaterialColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetWaterCell&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector3int16&quot;,&quot;Name&quot;:&quot;corner&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;pasteEmptyCells&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PasteRegion&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;resolution&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReadVoxels&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CellMaterial&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CellBlock&quot;,&quot;Name&quot;:&quot;block&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CellOrientation&quot;,&quot;Name&quot;:&quot;orientation&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetCell&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3int16&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CellMaterial&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CellBlock&quot;,&quot;Name&quot;:&quot;block&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CellOrientation&quot;,&quot;Name&quot;:&quot;orientation&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetCells&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Material&quot;,&quot;Name&quot;:&quot;material&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Color3&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetMaterialColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;WaterForce&quot;,&quot;Name&quot;:&quot;force&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;WaterDirection&quot;,&quot;Name&quot;:&quot;direction&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetWaterCell&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WorldToCell&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WorldToCellPreferEmpty&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WorldToCellPreferSolid&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;resolution&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Array&quot;,&quot;Name&quot;:&quot;materials&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Array&quot;,&quot;Name&quot;:&quot;occupancy&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WriteVoxels&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Terrain&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TrussPart&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Style&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Style&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TrussPart&quot;},{&quot;Superclass&quot;:&quot;BasePart&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VehicleSeat&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreHingesDetected&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Disabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HeadsUpDisplay&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;Class:Humanoid&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Occupant&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Steer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SteerFloat&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Throttle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ThrottleFloat&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Torque&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TurnSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;humanoid&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Sit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VehicleSeat&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;PVInstance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Model&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrimaryPart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;BreakJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetExtentsSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;CoordinateFrame&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetModelCFrame&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector3&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetModelSize&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;CoordinateFrame&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPrimaryPartCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;MakeJoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;MoveTo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ResetOrientationToIdentity&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SetIdentityOrientation&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;cframe&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetPrimaryPartCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;delta&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;TranslateBy&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;breakJoints&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;makeJoints&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;location&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;move&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;location&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;moveTo&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Status&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Model&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Workspace&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AllowThirdPartySales&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;Class:Camera&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentCamera&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DistributedGameTime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FallenPartsDestroyHeight&quot;,&quot;tags&quot;:[&quot;ScriptWriteRestricted: [PluginSecurity]&quot;],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FilteringEnabled&quot;,&quot;tags&quot;:[&quot;ScriptWriteRestricted: [PluginSecurity]&quot;],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Gravity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StreamingEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TemporaryLegacyPhysicsSolverOverride&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Terrain&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Workspace&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BreakJoints&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ExperimentalSolverIsEnabled&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Ray&quot;,&quot;Name&quot;:&quot;ray&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ignoreDescendantsInstance&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;terrainCellsAreCubes&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;ignoreWater&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;FindPartOnRay&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Ray&quot;,&quot;Name&quot;:&quot;ray&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;ignoreDescendantsTable&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;terrainCellsAreCubes&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;ignoreWater&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;FindPartOnRayWithIgnoreList&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Ray&quot;,&quot;Name&quot;:&quot;ray&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;whitelistDescendantsTable&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;ignoreWater&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;FindPartOnRayWithWhitelist&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ignoreDescendantsInstance&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;maxParts&quot;,&quot;Default&quot;:&quot;20&quot;}],&quot;Name&quot;:&quot;FindPartsInRegion3&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;ignoreDescendantsTable&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;maxParts&quot;,&quot;Default&quot;:&quot;20&quot;}],&quot;Name&quot;:&quot;FindPartsInRegion3WithIgnoreList&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;whitelistDescendantsTable&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;maxParts&quot;,&quot;Default&quot;:&quot;20&quot;}],&quot;Name&quot;:&quot;FindPartsInRegion3WithWhiteList&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetNumAwakeParts&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPhysicsAnalyzerBreakOnIssue&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;index&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPhysicsAnalyzerIssue&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPhysicsThrottling&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRealPhysicsFPS&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ignoreDescendentsInstance&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;IsRegion3Empty&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;ignoreDescendentsTable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsRegion3EmptyWithIgnoreList&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;JointCreationMode&quot;,&quot;Name&quot;:&quot;jointType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;JoinToOutsiders&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;MakeJoints&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;PGSIsEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetPhysicsAnalyzerBreakOnIssue&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetPhysicsThrottleEnabled&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UnjoinFromOutsiders&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ZoomToExtents&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Ray&quot;,&quot;Name&quot;:&quot;ray&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ignoreDescendantsInstance&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;terrainCellsAreCubes&quot;,&quot;Default&quot;:&quot;false&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;ignoreWater&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;findPartOnRay&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Region3&quot;,&quot;Name&quot;:&quot;region&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;ignoreDescendantsInstance&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;maxParts&quot;,&quot;Default&quot;:&quot;20&quot;}],&quot;Name&quot;:&quot;findPartsInRegion3&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;count&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;PhysicsAnalyzerIssuesFound&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Workspace&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PackageLink&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PackageId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PackageLink&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VersionNumber&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PackageLink&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Pages&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsFinished&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Pages&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCurrentPage&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pages&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;AdvanceToNextPageAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pages&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Pages&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DataStorePages&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Pages&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FriendPages&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Pages&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;InventoryPages&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Pages&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StandardPages&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PartOperationAsset&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ParticleEmitter&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Acceleration&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;ColorSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Drag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NormalId&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EmissionDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NumberRange&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Lifetime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightEmission&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightInfluence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LockedToPart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NumberRange&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RotSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NumberRange&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rotation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NumberSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NumberRange&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Speed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SpreadAngle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Texture&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;NumberSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VelocityInheritance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VelocitySpread&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ZOffset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Clear&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;particleCount&quot;,&quot;Default&quot;:&quot;16&quot;}],&quot;Name&quot;:&quot;Emit&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ParticleEmitter&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Path&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;PathStatus&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Status&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Path&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPointCoordinates&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Path&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetWaypoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Path&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;start&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CheckOcclusionAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Path&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PathfindingService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EmptyCutoff&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;PathfindingService&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;start&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;finish&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;maxDistance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ComputeRawPathAsync&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;PathfindingService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;start&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;finish&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;maxDistance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ComputeSmoothPathAsync&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;PathfindingService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;start&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;finish&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindPathAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PathfindingService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PhysicsPacketCache&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PhysicsService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CollisionGroupContainsPart&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name1&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name2&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;collidable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CollisionGroupSetCollidable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name1&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name2&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CollisionGroupsAreCollidable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CreateCollisionGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCollisionGroupId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCollisionGroupName&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCollisionGroups&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMaxCollisionGroups&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;translateStiffness&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;rotateStiffness&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IkSolve&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;target&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;translateStiffness&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;rotateStiffness&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LocalIkSolve&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveCollisionGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;from&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;to&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RenameCollisionGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;part&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetPartCollisionGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PhysicsSettings&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AllowSleep&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreAnchorsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreAssembliesShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreAwakePartsHighlighted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreBodyTypesShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreContactIslandsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreContactPointsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreJointCoordinatesShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreMechanismsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreModelCoordsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreOwnersShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ArePartCoordsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreRegionsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreUnalignedPartsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AreWorldCoordsShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DisableCSGv2&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsReceiveAgeShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsTreeShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsAnalyzerEnabled&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;EnviromentalPhysicsThrottle&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsEnvironmentalThrottle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShowDecompositionGeometry&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ThrottleAdjustTime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UseCSGv2&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PhysicsSettings&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Player&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AccountAge&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AppearanceDidLoad&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoJumpEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMaxZoomDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMinZoomDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;CameraMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CanLoadCharacterAppearance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;Class:Model&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Character&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CharacterAppearance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;notbrowsable&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CharacterAppearanceId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;ChatMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ChatMode&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataComplexity&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataComplexityLimit&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataReady&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;DevCameraOcclusionMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevCameraOcclusionMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;DevComputerCameraMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevComputerCameraMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;DevComputerMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevComputerMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevEnableMouseLock&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;DevTouchCameraMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevTouchCameraMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;DevTouchMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevTouchMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DisplayName&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FollowUserId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Guest&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HealthDisplayDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocaleId&quot;,&quot;tags&quot;:[&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaximumSimulationRadius&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;MembershipType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MembershipType&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NameDisplayDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Neutral&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OsPlatform&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReplicationFocus&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;Class:SpawnLocation&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RespawnLocation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SimulationRadius&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;Class:Team&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Team&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TeamColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Teleported&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TeleportedIn&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UserId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VRDevice&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Array&quot;,&quot;Name&quot;:&quot;userIds&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddToBlockList&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearCharacterAppearance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;point&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;DistanceFromCharacter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;FriendStatus&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetFriendStatus&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetGameSessionID&quot;,&quot;tags&quot;:[&quot;RobloxSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetJoinData&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMouse&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetUnder13&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;HasAppearanceLoaded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsUserAvailableForExperiment&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;Kick&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadBoolean&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;assetInstance&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadCharacterAppearance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;LoadData&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadInstance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadNumber&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;LoadString&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector3&quot;,&quot;Name&quot;:&quot;walkDirection&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;relativeToCamera&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;Move&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RemoveCharacter&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RequestFriendship&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RevokeFriendship&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SaveBoolean&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SaveData&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SaveInstance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SaveNumber&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SaveString&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;accountAge&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetAccountAge&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;MembershipType&quot;,&quot;Name&quot;:&quot;membershipType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetMembershipType&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetSuperSafeChat&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetUnder13&quot;,&quot;tags&quot;:[&quot;RobloxSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;blocked&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UpdatePlayerBlocked&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;loadBoolean&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;loadInstance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;loadNumber&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;loadString&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;saveBoolean&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;saveInstance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;saveNumber&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;saveString&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;maxFriends&quot;,&quot;Default&quot;:&quot;200&quot;}],&quot;Name&quot;:&quot;GetFriendsOnline&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;groupId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetRankInGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;groupId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetRoleInGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsBestFriendsWith&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsFriendsWith&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;groupId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsInGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;LoadCharacter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;LoadCharacterBlocking&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WaitForDataReady&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;isFriendsWith&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;waitForDataReady&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;character&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;CharacterAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;character&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;CharacterAppearanceLoaded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;character&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;CharacterRemoving&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;recipient&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Chatted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;friendStatus&quot;,&quot;Type&quot;:&quot;FriendStatus&quot;}],&quot;Name&quot;:&quot;FriendStatusChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;time&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;Idled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;teleportState&quot;,&quot;Type&quot;:&quot;TeleportState&quot;},{&quot;Name&quot;:&quot;placeId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;spawnName&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;OnTeleport&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;radius&quot;,&quot;Type&quot;:&quot;float&quot;}],&quot;Name&quot;:&quot;SimulationRadiusChanged&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Player&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PlayerScripts&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearComputerCameraMovementModes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearComputerMovementModes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearTouchCameraMovementModes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ClearTouchMovementModes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRegisteredComputerCameraMovementModes&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRegisteredComputerMovementModes&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRegisteredTouchCameraMovementModes&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRegisteredTouchMovementModes&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;ComputerCameraMovementMode&quot;,&quot;Name&quot;:&quot;cameraMovementMode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterComputerCameraMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;ComputerMovementMode&quot;,&quot;Name&quot;:&quot;movementMode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterComputerMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;TouchCameraMovementMode&quot;,&quot;Name&quot;:&quot;cameraMovementMode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterTouchCameraMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;TouchMovementMode&quot;,&quot;Name&quot;:&quot;movementMode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterTouchMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ComputerCameraMovementModeRegistered&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ComputerMovementModeRegistered&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;TouchCameraMovementModeRegistered&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;TouchMovementModeRegistered&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;PlayerScripts&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Players&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BubbleChat&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CharacterAutoLoads&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClassicChat&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocalPlayer&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxPlayers&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxPlayersInternal&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NumPlayers&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PreferredPlayers&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PreferredPlayersInternal&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;localPlayer&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;numPlayers&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Players&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Chat&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CreateLocalPlayer&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPlayerByUserId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;character&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPlayerFromCharacter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlayers&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;reason&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;optionalMessage&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReportAbuse&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;ChatStyle&quot;,&quot;Name&quot;:&quot;style&quot;,&quot;Default&quot;:&quot;Classic&quot;}],&quot;Name&quot;:&quot;SetChatStyle&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;TeamChat&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;message&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;WhisperChat&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;character&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;getPlayerFromCharacter&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;getPlayers&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;character&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;playerFromCharacter&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;players&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCharacterAppearanceAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetCharacterAppearanceInfoAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetFriendsAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetNameFromUserIdAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;userName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserIdFromNameAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThumbnailType&quot;,&quot;Name&quot;:&quot;thumbnailType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;ThumbnailSize&quot;,&quot;Name&quot;:&quot;thumbnailSize&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserThumbnailAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;friendRequestEvent&quot;,&quot;Type&quot;:&quot;FriendRequestEvent&quot;}],&quot;Name&quot;:&quot;FriendRequestEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;GameAnnounce&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;chatType&quot;,&quot;Type&quot;:&quot;PlayerChatType&quot;},{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;targetPlayer&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerChatted&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerConnecting&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerDisconnecting&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerRejoining&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerRemoving&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Players&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Plugin&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CollisionEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Plugin&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GridSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Plugin&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UsesAssetInsertionDrag&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;exclusiveMouse&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Activate&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;actionId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;statusTip&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;iconName&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;CreatePluginAction&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CreateToolbar&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Deactivate&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;JointCreationMode&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetJoinMode&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMouse&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;RibbonTool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetSelectedRibbonTool&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetSetting&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetStudioUserId&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;rigModel&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ImportFbxAnimation&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsActivated&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsActivatedWithExclusiveMouse&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Negate&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;script&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;lineNumber&quot;,&quot;Default&quot;:&quot;1&quot;}],&quot;Name&quot;:&quot;OpenScript&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;OpenWikiPage&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;soundChannel&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PauseSound&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;soundChannel&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PlaySound&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;soundChannel&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ResumeSound&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SaveSelectedToRoblox&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;RibbonTool&quot;,&quot;Name&quot;:&quot;tool&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;UDim2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SelectRibbonTool&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Separate&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetSetting&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;decal&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;StartDecalDrag&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;PluginDrag&quot;,&quot;Name&quot;:&quot;drag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;StartDrag&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StopAllSounds&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;objects&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Union&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;pluginGuiId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;DockWidgetPluginGuiInfo&quot;,&quot;Name&quot;:&quot;dockWidgetPluginGuiInfo&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CreateDockWidgetPluginGui&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;pluginGuiId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;pluginGuiOptions&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CreateQWidgetPluginGui&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ImportFbxRig&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int64&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;assetType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PromptForExistingAssetId&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;suggestedFileName&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;PromptSaveSelection&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Deactivation&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Plugin&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PluginAction&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ActionId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PluginAction&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StatusTip&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PluginAction&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Text&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;PluginAction&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Triggered&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginAction&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PluginGuiService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PluginManager&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CreatePlugin&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;filePath&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;ExportPlace&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;filePath&quot;,&quot;Default&quot;:&quot;&quot;}],&quot;Name&quot;:&quot;ExportSelection&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;PluginManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PointsService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetAwardablePoints&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;PointsService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;amount&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AwardPoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PointsService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetGamePointBalance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PointsService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPointBalance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;PointsService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;userId&quot;,&quot;Type&quot;:&quot;int64&quot;},{&quot;Name&quot;:&quot;pointsAwarded&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;userBalanceInGame&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;userTotalBalance&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;PointsAwarded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PointsService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Pose&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;},{&quot;ValueType&quot;:&quot;PoseEasingDirection&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EasingDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;},{&quot;ValueType&quot;:&quot;PoseEasingStyle&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EasingStyle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaskWeight&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Pose&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Weight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pose&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddSubPose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetSubPoses&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pose&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RemoveSubPose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Pose&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PostEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PostEffect&quot;},{&quot;Superclass&quot;:&quot;PostEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BloomEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Intensity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BloomEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BloomEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Threshold&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BloomEffect&quot;},{&quot;Superclass&quot;:&quot;PostEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BlurEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BlurEffect&quot;},{&quot;Superclass&quot;:&quot;PostEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ColorCorrectionEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Brightness&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ColorCorrectionEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Contrast&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ColorCorrectionEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Saturation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ColorCorrectionEffect&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TintColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ColorCorrectionEffect&quot;},{&quot;Superclass&quot;:&quot;PostEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SunRaysEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Intensity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SunRaysEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Spread&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SunRaysEffect&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadata&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataCallbacks&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataClasses&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataEnums&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataEvents&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataFunctions&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataItem&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Browsable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ClassCategory&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Constraint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Deprecated&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EditingDisabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsBackend&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScriptContext&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UIMaximum&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UIMinimum&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UINumTicks&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;summary&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataItem&quot;},{&quot;Superclass&quot;:&quot;ReflectionMetadataItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataClass&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExplorerImageIndex&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataClass&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExplorerOrder&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataClass&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Insertable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataClass&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PreferredParent&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataClass&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PreferredParents&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReflectionMetadataClass&quot;},{&quot;Superclass&quot;:&quot;ReflectionMetadataItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataEnum&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;ReflectionMetadataItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataEnumItem&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;ReflectionMetadataItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataMember&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataProperties&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReflectionMetadataYieldFunctions&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RemoteEvent&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FireAllClients&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteEvent&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FireClient&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteEvent&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FireServer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteEvent&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;OnClientEvent&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteEvent&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;OnServerEvent&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteEvent&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RemoteFunction&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;InvokeClient&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteFunction&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;arguments&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;InvokeServer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteFunction&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;OnClientInvoke&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteFunction&quot;,&quot;type&quot;:&quot;Callback&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;arguments&quot;,&quot;Type&quot;:&quot;Tuple&quot;}],&quot;Name&quot;:&quot;OnServerInvoke&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RemoteFunction&quot;,&quot;type&quot;:&quot;Callback&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RenderSettings&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoFRMLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EagerBulkExecution&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;QualityLevel&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EditQualityLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EnableFRM&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExportMergeByMaterial&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;FramerateManagerMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FrameRateManager&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;GraphicsMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GraphicsMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MeshCacheSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;QualityLevel&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;QualityLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ReloadAssets&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RenderCSGTrianglesDebug&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShowBoundingBoxes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMaxQualityLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RenderingTest&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ComparisonDiffThreshold&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;RenderingTestComparisonMethod&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ComparisonMethod&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ComparisonPsnrThreshold&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Description&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FieldOfView&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Orientation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Position&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;QualityLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ShouldSkip&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Ticket&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RenderingTest&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReplicatedFirst&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsDefaultLoadingGuiRemoved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsFinishedReplicating&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RemoveDefaultLoadingScreen&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SetDefaultLoadingGuiRemoved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;DefaultLoadingGuiRemoved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;FinishedReplicating&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RemoveDefaultLoadingGuiSignal&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ReplicatedFirst&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReplicatedStorage&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RobloxReplicatedStorage&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;,&quot;notbrowsable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RunService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;priority&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;function&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindToRenderStep&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRobloxVersion&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsClient&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsEdit&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsRunMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsRunning&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsServer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsStudio&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Pause&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Reset&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Run&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Set3dRenderingEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;focus&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetRobloxGuiFocused&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Stop&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;UnbindFromRenderStep&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;setThrottleFramerateEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;step&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;Heartbeat&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;step&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;RenderStepped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;time&quot;,&quot;Type&quot;:&quot;double&quot;},{&quot;Name&quot;:&quot;step&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;Stepped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RunService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RuntimeScriptService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ScriptContext&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScriptsDisabled&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;ScriptContext&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;parent&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddCoreScriptLocal&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ScriptContext&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;seconds&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTimeout&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;ScriptContext&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;message&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;stackTrace&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;script&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Error&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptContext&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ScriptDebugger&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentLine&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsDebugging&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsPaused&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Script&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;expression&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;AddWatch&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetBreakpoints&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Map&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetGlobals&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Map&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;stackFrame&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;GetLocals&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetStack&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Map&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;stackFrame&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;GetUpvalues&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;watch&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetWatchValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetWatches&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Resume&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetBreakpoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetGlobal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;stackFrame&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;SetLocal&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;stackFrame&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;SetUpvalue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StepIn&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StepOut&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StepOver&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;breakpoint&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;BreakpointAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;breakpoint&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;BreakpointRemoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;line&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;EncounteredBreak&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Resuming&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;watch&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;WatchAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;watch&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;WatchRemoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ScriptDebugger&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ScriptService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Selection&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Get&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Selection&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;selection&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Set&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Selection&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SelectionChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Selection&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ServerScriptService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ServerStorage&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ServiceProvider&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FindService&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetService&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;getService&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;className&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;service&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Close&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CloseLate&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;service&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ServiceAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;service&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;ServiceRemoving&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DataModel&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CreatorId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;CreatorType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CreatorType&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GameId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;GearGenreSetting&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GearGenreSetting&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;Genre&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Genre&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsSFFlagsLoaded&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;JobId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaceId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaceVersion&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrivateServerId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrivateServerOwnerId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VIPServerId&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VIPServerOwnerId&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;Class:Workspace&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Workspace&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;lighting&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ValueType&quot;:&quot;Class:Workspace&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;workspace&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;DataModel&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;function&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;BindToClose&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;jobname&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;greaterThan&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetJobIntervalPeakFraction&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;jobname&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;double&quot;,&quot;Name&quot;:&quot;greaterThan&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetJobTimePeakFraction&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetJobsExtendedStats&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetJobsInfo&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMessage&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRemoteBuildMode&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;GearType&quot;,&quot;Name&quot;:&quot;gearType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsGearTypeAllowed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;IsLoaded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Content&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Load&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;OpenScreenshotsFolder&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;OpenVideosFolder&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;category&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;action&quot;,&quot;Default&quot;:&quot;custom&quot;},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;label&quot;,&quot;Default&quot;:&quot;none&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;ReportInGoogleAnalytics&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Shutdown&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;HttpGetAsync&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;url&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;data&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;contentType&quot;,&quot;Default&quot;:&quot;*/*&quot;},{&quot;Type&quot;:&quot;HttpRequestType&quot;,&quot;Name&quot;:&quot;httpRequestType&quot;,&quot;Default&quot;:&quot;Default&quot;},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;doNotAllowDiabolicalMode&quot;,&quot;Default&quot;:&quot;false&quot;}],&quot;Name&quot;:&quot;HttpPostAsync&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;SaveFilter&quot;,&quot;Name&quot;:&quot;saveFilter&quot;,&quot;Default&quot;:&quot;SaveAll&quot;}],&quot;Name&quot;:&quot;SavePlace&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;AllowedGearTypeChanged&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;betterQuality&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;GraphicsQualityChangeRequest&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;object&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;descriptor&quot;,&quot;Type&quot;:&quot;Property&quot;}],&quot;Name&quot;:&quot;ItemChanged&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Loaded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;path&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;ScreenshotReady&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;OnClose&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DataModel&quot;,&quot;type&quot;:&quot;Callback&quot;},{&quot;Superclass&quot;:&quot;ServiceProvider&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GenericSettings&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GenericSettings&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;AnalysticsSettings&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;GenericSettings&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;GlobalSettings&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetFFlag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetFVariable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;GlobalSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;GenericSettings&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UserSettings&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;name&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsUserFeatureEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Reset&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Sky&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CelestialBodiesShown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MoonAngularSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MoonTextureId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkyboxBk&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkyboxDn&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkyboxFt&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkyboxLf&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkyboxRt&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SkyboxUp&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StarCount&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SunAngularSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SunTextureId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sky&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Smoke&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Smoke&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Smoke&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Opacity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Smoke&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RiseVelocity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Smoke&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Size&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Smoke&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Sound&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EmitterSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsLoaded&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsPaused&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsPlaying&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Looped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinDistance&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Pitch&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlayOnRemove&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaybackLoudness&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaybackSpeed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Playing&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;RollOffMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RollOffMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;Class:SoundGroup&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SoundGroup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SoundId&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TimeLength&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TimePosition&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Volume&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;isPlaying&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;Sound&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Pause&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Play&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Resume&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Stop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;pause&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;play&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;stop&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;numOfTimesLooped&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;DidLoop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Ended&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Loaded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Paused&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Played&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Resumed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;soundId&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Stopped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sound&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundEffect&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Priority&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ChorusSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Depth&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ChorusSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Mix&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ChorusSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ChorusSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CompressorSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attack&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CompressorSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GainMakeup&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CompressorSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Ratio&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CompressorSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Release&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CompressorSoundEffect&quot;},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SideChain&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CompressorSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Threshold&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CompressorSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DistortionSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Level&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DistortionSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;EchoSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Delay&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EchoSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DryLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EchoSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Feedback&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EchoSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WetLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EchoSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;EqualizerSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HighGain&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EqualizerSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LowGain&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EqualizerSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MidGain&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;EqualizerSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;FlangeSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Depth&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FlangeSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Mix&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FlangeSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Rate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;FlangeSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;PitchShiftSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Octave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;PitchShiftSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ReverbSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DecayTime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReverbSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Density&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReverbSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Diffusion&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReverbSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DryLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReverbSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WetLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ReverbSoundEffect&quot;},{&quot;Superclass&quot;:&quot;SoundEffect&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TremoloSoundEffect&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Depth&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TremoloSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Duty&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TremoloSoundEffect&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Frequency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TremoloSoundEffect&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SoundGroup&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Volume&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundGroup&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SoundService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;ReverbType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AmbientReverb&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DistanceFactor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DopplerScale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RespectFilteringEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RolloffScale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;BeginRecording&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetListener&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;sound&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PlayLocalSound&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;SoundType&quot;,&quot;Name&quot;:&quot;sound&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;PlayStockSound&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;ListenerType&quot;,&quot;Name&quot;:&quot;listenerType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Tuple&quot;,&quot;Name&quot;:&quot;listener&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetListener&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;deviceIndex&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetRecordingDevice&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;EndRecording&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetRecordingDevices&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;SoundService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Sparkles&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;Sparkles&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sparkles&quot;},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SparkleColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Sparkles&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;SpawnerService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StarterGear&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StarterPlayer&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AllowCustomAnimations&quot;,&quot;tags&quot;:[&quot;ScriptWriteRestricted: [NotAccessibleSecurity]&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoJumpEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMaxZoomDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMinZoomDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;CameraMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;DevCameraOcclusionMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevCameraOcclusionMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;DevComputerCameraMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevComputerCameraMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;DevComputerMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevComputerMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;DevTouchCameraMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevTouchCameraMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;DevTouchMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DevTouchMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EnableMouseLockOption&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HealthDisplayDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LoadCharacterAppearance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NameDisplayDistance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StarterPlayer&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StarterPlayerScripts&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;StarterPlayerScripts&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StarterCharacterScripts&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Stats&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ContactsCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataReceiveKbps&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DataSendKbps&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HeartbeatTimeMs&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;InstanceCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MovingPrimitivesCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsReceiveKbps&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsSendKbps&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PhysicsStepTimeMs&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PrimitivesCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Stats&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;DeveloperMemoryTag&quot;,&quot;Name&quot;:&quot;tag&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetMemoryUsageMbForTag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Stats&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;float&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetTotalMemoryUsageMb&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Stats&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Dictionary&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;TextureQueryType&quot;,&quot;Name&quot;:&quot;queryType&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;pageIndex&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;pageSize&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPaginatedMemoryByTexture&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Stats&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StatsItem&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;double&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetValue&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;StatsItem&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetValueString&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;StatsItem&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;StatsItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RunningAverageItemDouble&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;StatsItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RunningAverageItemInt&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;StatsItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RunningAverageTimeIntervalItem&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;StatsItem&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TotalCountTimeIntervalItem&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TaskScheduler&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SchedulerDutyCycle&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TaskScheduler&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SchedulerRate&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TaskScheduler&quot;},{&quot;ValueType&quot;:&quot;ThreadPoolConfig&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ThreadPoolConfig&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TaskScheduler&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ThreadPoolSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TaskScheduler&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Team&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoAssignable&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Team&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoColorCharacters&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Team&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Score&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Team&quot;},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TeamColor&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Team&quot;},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlayers&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Team&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerAdded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Team&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PlayerRemoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Team&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Teams&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;Objects&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetTeams&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Teams&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RebalanceTeams&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Teams&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TeleportService&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CustomizedTeleportUI&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;TeleportService&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetArrivingTeleportGui&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetLocalPlayerTeleportData&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Variant&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;setting&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTeleportSetting&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;gui&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTeleportGui&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;setting&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTeleportSetting&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;placeId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;teleportData&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;customLoadingScreen&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;Teleport&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;TeleportCancel&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;placeId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;instanceId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;spawnName&quot;,&quot;Default&quot;:&quot;&quot;},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;teleportData&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;customLoadingScreen&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TeleportToPlaceInstance&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;placeId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;reservedServerAccessCode&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;players&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;spawnName&quot;,&quot;Default&quot;:&quot;&quot;},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;teleportData&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;customLoadingScreen&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TeleportToPrivateServer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;placeId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;spawnName&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;player&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;teleportData&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;customLoadingScreen&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TeleportToSpawnByName&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;userId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetPlayerPlaceInstanceAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;placeId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ReserveServer&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;placeId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Objects&quot;,&quot;Name&quot;:&quot;players&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;teleportData&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;customLoadingScreen&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;TeleportPartyAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;loadingGui&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;dataTable&quot;,&quot;Type&quot;:&quot;Variant&quot;}],&quot;Name&quot;:&quot;LocalPlayerArrivedFromTeleport&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;player&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;teleportResult&quot;,&quot;Type&quot;:&quot;TeleportResult&quot;},{&quot;Name&quot;:&quot;errorMessage&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;TeleportInitFailed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TeleportService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TerrainRegion&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsSmooth&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;TerrainRegion&quot;},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SizeInCells&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TerrainRegion&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ConvertToSmooth&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;,&quot;deprecated&quot;],&quot;Class&quot;:&quot;TerrainRegion&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TestService&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AutoRuns&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Description&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ErrorCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ExecuteWithStudioRun&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Is30FpsThrottleEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsPhysicsEnvironmentalThrottled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsSleepAllowed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NumberOfPlayers&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SimulateSecondsLag&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TestCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Timeout&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WarnCount&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TestService&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;condition&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Check&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Checkpoint&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Done&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Error&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Fail&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Message&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;condition&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Require&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;condition&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;description&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;source&quot;,&quot;Default&quot;:&quot;nil&quot;},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;line&quot;,&quot;Default&quot;:&quot;0&quot;}],&quot;Name&quot;:&quot;Warn&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Run&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;condition&quot;,&quot;Type&quot;:&quot;bool&quot;},{&quot;Name&quot;:&quot;text&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;script&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;line&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;ServerCollectConditionalResult&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;text&quot;,&quot;Type&quot;:&quot;string&quot;},{&quot;Name&quot;:&quot;script&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;line&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;ServerCollectResult&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TestService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TextFilterResult&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;toUserId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetChatForUserAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextFilterResult&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetNonChatStringForBroadcastAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextFilterResult&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;toUserId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetNonChatStringForUserAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextFilterResult&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TextService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Vector2&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;string&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;fontSize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Font&quot;,&quot;Name&quot;:&quot;font&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;frameSize&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTextSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;stringToFilter&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;fromUserId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;TextFilterContext&quot;,&quot;Name&quot;:&quot;textContext&quot;,&quot;Default&quot;:&quot;PrivateChat&quot;}],&quot;Name&quot;:&quot;FilterStringAsync&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TextService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ThirdPartyUserService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetUserDisplayName&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetUserPlatformId&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;HaveActiveUser&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ReturnToEngagement&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ShowAccountPicker&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RegisterActiveUser&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;YieldFunction&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ActiveGamepadAdded&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ActiveGamepadRemoved&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;signOutStatus&quot;,&quot;Type&quot;:&quot;int&quot;}],&quot;Name&quot;:&quot;ActiveUserSignedOut&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;ThirdPartyUserService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TimerService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Toolbar&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tooltip&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;iconname&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;CreateButton&quot;,&quot;tags&quot;:[&quot;PluginSecurity&quot;],&quot;Class&quot;:&quot;Toolbar&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TouchInputService&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TouchTransmitter&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;,&quot;notbrowsable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Trail&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Attachment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attachment0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;Class:Attachment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Attachment1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;ColorSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Color&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FaceCamera&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Lifetime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightEmission&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LightInfluence&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;Content&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Texture&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureLength&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;TextureMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TextureMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;NumberSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Transparency&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ValueType&quot;:&quot;NumberSequence&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;WidthScale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Clear&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Trail&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Translator&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LocaleId&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Translator&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Variant&quot;,&quot;Name&quot;:&quot;args&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;FormatByKey&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Translator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RobloxOnlyTranslate&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;Translator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;context&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;text&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Translate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Translator&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TweenBase&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;PlaybackState&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PlaybackState&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;TweenBase&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Cancel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TweenBase&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Pause&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TweenBase&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Play&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TweenBase&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;playbackState&quot;,&quot;Type&quot;:&quot;PlaybackState&quot;}],&quot;Name&quot;:&quot;Completed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TweenBase&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;TweenBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Tween&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Instance&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Tween&quot;},{&quot;ValueType&quot;:&quot;TweenInfo&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TweenInfo&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;Tween&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;TweenService&quot;,&quot;tags&quot;:[]},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;instance&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;TweenInfo&quot;,&quot;Name&quot;:&quot;tweenInfo&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Dictionary&quot;,&quot;Name&quot;:&quot;propertyTable&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;Create&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;TweenService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIBase&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;UIBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIComponent&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;UIComponent&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIConstraint&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;UIConstraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIAspectRatioConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AspectRatio&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIAspectRatioConstraint&quot;},{&quot;ValueType&quot;:&quot;AspectType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AspectType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIAspectRatioConstraint&quot;},{&quot;ValueType&quot;:&quot;DominantAxis&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;DominantAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIAspectRatioConstraint&quot;},{&quot;Superclass&quot;:&quot;UIConstraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UISizeConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UISizeConstraint&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UISizeConstraint&quot;},{&quot;Superclass&quot;:&quot;UIConstraint&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UITextSizeConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxTextSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UITextSizeConstraint&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinTextSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UITextSizeConstraint&quot;},{&quot;Superclass&quot;:&quot;UIComponent&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UILayout&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;UILayout&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIGridStyleLayout&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;]},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AbsoluteContentSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;},{&quot;ValueType&quot;:&quot;FillDirection&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FillDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;},{&quot;ValueType&quot;:&quot;HorizontalAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HorizontalAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;},{&quot;ValueType&quot;:&quot;SortOrder&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SortOrder&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;},{&quot;ValueType&quot;:&quot;VerticalAlignment&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VerticalAlignment&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;ApplyLayout&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Function&quot;,&quot;Name&quot;:&quot;function&quot;,&quot;Default&quot;:&quot;nil&quot;}],&quot;Name&quot;:&quot;SetCustomSortFunction&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;UIGridStyleLayout&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;UIGridStyleLayout&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIGridLayout&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CellPadding&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridLayout&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CellSize&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridLayout&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FillDirectionMaxCells&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridLayout&quot;},{&quot;ValueType&quot;:&quot;StartCorner&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StartCorner&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIGridLayout&quot;},{&quot;Superclass&quot;:&quot;UIGridStyleLayout&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIListLayout&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;UDim&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Padding&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIListLayout&quot;},{&quot;Superclass&quot;:&quot;UIGridStyleLayout&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIPageLayout&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Animated&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Circular&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;Class:GuiObject&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CurrentPage&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;EasingDirection&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EasingDirection&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;EasingStyle&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;EasingStyle&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GamepadInputEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;UDim&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Padding&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ScrollWheelInputEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TouchInputEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TweenTime&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;page&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;JumpTo&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;index&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;JumpToIndex&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Next&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Previous&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;page&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PageEnter&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;page&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;PageLeave&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;currentPage&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Stopped&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPageLayout&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;UIGridStyleLayout&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UITableLayout&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FillEmptySpaceColumns&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UITableLayout&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;FillEmptySpaceRows&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UITableLayout&quot;},{&quot;ValueType&quot;:&quot;TableMajorAxis&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MajorAxis&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UITableLayout&quot;},{&quot;ValueType&quot;:&quot;UDim2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Padding&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UITableLayout&quot;},{&quot;Superclass&quot;:&quot;UIComponent&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIPadding&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;UDim&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PaddingBottom&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPadding&quot;},{&quot;ValueType&quot;:&quot;UDim&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PaddingLeft&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPadding&quot;},{&quot;ValueType&quot;:&quot;UDim&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PaddingRight&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPadding&quot;},{&quot;ValueType&quot;:&quot;UDim&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PaddingTop&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIPadding&quot;},{&quot;Superclass&quot;:&quot;UIComponent&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UIScale&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Scale&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UIScale&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UserGameSettings&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AllTutorialsDisabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;CustomCameraMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraMode&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;CameraYInverted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ChatVisible&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;ComputerCameraMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ComputerCameraMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;ComputerMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ComputerMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;ControlMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ControlMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Fullscreen&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GamepadCameraSensitivity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;HasEverUsedVR&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsUsingCameraYInverted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;IsUsingGamepadCameraSensitivity&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MasterVolume&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MicroProfilerWebServerEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MicroProfilerWebServerIP&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MicroProfilerWebServerPort&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseSensitivity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseSensitivityFirstPerson&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseSensitivityThirdPerson&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnScreenProfilerEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnboardingsCompleted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;PerformanceStatsVisible&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;RotationType&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;RotationType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;SavedQualitySetting&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;SavedQualityLevel&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;TouchCameraMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TouchCameraMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;TouchMovementMode&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TouchMovementMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UsedCoreGuiIsVisibleToggle&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UsedCustomGuiIsVisibleToggle&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UsedHideHudShortcut&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VREnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ValueType&quot;:&quot;int&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VRRotationIntensity&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;},{&quot;ReturnType&quot;:&quot;int&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetCameraYInvertValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;onboardingId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetOnboardingCompleted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tutorialId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTutorialState&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;InFullScreen&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;InStudioMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;onboardingId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;ResetOnboardingCompleted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SetCameraYInvertVisible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;SetGamepadCameraSensitivityVisible&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;onboardingId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetOnboardingCompleted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;tutorialId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;value&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTutorialState&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;isFullscreen&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;FullscreenChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;isPerformanceStatsVisible&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;PerformanceStatsVisibleChanged&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;isStudioMode&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;StudioModeChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserGameSettings&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;UserInputService&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AccelerometerEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;BottomBarSize&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GamepadEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GazeSelectionEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;hidden&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GyroscopeEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;KeyboardEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;LegacyInputEventsEnabled&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ModalEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;MouseBehavior&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseBehavior&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;float&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseDeltaSensitivity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MouseIconEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;NavBarSize&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnScreenKeyboardAnimationDuration&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnScreenKeyboardPosition&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnScreenKeyboardSize&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OnScreenKeyboardVisible&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;OverrideMouseIconBehavior&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;OverrideMouseIconBehavior&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;Vector2&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;StatusBarSize&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;TouchEnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;UserHeadCFrame&quot;,&quot;tags&quot;:[&quot;deprecated&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VREnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;UserInputService&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;gamepadKeyCode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GamepadSupports&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetConnectedGamepads&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetDeviceAcceleration&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetDeviceGravity&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Tuple&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetDeviceRotation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Instance&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetFocusedTextBox&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetGamepadConnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetGamepadState&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetKeysPressed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;UserInputType&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetLastInputType&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMouseButtonsPressed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector2&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMouseDelta&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Vector2&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetMouseLocation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetNavigationGamepads&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Platform&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;GetPlatform&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;Array&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetSupportedGamepadKeyCodes&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;CoordinateFrame&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserCFrame&quot;,&quot;Name&quot;:&quot;type&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;gamepadKeyCode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsGamepadButtonDown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;keyCode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsKeyDown&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;mouseButton&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsMouseButtonPressed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadEnum&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;IsNavigationGamepad&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RecenterUserHeadCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;statusBarSize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;navBarSize&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;bottomBarSize&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendAppUISizes&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserInputType&quot;,&quot;Name&quot;:&quot;gamepadEnum&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;enabled&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetNavigationGamepad&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;acceleration&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DeviceAccelerationChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;gravity&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;DeviceGravityChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;rotation&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;cframe&quot;,&quot;Type&quot;:&quot;CoordinateFrame&quot;}],&quot;Name&quot;:&quot;DeviceRotationChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Type&quot;:&quot;UserInputType&quot;}],&quot;Name&quot;:&quot;GamepadConnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;gamepadNum&quot;,&quot;Type&quot;:&quot;UserInputType&quot;}],&quot;Name&quot;:&quot;GamepadDisconnected&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;input&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;InputBegan&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;input&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;InputChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;input&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;InputEnded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;JumpRequest&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;lastInputType&quot;,&quot;Type&quot;:&quot;UserInputType&quot;}],&quot;Name&quot;:&quot;LastInputTypeChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;position&quot;,&quot;Type&quot;:&quot;Vector2&quot;}],&quot;Name&quot;:&quot;StatusBarTapped&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;textboxReleased&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;TextBoxFocusReleased&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;textboxFocused&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;TextBoxFocused&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touch&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchEnded&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchLongPress&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touch&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchMoved&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;totalTranslation&quot;,&quot;Type&quot;:&quot;Vector2&quot;},{&quot;Name&quot;:&quot;velocity&quot;,&quot;Type&quot;:&quot;Vector2&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchPan&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;scale&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;velocity&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchPinch&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;rotation&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;velocity&quot;,&quot;Type&quot;:&quot;float&quot;},{&quot;Name&quot;:&quot;state&quot;,&quot;Type&quot;:&quot;UserInputState&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchRotate&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touch&quot;,&quot;Type&quot;:&quot;Instance&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchStarted&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;swipeDirection&quot;,&quot;Type&quot;:&quot;SwipeDirection&quot;},{&quot;Name&quot;:&quot;numberOfTouches&quot;,&quot;Type&quot;:&quot;int&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchSwipe&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;touchPositions&quot;,&quot;Type&quot;:&quot;Array&quot;},{&quot;Name&quot;:&quot;gameProcessedEvent&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchTap&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;position&quot;,&quot;Type&quot;:&quot;Vector2&quot;},{&quot;Name&quot;:&quot;processedByUI&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;TouchTapInWorld&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;type&quot;,&quot;Type&quot;:&quot;UserCFrame&quot;},{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;CoordinateFrame&quot;}],&quot;Name&quot;:&quot;UserCFrameChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WindowFocusReleased&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;WindowFocused&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;UserInputService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VRService&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;UserCFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;GuiInputUserCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VRDeviceName&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;,&quot;readonly&quot;],&quot;Class&quot;:&quot;VRService&quot;},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;VREnabled&quot;,&quot;tags&quot;:[&quot;readonly&quot;],&quot;Class&quot;:&quot;VRService&quot;},{&quot;ReturnType&quot;:&quot;VRTouchpadMode&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;VRTouchpad&quot;,&quot;Name&quot;:&quot;pad&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetTouchpadMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;CoordinateFrame&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserCFrame&quot;,&quot;Name&quot;:&quot;type&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;bool&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;UserCFrame&quot;,&quot;Name&quot;:&quot;type&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;GetUserCFrameEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;RecenterUserHeadCFrame&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;cframe&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;UserCFrame&quot;,&quot;Name&quot;:&quot;inputUserCFrame&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;RequestNavigation&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;VRTouchpad&quot;,&quot;Name&quot;:&quot;pad&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;VRTouchpadMode&quot;,&quot;Name&quot;:&quot;mode&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetTouchpadMode&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;cframe&quot;,&quot;Type&quot;:&quot;CoordinateFrame&quot;},{&quot;Name&quot;:&quot;inputUserCFrame&quot;,&quot;Type&quot;:&quot;UserCFrame&quot;}],&quot;Name&quot;:&quot;NavigationRequested&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;pad&quot;,&quot;Type&quot;:&quot;VRTouchpad&quot;},{&quot;Name&quot;:&quot;mode&quot;,&quot;Type&quot;:&quot;VRTouchpadMode&quot;}],&quot;Name&quot;:&quot;TouchpadModeChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;type&quot;,&quot;Type&quot;:&quot;UserCFrame&quot;},{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;CoordinateFrame&quot;}],&quot;Name&quot;:&quot;UserCFrameChanged&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;type&quot;,&quot;Type&quot;:&quot;UserCFrame&quot;},{&quot;Name&quot;:&quot;enabled&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;UserCFrameEnabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;VRService&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ValueBase&quot;,&quot;tags&quot;:[]},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BinaryStringValue&quot;,&quot;tags&quot;:[]},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;BinaryString&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BinaryStringValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BoolValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BoolValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BoolValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;bool&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BoolValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;BrickColorValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;BrickColor&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BrickColorValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;BrickColor&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;BrickColorValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;BrickColor&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;BrickColorValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;CFrameValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;CoordinateFrame&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CFrameValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;CoordinateFrame&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;CFrameValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;CoordinateFrame&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;CFrameValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Color3Value&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Color3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Color3Value&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Color3&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Color3Value&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Color3&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Color3Value&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;DoubleConstrainedValue&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ConstrainedValue&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;DoubleConstrainedValue&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DoubleConstrainedValue&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DoubleConstrainedValue&quot;},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DoubleConstrainedValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;DoubleConstrainedValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;DoubleConstrainedValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;IntConstrainedValue&quot;,&quot;tags&quot;:[&quot;deprecated&quot;]},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;ConstrainedValue&quot;,&quot;tags&quot;:[&quot;hidden&quot;],&quot;Class&quot;:&quot;IntConstrainedValue&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MaxValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;IntConstrainedValue&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;MinValue&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;IntConstrainedValue&quot;},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;IntConstrainedValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;IntConstrainedValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;IntConstrainedValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;IntValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;int64&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;IntValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;IntValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;int64&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;IntValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;NumberValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;double&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NumberValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;NumberValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;double&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;NumberValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;ObjectValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Class:Instance&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ObjectValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;ObjectValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Instance&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;ObjectValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;RayValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Ray&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RayValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Ray&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;RayValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Ray&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;RayValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;StringValue&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StringValue&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;StringValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;StringValue&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;ValueBase&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Vector3Value&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;Vector3&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Value&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Vector3Value&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Vector3&quot;}],&quot;Name&quot;:&quot;Changed&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;Vector3Value&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;value&quot;,&quot;Type&quot;:&quot;Vector3&quot;}],&quot;Name&quot;:&quot;changed&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Class&quot;:&quot;Vector3Value&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VirtualInputManager&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;string&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;AdditionalLuaState&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;Dump&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;objectId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;keyCode&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;HandleGamepadAxisInput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;deviceId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;keyCode&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;buttonState&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;HandleGamepadButtonInput&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;deviceId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;HandleGamepadConnect&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;deviceId&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;HandleGamepadDisconnect&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendAccelerometerEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;z&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendGravityEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;quatX&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;quatY&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;quatZ&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;quatW&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendGyroscopeEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;isPressed&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;KeyCode&quot;,&quot;Name&quot;:&quot;keyCode&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;isRepeatedKey&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pluginGui&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendKeyEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;mouseButton&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;isDown&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pluginGui&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendMouseButtonEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pluginGui&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendMouseMoveEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;bool&quot;,&quot;Name&quot;:&quot;isForwardScroll&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pluginGui&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendMouseWheelEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;str&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;Instance&quot;,&quot;Name&quot;:&quot;pluginGui&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendTextInputCharacterEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;int64&quot;,&quot;Name&quot;:&quot;touchId&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;int&quot;,&quot;Name&quot;:&quot;state&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;x&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;float&quot;,&quot;Name&quot;:&quot;y&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SendTouchEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;fileName&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;StartPlaying&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StartRecording&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StopRecording&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;namespace&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;detail&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;detailType&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;sendRobloxEvent&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;additionalLuaState&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;PlaybackCompleted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Arguments&quot;:[{&quot;Name&quot;:&quot;result&quot;,&quot;Type&quot;:&quot;string&quot;}],&quot;Name&quot;:&quot;RecordingCompleted&quot;,&quot;tags&quot;:[&quot;RobloxScriptSecurity&quot;],&quot;Class&quot;:&quot;VirtualInputManager&quot;,&quot;type&quot;:&quot;Event&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;VirtualUser&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;Button1Down&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;Button1Up&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;Button2Down&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;Button2Up&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;CaptureController&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;ClickButton1&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;ClickButton2&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;Vector2&quot;,&quot;Name&quot;:&quot;position&quot;,&quot;Default&quot;:null},{&quot;Type&quot;:&quot;CoordinateFrame&quot;,&quot;Name&quot;:&quot;camera&quot;,&quot;Default&quot;:&quot;Identity&quot;}],&quot;Name&quot;:&quot;MoveMouse&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetKeyDown&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;SetKeyUp&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StartRecording&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;string&quot;,&quot;Arguments&quot;:[],&quot;Name&quot;:&quot;StopRecording&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;ReturnType&quot;:&quot;void&quot;,&quot;Arguments&quot;:[{&quot;Type&quot;:&quot;string&quot;,&quot;Name&quot;:&quot;key&quot;,&quot;Default&quot;:null}],&quot;Name&quot;:&quot;TypeKey&quot;,&quot;tags&quot;:[&quot;LocalUserSecurity&quot;],&quot;Class&quot;:&quot;VirtualUser&quot;,&quot;type&quot;:&quot;Function&quot;},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;Visit&quot;,&quot;tags&quot;:[&quot;notCreatable&quot;]},{&quot;Superclass&quot;:&quot;Instance&quot;,&quot;type&quot;:&quot;Class&quot;,&quot;Name&quot;:&quot;WeldConstraint&quot;,&quot;tags&quot;:[]},{&quot;ValueType&quot;:&quot;bool&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Enabled&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;WeldConstraint&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Part0&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;WeldConstraint&quot;},{&quot;ValueType&quot;:&quot;Class:BasePart&quot;,&quot;type&quot;:&quot;Property&quot;,&quot;Name&quot;:&quot;Part1&quot;,&quot;tags&quot;:[],&quot;Class&quot;:&quot;WeldConstraint&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ActionType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Nothing&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pause&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Lose&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Draw&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Win&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ActionType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ActuatorRelativeTo&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Attachment0&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ActuatorRelativeTo&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Attachment1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ActuatorRelativeTo&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ActuatorRelativeTo&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ActuatorType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ActuatorType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Motor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ActuatorType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Servo&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ActuatorType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AnimationPriority&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Idle&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;AnimationPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Movement&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AnimationPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Action&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;AnimationPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Core&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1000,&quot;Enum&quot;:&quot;AnimationPriority&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AppShellActionType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OpenApp&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TapChatTab&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TapConversationEntry&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TapAvatarTab&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ReadConversation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TapGamePageTab&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TapHomePageTab&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GamePageLoaded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HomePageLoaded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AvatarEditorPageLoaded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;AppShellActionType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AspectType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FitWithinMaxSize&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;AspectType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ScaleWithParentSize&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AspectType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AssetType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Image&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeeShirt&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Audio&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Mesh&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Lua&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Place&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Model&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Shirt&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pants&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Decal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Head&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Face&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gear&quot;,&quot;tags&quot;:[],&quot;Value&quot;:19,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Badge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:21,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Animation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:24,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Torso&quot;,&quot;tags&quot;:[],&quot;Value&quot;:27,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:28,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:29,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:30,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:31,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Package&quot;,&quot;tags&quot;:[],&quot;Value&quot;:32,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GamePass&quot;,&quot;tags&quot;:[],&quot;Value&quot;:34,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Plugin&quot;,&quot;tags&quot;:[],&quot;Value&quot;:38,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MeshPart&quot;,&quot;tags&quot;:[],&quot;Value&quot;:40,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HairAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:41,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FaceAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:42,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NeckAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:43,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ShoulderAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:44,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FrontAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:45,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BackAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:46,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WaistAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:47,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClimbAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:48,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DeathAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:49,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FallAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:50,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;IdleAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:51,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;JumpAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:52,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RunAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:53,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SwimAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:54,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WalkAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:55,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PoseAnimation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:56,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;EarAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:57,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;EyeAccessory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:58,&quot;Enum&quot;:&quot;AssetType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AutoJointsMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;AutoJointsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Explicit&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AutoJointsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LegacyImplicit&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;AutoJointsMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AvatarContextMenuOption&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Friend&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;AvatarContextMenuOption&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Chat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AvatarContextMenuOption&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Emote&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;AvatarContextMenuOption&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;AvatarJointPositionType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fixed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;AvatarJointPositionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ArtistIntent&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;AvatarJointPositionType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Axis&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;X&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Axis&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Y&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Axis&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Z&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;Axis&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;BinType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Script&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;BinType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GameTool&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;BinType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Grab&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;BinType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Clone&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;BinType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hammer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;BinType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;BodyPart&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Head&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;BodyPart&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Torso&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;BodyPart&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;BodyPart&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;BodyPart&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;BodyPart&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;BodyPart&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;BodyPartR15&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Head&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UpperTorso&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LowerTorso&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftFoot&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftLowerLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftUpperLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightFoot&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightLowerLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightUpperLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftHand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftLowerArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftUpperArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightHand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightLowerArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightUpperArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RootPart&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Unknown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;BodyPartR15&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Button&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Jump&quot;,&quot;tags&quot;:[],&quot;Value&quot;:32,&quot;Enum&quot;:&quot;Button&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Dismount&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;Button&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ButtonStyle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ButtonStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxButtonDefault&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ButtonStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxButton&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ButtonStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxRoundButton&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ButtonStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxRoundDefaultButton&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ButtonStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxRoundDropdownButton&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;ButtonStyle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CameraMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CameraMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LockFirstPerson&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CameraMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CameraPanMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CameraPanMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;EdgeBump&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CameraPanMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CameraType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fixed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Watch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Attach&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Track&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Follow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Scriptable&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Orbital&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;CameraType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CellBlock&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Solid&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CellBlock&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;VerticalWedge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CellBlock&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CornerWedge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CellBlock&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InverseCornerWedge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;CellBlock&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HorizontalWedge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;CellBlock&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CellMaterial&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Empty&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Grass&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Brick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Granite&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Asphalt&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Iron&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Aluminum&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gold&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WoodPlank&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WoodLog&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gravel&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CinderBlock&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MossyStone&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cement&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RedPlastic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BluePlastic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Water&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;CellMaterial&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CellOrientation&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NegZ&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CellOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;X&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CellOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Z&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CellOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NegX&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;CellOrientation&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CenterDialogType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UnsolicitedDialog&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CenterDialogType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlayerInitiatedDialog&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CenterDialogType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ModalDialog&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;CenterDialogType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QuitDialog&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;CenterDialogType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ChatCallbackType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OnCreatingChatWindow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ChatCallbackType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OnClientSendingMessage&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ChatCallbackType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OnClientFormattingMessage&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ChatCallbackType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OnServerReceivingMessage&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;ChatCallbackType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ChatColor&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Blue&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ChatColor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Green&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ChatColor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Red&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ChatColor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;White&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ChatColor&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ChatMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Menu&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ChatMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TextAndMenu&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ChatMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ChatPrivacyMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AllUsers&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ChatPrivacyMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoOne&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ChatPrivacyMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Friends&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ChatPrivacyMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ChatStyle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ChatStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bubble&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ChatStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClassicAndBubble&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ChatStyle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CollisionFidelity&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CollisionFidelity&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hull&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CollisionFidelity&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Box&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CollisionFidelity&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ComputerCameraMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Follow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Orbital&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ComputerMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ComputerMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeyboardMouse&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ComputerMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClickToMove&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ComputerMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ConnectionError&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OK&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectErrors&quot;,&quot;tags&quot;:[],&quot;Value&quot;:256,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectBadhash&quot;,&quot;tags&quot;:[],&quot;Value&quot;:257,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectSecurityKeyMismatch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:258,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectNewSecurityKeyMismatch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:272,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectProtocolMismatch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:259,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectReceivePacketError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:260,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectReceivePacketStreamError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:261,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectSendPacketError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:262,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectIllegalTeleport&quot;,&quot;tags&quot;:[],&quot;Value&quot;:263,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectDuplicatePlayer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:264,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectDuplicateTicket&quot;,&quot;tags&quot;:[],&quot;Value&quot;:265,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectTimeout&quot;,&quot;tags&quot;:[],&quot;Value&quot;:266,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectLuaKick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:267,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectOnRemoteSysStats&quot;,&quot;tags&quot;:[],&quot;Value&quot;:268,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectHashTimeout&quot;,&quot;tags&quot;:[],&quot;Value&quot;:269,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectCloudEditKick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:270,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectPlayerless&quot;,&quot;tags&quot;:[],&quot;Value&quot;:271,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectEvicted&quot;,&quot;tags&quot;:[],&quot;Value&quot;:273,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectDevMaintenance&quot;,&quot;tags&quot;:[],&quot;Value&quot;:274,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectRobloxMaintenance&quot;,&quot;tags&quot;:[],&quot;Value&quot;:275,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectRejoin&quot;,&quot;tags&quot;:[],&quot;Value&quot;:276,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisconnectConnectionLost&quot;,&quot;tags&quot;:[],&quot;Value&quot;:277,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchErrors&quot;,&quot;tags&quot;:[],&quot;Value&quot;:512,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchDisabled&quot;,&quot;tags&quot;:[],&quot;Value&quot;:515,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelauchError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:516,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchGameEnded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:517,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchGameFull&quot;,&quot;tags&quot;:[],&quot;Value&quot;:518,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchUserLeft&quot;,&quot;tags&quot;:[],&quot;Value&quot;:522,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchRestricted&quot;,&quot;tags&quot;:[],&quot;Value&quot;:523,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchUnauthorized&quot;,&quot;tags&quot;:[],&quot;Value&quot;:524,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchFlooded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:525,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchHashExpired&quot;,&quot;tags&quot;:[],&quot;Value&quot;:526,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchHashException&quot;,&quot;tags&quot;:[],&quot;Value&quot;:527,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchPartyCannotFit&quot;,&quot;tags&quot;:[],&quot;Value&quot;:528,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchHttpError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:529,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchCustomMessage&quot;,&quot;tags&quot;:[],&quot;Value&quot;:610,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlacelaunchOtherError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:611,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportErrors&quot;,&quot;tags&quot;:[],&quot;Value&quot;:768,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportFailure&quot;,&quot;tags&quot;:[],&quot;Value&quot;:769,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportGameNotFound&quot;,&quot;tags&quot;:[],&quot;Value&quot;:770,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportGameEnded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:771,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportGameFull&quot;,&quot;tags&quot;:[],&quot;Value&quot;:772,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportUnauthorized&quot;,&quot;tags&quot;:[],&quot;Value&quot;:773,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportFlooded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:774,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TeleportIsTeleporting&quot;,&quot;tags&quot;:[],&quot;Value&quot;:775,&quot;Enum&quot;:&quot;ConnectionError&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ConnectionState&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Connected&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ConnectionState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Disconnected&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ConnectionState&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ContextActionPriority&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Low&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1000,&quot;Enum&quot;:&quot;ContextActionPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Medium&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2000,&quot;Enum&quot;:&quot;ContextActionPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2000,&quot;Enum&quot;:&quot;ContextActionPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;High&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3000,&quot;Enum&quot;:&quot;ContextActionPriority&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ContextActionResult&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pass&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ContextActionResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sink&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ContextActionResult&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ControlMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MouseLockSwitch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ControlMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ControlMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CoreGuiType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlayerList&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CoreGuiType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Health&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CoreGuiType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Backpack&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CoreGuiType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Chat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;CoreGuiType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;All&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;CoreGuiType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CreatorType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;User&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CreatorType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Group&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CreatorType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CurrencyType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CurrencyType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Robux&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CurrencyType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Tix&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CurrencyType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;CustomCameraMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;CustomCameraMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Follow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;CustomCameraMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;CustomCameraMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DataStoreRequestType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GetAsync&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DataStoreRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SetIncrementAsync&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DataStoreRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UpdateAsync&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DataStoreRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GetSortedAsync&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;DataStoreRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SetIncrementSortedAsync&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;DataStoreRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OnUpdate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;DataStoreRequestType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DevCameraOcclusionMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Zoom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DevCameraOcclusionMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Invisicam&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DevCameraOcclusionMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DevComputerCameraMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UserChoice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DevComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DevComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Follow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DevComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Orbital&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;DevComputerCameraMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DevComputerMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UserChoice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DevComputerMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeyboardMouse&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DevComputerMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClickToMove&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DevComputerMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Scriptable&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;DevComputerMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DevTouchCameraMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UserChoice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DevTouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DevTouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Follow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DevTouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Orbital&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;DevTouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DevTouchMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UserChoice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Thumbstick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DPad&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Thumbpad&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClickToMove&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Scriptable&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DynamicThumbstick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;DevTouchMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DeveloperMemoryTag&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Internal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HttpCache&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Instances&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Signals&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LuaHeap&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Script&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PhysicsCollision&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PhysicsParts&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsSolidModels&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsMeshParts&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsParticles&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsParts&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsSpatialHash&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsTerrain&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsTexture&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GraphicsTextureCharacter&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sounds&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;StreamingSounds&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TerrainVoxels&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gui&quot;,&quot;tags&quot;:[],&quot;Value&quot;:20,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Animation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:21,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Navigation&quot;,&quot;tags&quot;:[],&quot;Value&quot;:22,&quot;Enum&quot;:&quot;DeveloperMemoryTag&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DialogBehaviorType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SinglePlayer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DialogBehaviorType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MultiplePlayers&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DialogBehaviorType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DialogPurpose&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Quest&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DialogPurpose&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Help&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DialogPurpose&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Shop&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DialogPurpose&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DialogTone&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Neutral&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DialogTone&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Friendly&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DialogTone&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Enemy&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;DialogTone&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;DominantAxis&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Width&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;DominantAxis&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Height&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;DominantAxis&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;EasingDirection&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;In&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;EasingDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Out&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;EasingDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InOut&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;EasingDirection&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;EasingStyle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Linear&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sine&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Back&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Quad&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Quart&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Quint&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bounce&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Elastic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;EasingStyle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ElasticBehavior&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WhenScrollable&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ElasticBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Always&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ElasticBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Never&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ElasticBehavior&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;EnviromentalPhysicsThrottle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DefaultAuto&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Disabled&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Always&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Skip2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Skip4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Skip8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Skip16&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;EnviromentalPhysicsThrottle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ErrorReporting&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DontReport&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ErrorReporting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Prompt&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ErrorReporting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Report&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ErrorReporting&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ExplosionType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoCraters&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ExplosionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Craters&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ExplosionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CratersAndDebris&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ExplosionType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FillDirection&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Horizontal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FillDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Vertical&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FillDirection&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FilterResult&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Rejected&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FilterResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Accepted&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FilterResult&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Font&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Legacy&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Arial&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ArialBold&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SourceSans&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SourceSansBold&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SourceSansSemibold&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SourceSansLight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SourceSansItalic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bodoni&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Garamond&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cartoon&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Code&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Highway&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SciFi&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Arcade&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fantasy&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Antique&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;Font&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FontSize&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size9&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size10&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size11&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size12&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size14&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size18&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size24&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size36&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size48&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size28&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size32&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size42&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size60&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size96&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;FontSize&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FormFactor&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Symmetric&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FormFactor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Brick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FormFactor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Plate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FormFactor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;FormFactor&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FrameStyle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ChatBlue&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxSquare&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RobloxRound&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ChatGreen&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ChatRed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DropShadow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;FrameStyle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FramerateManagerMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Automatic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FramerateManagerMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;On&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FramerateManagerMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Off&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FramerateManagerMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FriendRequestEvent&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Issue&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FriendRequestEvent&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Revoke&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FriendRequestEvent&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Accept&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FriendRequestEvent&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Deny&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;FriendRequestEvent&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FriendStatus&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Unknown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FriendStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NotFriend&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FriendStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Friend&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FriendStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FriendRequestSent&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;FriendStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FriendRequestReceived&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;FriendStatus&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;FunctionalTestResult&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Passed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;FunctionalTestResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Warning&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;FunctionalTestResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Error&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;FunctionalTestResult&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;GameAvatarType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;R6&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;GameAvatarType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;R15&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;GameAvatarType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlayerChoice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;GameAvatarType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;GearGenreSetting&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AllGenres&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;GearGenreSetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MatchingGenreOnly&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;GearGenreSetting&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;GearType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MeleeWeapons&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RangedWeapons&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Explosives&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PowerUps&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NavigationEnhancers&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MusicalInstruments&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SocialItems&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BuildingTools&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Transport&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;GearType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Genre&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;All&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TownAndCity&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fantasy&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SciFi&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ninja&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Scary&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pirate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Adventure&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sports&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Funny&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WildWest&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;War&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SkatePark&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Tutorial&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;Genre&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;GraphicsMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Automatic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Direct3D9&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Direct3D11&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OpenGL&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Metal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Vulkan&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoGraphics&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;GraphicsMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HandlesStyle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Resize&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HandlesStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Movement&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HandlesStyle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HorizontalAlignment&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HorizontalAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HorizontalAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HorizontalAlignment&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HttpCachePolicy&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HttpCachePolicy&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Full&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HttpCachePolicy&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DataOnly&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HttpCachePolicy&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;HttpCachePolicy&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InternalRedirectRefresh&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;HttpCachePolicy&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HttpContentType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ApplicationJson&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HttpContentType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ApplicationXml&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HttpContentType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ApplicationUrlEncoded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HttpContentType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TextPlain&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;HttpContentType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TextXml&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;HttpContentType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HttpError&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OK&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InvalidUrl&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DnsResolve&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ConnectFail&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OutOfMemory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TimedOut&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TooManyRedirects&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InvalidRedirect&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NetFail&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Aborted&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SslConnectFail&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Unknown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;HttpError&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HttpRequestType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HttpRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MarketplaceService&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HttpRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Players&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;HttpRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Chat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;HttpRequestType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Avatar&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;HttpRequestType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HumanoidDisplayDistanceType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Viewer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HumanoidDisplayDistanceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Subject&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HumanoidDisplayDistanceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HumanoidDisplayDistanceType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HumanoidHealthDisplayType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DisplayWhenDamaged&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HumanoidHealthDisplayType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AlwaysOn&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HumanoidHealthDisplayType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AlwaysOff&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HumanoidHealthDisplayType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HumanoidRigType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;R6&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HumanoidRigType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;R15&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HumanoidRigType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;HumanoidStateType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FallingDown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Running&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RunningNoPhysics&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Climbing&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;StrafingNoPhysics&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ragdoll&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GettingUp&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Jumping&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Landed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Flying&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Freefall&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Seated&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PlatformStanding&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Dead&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Swimming&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Physics&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;HumanoidStateType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;InOut&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Edge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;InOut&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Inset&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;InOut&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;InOut&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;InfoType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Asset&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;InfoType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Product&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;InfoType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GamePass&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;InfoType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;InitialDockState&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Top&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;InitialDockState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bottom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;InitialDockState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;InitialDockState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;InitialDockState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Float&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;InitialDockState&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;InputType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoInput&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;InputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Constant&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;InputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sin&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;InputType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;JointCreationMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;All&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;JointCreationMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Surface&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;JointCreationMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;JointCreationMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;JointType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:28,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Rotate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RotateP&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RotateV&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Glue&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Weld&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Snap&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;JointType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;KeyCode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Unknown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Backspace&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Tab&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Clear&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Return&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pause&quot;,&quot;tags&quot;:[],&quot;Value&quot;:19,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Escape&quot;,&quot;tags&quot;:[],&quot;Value&quot;:27,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Space&quot;,&quot;tags&quot;:[],&quot;Value&quot;:32,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QuotedDouble&quot;,&quot;tags&quot;:[],&quot;Value&quot;:34,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hash&quot;,&quot;tags&quot;:[],&quot;Value&quot;:35,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Dollar&quot;,&quot;tags&quot;:[],&quot;Value&quot;:36,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Percent&quot;,&quot;tags&quot;:[],&quot;Value&quot;:37,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ampersand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:38,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Quote&quot;,&quot;tags&quot;:[],&quot;Value&quot;:39,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftParenthesis&quot;,&quot;tags&quot;:[],&quot;Value&quot;:40,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightParenthesis&quot;,&quot;tags&quot;:[],&quot;Value&quot;:41,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Asterisk&quot;,&quot;tags&quot;:[],&quot;Value&quot;:42,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Plus&quot;,&quot;tags&quot;:[],&quot;Value&quot;:43,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Comma&quot;,&quot;tags&quot;:[],&quot;Value&quot;:44,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Minus&quot;,&quot;tags&quot;:[],&quot;Value&quot;:45,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Period&quot;,&quot;tags&quot;:[],&quot;Value&quot;:46,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Slash&quot;,&quot;tags&quot;:[],&quot;Value&quot;:47,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Zero&quot;,&quot;tags&quot;:[],&quot;Value&quot;:48,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;One&quot;,&quot;tags&quot;:[],&quot;Value&quot;:49,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Two&quot;,&quot;tags&quot;:[],&quot;Value&quot;:50,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Three&quot;,&quot;tags&quot;:[],&quot;Value&quot;:51,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Four&quot;,&quot;tags&quot;:[],&quot;Value&quot;:52,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Five&quot;,&quot;tags&quot;:[],&quot;Value&quot;:53,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Six&quot;,&quot;tags&quot;:[],&quot;Value&quot;:54,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Seven&quot;,&quot;tags&quot;:[],&quot;Value&quot;:55,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Eight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:56,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Nine&quot;,&quot;tags&quot;:[],&quot;Value&quot;:57,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Colon&quot;,&quot;tags&quot;:[],&quot;Value&quot;:58,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Semicolon&quot;,&quot;tags&quot;:[],&quot;Value&quot;:59,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LessThan&quot;,&quot;tags&quot;:[],&quot;Value&quot;:60,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Equals&quot;,&quot;tags&quot;:[],&quot;Value&quot;:61,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GreaterThan&quot;,&quot;tags&quot;:[],&quot;Value&quot;:62,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Question&quot;,&quot;tags&quot;:[],&quot;Value&quot;:63,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;At&quot;,&quot;tags&quot;:[],&quot;Value&quot;:64,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftBracket&quot;,&quot;tags&quot;:[],&quot;Value&quot;:91,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BackSlash&quot;,&quot;tags&quot;:[],&quot;Value&quot;:92,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightBracket&quot;,&quot;tags&quot;:[],&quot;Value&quot;:93,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Caret&quot;,&quot;tags&quot;:[],&quot;Value&quot;:94,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Underscore&quot;,&quot;tags&quot;:[],&quot;Value&quot;:95,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Backquote&quot;,&quot;tags&quot;:[],&quot;Value&quot;:96,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;A&quot;,&quot;tags&quot;:[],&quot;Value&quot;:97,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;B&quot;,&quot;tags&quot;:[],&quot;Value&quot;:98,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;C&quot;,&quot;tags&quot;:[],&quot;Value&quot;:99,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;D&quot;,&quot;tags&quot;:[],&quot;Value&quot;:100,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;E&quot;,&quot;tags&quot;:[],&quot;Value&quot;:101,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F&quot;,&quot;tags&quot;:[],&quot;Value&quot;:102,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;G&quot;,&quot;tags&quot;:[],&quot;Value&quot;:103,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;H&quot;,&quot;tags&quot;:[],&quot;Value&quot;:104,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;I&quot;,&quot;tags&quot;:[],&quot;Value&quot;:105,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;J&quot;,&quot;tags&quot;:[],&quot;Value&quot;:106,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;K&quot;,&quot;tags&quot;:[],&quot;Value&quot;:107,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;L&quot;,&quot;tags&quot;:[],&quot;Value&quot;:108,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;M&quot;,&quot;tags&quot;:[],&quot;Value&quot;:109,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;N&quot;,&quot;tags&quot;:[],&quot;Value&quot;:110,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;O&quot;,&quot;tags&quot;:[],&quot;Value&quot;:111,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;P&quot;,&quot;tags&quot;:[],&quot;Value&quot;:112,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Q&quot;,&quot;tags&quot;:[],&quot;Value&quot;:113,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;R&quot;,&quot;tags&quot;:[],&quot;Value&quot;:114,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;S&quot;,&quot;tags&quot;:[],&quot;Value&quot;:115,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;T&quot;,&quot;tags&quot;:[],&quot;Value&quot;:116,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;U&quot;,&quot;tags&quot;:[],&quot;Value&quot;:117,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;V&quot;,&quot;tags&quot;:[],&quot;Value&quot;:118,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;W&quot;,&quot;tags&quot;:[],&quot;Value&quot;:119,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;X&quot;,&quot;tags&quot;:[],&quot;Value&quot;:120,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Y&quot;,&quot;tags&quot;:[],&quot;Value&quot;:121,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Z&quot;,&quot;tags&quot;:[],&quot;Value&quot;:122,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftCurly&quot;,&quot;tags&quot;:[],&quot;Value&quot;:123,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pipe&quot;,&quot;tags&quot;:[],&quot;Value&quot;:124,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightCurly&quot;,&quot;tags&quot;:[],&quot;Value&quot;:125,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Tilde&quot;,&quot;tags&quot;:[],&quot;Value&quot;:126,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Delete&quot;,&quot;tags&quot;:[],&quot;Value&quot;:127,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadZero&quot;,&quot;tags&quot;:[],&quot;Value&quot;:256,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadOne&quot;,&quot;tags&quot;:[],&quot;Value&quot;:257,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadTwo&quot;,&quot;tags&quot;:[],&quot;Value&quot;:258,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadThree&quot;,&quot;tags&quot;:[],&quot;Value&quot;:259,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadFour&quot;,&quot;tags&quot;:[],&quot;Value&quot;:260,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadFive&quot;,&quot;tags&quot;:[],&quot;Value&quot;:261,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadSix&quot;,&quot;tags&quot;:[],&quot;Value&quot;:262,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadSeven&quot;,&quot;tags&quot;:[],&quot;Value&quot;:263,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadEight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:264,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadNine&quot;,&quot;tags&quot;:[],&quot;Value&quot;:265,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadPeriod&quot;,&quot;tags&quot;:[],&quot;Value&quot;:266,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadDivide&quot;,&quot;tags&quot;:[],&quot;Value&quot;:267,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadMultiply&quot;,&quot;tags&quot;:[],&quot;Value&quot;:268,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadMinus&quot;,&quot;tags&quot;:[],&quot;Value&quot;:269,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadPlus&quot;,&quot;tags&quot;:[],&quot;Value&quot;:270,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadEnter&quot;,&quot;tags&quot;:[],&quot;Value&quot;:271,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;KeypadEquals&quot;,&quot;tags&quot;:[],&quot;Value&quot;:272,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Up&quot;,&quot;tags&quot;:[],&quot;Value&quot;:273,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Down&quot;,&quot;tags&quot;:[],&quot;Value&quot;:274,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:275,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:276,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Insert&quot;,&quot;tags&quot;:[],&quot;Value&quot;:277,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Home&quot;,&quot;tags&quot;:[],&quot;Value&quot;:278,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;End&quot;,&quot;tags&quot;:[],&quot;Value&quot;:279,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PageUp&quot;,&quot;tags&quot;:[],&quot;Value&quot;:280,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PageDown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:281,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftShift&quot;,&quot;tags&quot;:[],&quot;Value&quot;:304,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightShift&quot;,&quot;tags&quot;:[],&quot;Value&quot;:303,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftMeta&quot;,&quot;tags&quot;:[],&quot;Value&quot;:310,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightMeta&quot;,&quot;tags&quot;:[],&quot;Value&quot;:309,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftAlt&quot;,&quot;tags&quot;:[],&quot;Value&quot;:308,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightAlt&quot;,&quot;tags&quot;:[],&quot;Value&quot;:307,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftControl&quot;,&quot;tags&quot;:[],&quot;Value&quot;:306,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightControl&quot;,&quot;tags&quot;:[],&quot;Value&quot;:305,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CapsLock&quot;,&quot;tags&quot;:[],&quot;Value&quot;:301,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NumLock&quot;,&quot;tags&quot;:[],&quot;Value&quot;:300,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ScrollLock&quot;,&quot;tags&quot;:[],&quot;Value&quot;:302,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftSuper&quot;,&quot;tags&quot;:[],&quot;Value&quot;:311,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightSuper&quot;,&quot;tags&quot;:[],&quot;Value&quot;:312,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Mode&quot;,&quot;tags&quot;:[],&quot;Value&quot;:313,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Compose&quot;,&quot;tags&quot;:[],&quot;Value&quot;:314,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Help&quot;,&quot;tags&quot;:[],&quot;Value&quot;:315,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Print&quot;,&quot;tags&quot;:[],&quot;Value&quot;:316,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SysReq&quot;,&quot;tags&quot;:[],&quot;Value&quot;:317,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Break&quot;,&quot;tags&quot;:[],&quot;Value&quot;:318,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Menu&quot;,&quot;tags&quot;:[],&quot;Value&quot;:319,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Power&quot;,&quot;tags&quot;:[],&quot;Value&quot;:320,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Euro&quot;,&quot;tags&quot;:[],&quot;Value&quot;:321,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Undo&quot;,&quot;tags&quot;:[],&quot;Value&quot;:322,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:282,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:283,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:284,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:285,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F5&quot;,&quot;tags&quot;:[],&quot;Value&quot;:286,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F6&quot;,&quot;tags&quot;:[],&quot;Value&quot;:287,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F7&quot;,&quot;tags&quot;:[],&quot;Value&quot;:288,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:289,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F9&quot;,&quot;tags&quot;:[],&quot;Value&quot;:290,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F10&quot;,&quot;tags&quot;:[],&quot;Value&quot;:291,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F11&quot;,&quot;tags&quot;:[],&quot;Value&quot;:292,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F12&quot;,&quot;tags&quot;:[],&quot;Value&quot;:293,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F13&quot;,&quot;tags&quot;:[],&quot;Value&quot;:294,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F14&quot;,&quot;tags&quot;:[],&quot;Value&quot;:295,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;F15&quot;,&quot;tags&quot;:[],&quot;Value&quot;:296,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World0&quot;,&quot;tags&quot;:[],&quot;Value&quot;:160,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:161,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:162,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:163,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:164,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World5&quot;,&quot;tags&quot;:[],&quot;Value&quot;:165,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World6&quot;,&quot;tags&quot;:[],&quot;Value&quot;:166,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World7&quot;,&quot;tags&quot;:[],&quot;Value&quot;:167,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:168,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World9&quot;,&quot;tags&quot;:[],&quot;Value&quot;:169,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World10&quot;,&quot;tags&quot;:[],&quot;Value&quot;:170,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World11&quot;,&quot;tags&quot;:[],&quot;Value&quot;:171,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World12&quot;,&quot;tags&quot;:[],&quot;Value&quot;:172,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World13&quot;,&quot;tags&quot;:[],&quot;Value&quot;:173,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World14&quot;,&quot;tags&quot;:[],&quot;Value&quot;:174,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World15&quot;,&quot;tags&quot;:[],&quot;Value&quot;:175,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World16&quot;,&quot;tags&quot;:[],&quot;Value&quot;:176,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World17&quot;,&quot;tags&quot;:[],&quot;Value&quot;:177,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World18&quot;,&quot;tags&quot;:[],&quot;Value&quot;:178,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World19&quot;,&quot;tags&quot;:[],&quot;Value&quot;:179,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World20&quot;,&quot;tags&quot;:[],&quot;Value&quot;:180,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World21&quot;,&quot;tags&quot;:[],&quot;Value&quot;:181,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World22&quot;,&quot;tags&quot;:[],&quot;Value&quot;:182,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World23&quot;,&quot;tags&quot;:[],&quot;Value&quot;:183,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World24&quot;,&quot;tags&quot;:[],&quot;Value&quot;:184,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World25&quot;,&quot;tags&quot;:[],&quot;Value&quot;:185,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World26&quot;,&quot;tags&quot;:[],&quot;Value&quot;:186,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World27&quot;,&quot;tags&quot;:[],&quot;Value&quot;:187,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World28&quot;,&quot;tags&quot;:[],&quot;Value&quot;:188,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World29&quot;,&quot;tags&quot;:[],&quot;Value&quot;:189,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World30&quot;,&quot;tags&quot;:[],&quot;Value&quot;:190,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World31&quot;,&quot;tags&quot;:[],&quot;Value&quot;:191,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World32&quot;,&quot;tags&quot;:[],&quot;Value&quot;:192,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World33&quot;,&quot;tags&quot;:[],&quot;Value&quot;:193,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World34&quot;,&quot;tags&quot;:[],&quot;Value&quot;:194,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World35&quot;,&quot;tags&quot;:[],&quot;Value&quot;:195,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World36&quot;,&quot;tags&quot;:[],&quot;Value&quot;:196,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World37&quot;,&quot;tags&quot;:[],&quot;Value&quot;:197,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World38&quot;,&quot;tags&quot;:[],&quot;Value&quot;:198,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World39&quot;,&quot;tags&quot;:[],&quot;Value&quot;:199,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World40&quot;,&quot;tags&quot;:[],&quot;Value&quot;:200,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World41&quot;,&quot;tags&quot;:[],&quot;Value&quot;:201,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World42&quot;,&quot;tags&quot;:[],&quot;Value&quot;:202,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World43&quot;,&quot;tags&quot;:[],&quot;Value&quot;:203,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World44&quot;,&quot;tags&quot;:[],&quot;Value&quot;:204,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World45&quot;,&quot;tags&quot;:[],&quot;Value&quot;:205,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World46&quot;,&quot;tags&quot;:[],&quot;Value&quot;:206,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World47&quot;,&quot;tags&quot;:[],&quot;Value&quot;:207,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World48&quot;,&quot;tags&quot;:[],&quot;Value&quot;:208,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World49&quot;,&quot;tags&quot;:[],&quot;Value&quot;:209,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World50&quot;,&quot;tags&quot;:[],&quot;Value&quot;:210,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World51&quot;,&quot;tags&quot;:[],&quot;Value&quot;:211,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World52&quot;,&quot;tags&quot;:[],&quot;Value&quot;:212,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World53&quot;,&quot;tags&quot;:[],&quot;Value&quot;:213,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World54&quot;,&quot;tags&quot;:[],&quot;Value&quot;:214,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World55&quot;,&quot;tags&quot;:[],&quot;Value&quot;:215,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World56&quot;,&quot;tags&quot;:[],&quot;Value&quot;:216,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World57&quot;,&quot;tags&quot;:[],&quot;Value&quot;:217,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World58&quot;,&quot;tags&quot;:[],&quot;Value&quot;:218,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World59&quot;,&quot;tags&quot;:[],&quot;Value&quot;:219,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World60&quot;,&quot;tags&quot;:[],&quot;Value&quot;:220,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World61&quot;,&quot;tags&quot;:[],&quot;Value&quot;:221,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World62&quot;,&quot;tags&quot;:[],&quot;Value&quot;:222,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World63&quot;,&quot;tags&quot;:[],&quot;Value&quot;:223,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World64&quot;,&quot;tags&quot;:[],&quot;Value&quot;:224,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World65&quot;,&quot;tags&quot;:[],&quot;Value&quot;:225,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World66&quot;,&quot;tags&quot;:[],&quot;Value&quot;:226,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World67&quot;,&quot;tags&quot;:[],&quot;Value&quot;:227,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World68&quot;,&quot;tags&quot;:[],&quot;Value&quot;:228,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World69&quot;,&quot;tags&quot;:[],&quot;Value&quot;:229,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World70&quot;,&quot;tags&quot;:[],&quot;Value&quot;:230,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World71&quot;,&quot;tags&quot;:[],&quot;Value&quot;:231,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World72&quot;,&quot;tags&quot;:[],&quot;Value&quot;:232,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World73&quot;,&quot;tags&quot;:[],&quot;Value&quot;:233,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World74&quot;,&quot;tags&quot;:[],&quot;Value&quot;:234,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World75&quot;,&quot;tags&quot;:[],&quot;Value&quot;:235,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World76&quot;,&quot;tags&quot;:[],&quot;Value&quot;:236,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World77&quot;,&quot;tags&quot;:[],&quot;Value&quot;:237,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World78&quot;,&quot;tags&quot;:[],&quot;Value&quot;:238,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World79&quot;,&quot;tags&quot;:[],&quot;Value&quot;:239,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World80&quot;,&quot;tags&quot;:[],&quot;Value&quot;:240,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World81&quot;,&quot;tags&quot;:[],&quot;Value&quot;:241,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World82&quot;,&quot;tags&quot;:[],&quot;Value&quot;:242,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World83&quot;,&quot;tags&quot;:[],&quot;Value&quot;:243,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World84&quot;,&quot;tags&quot;:[],&quot;Value&quot;:244,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World85&quot;,&quot;tags&quot;:[],&quot;Value&quot;:245,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World86&quot;,&quot;tags&quot;:[],&quot;Value&quot;:246,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World87&quot;,&quot;tags&quot;:[],&quot;Value&quot;:247,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World88&quot;,&quot;tags&quot;:[],&quot;Value&quot;:248,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World89&quot;,&quot;tags&quot;:[],&quot;Value&quot;:249,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World90&quot;,&quot;tags&quot;:[],&quot;Value&quot;:250,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World91&quot;,&quot;tags&quot;:[],&quot;Value&quot;:251,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World92&quot;,&quot;tags&quot;:[],&quot;Value&quot;:252,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World93&quot;,&quot;tags&quot;:[],&quot;Value&quot;:253,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World94&quot;,&quot;tags&quot;:[],&quot;Value&quot;:254,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;World95&quot;,&quot;tags&quot;:[],&quot;Value&quot;:255,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonX&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1000,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1001,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonA&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1002,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonB&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1003,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonR1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1004,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonL1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1005,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonR2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1006,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonL2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1007,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonR3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1008,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonL3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1009,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonStart&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1010,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ButtonSelect&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1011,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DPadLeft&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1012,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DPadRight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1013,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DPadUp&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1014,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DPadDown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1015,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Thumbstick1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1016,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Thumbstick2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1017,&quot;Enum&quot;:&quot;KeyCode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;KeywordFilterType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Include&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;KeywordFilterType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Exclude&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;KeywordFilterType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Language&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Language&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;LeftRight&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;LeftRight&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;LeftRight&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;LeftRight&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;LevelOfDetailSetting&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;High&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;LevelOfDetailSetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Medium&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;LevelOfDetailSetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Low&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;LevelOfDetailSetting&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Limb&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Head&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Torso&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightArm&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightLeg&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Unknown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;Limb&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ListenerType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Camera&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ListenerType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CFrame&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ListenerType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ObjectPosition&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ListenerType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ObjectCFrame&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ListenerType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Material&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Plastic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:256,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Wood&quot;,&quot;tags&quot;:[],&quot;Value&quot;:512,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Slate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:800,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Concrete&quot;,&quot;tags&quot;:[],&quot;Value&quot;:816,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CorrodedMetal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1040,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DiamondPlate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1056,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Foil&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1072,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Grass&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1280,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1536,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Marble&quot;,&quot;tags&quot;:[],&quot;Value&quot;:784,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Granite&quot;,&quot;tags&quot;:[],&quot;Value&quot;:832,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Brick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:848,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pebble&quot;,&quot;tags&quot;:[],&quot;Value&quot;:864,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1296,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fabric&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1312,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SmoothPlastic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:272,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Metal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1088,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WoodPlanks&quot;,&quot;tags&quot;:[],&quot;Value&quot;:528,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cobblestone&quot;,&quot;tags&quot;:[],&quot;Value&quot;:880,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Air&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1792,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Water&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:2048,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Rock&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:896,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Glacier&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1552,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Snow&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1328,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sandstone&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:912,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Mud&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1344,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Basalt&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:788,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ground&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1360,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CrackedLava&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:804,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Neon&quot;,&quot;tags&quot;:[],&quot;Value&quot;:288,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Glass&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1568,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Asphalt&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1376,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeafyGrass&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1284,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Salt&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:1392,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Limestone&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:820,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pavement&quot;,&quot;tags&quot;:[&quot;notbrowsable&quot;],&quot;Value&quot;:836,&quot;Enum&quot;:&quot;Material&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;MembershipType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;MembershipType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BuildersClub&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;MembershipType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TurboBuildersClub&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;MembershipType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OutrageousBuildersClub&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;MembershipType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;MeshType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Head&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Torso&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Wedge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Prism&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pyramid&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ParallelRamp&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightAngleRamp&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CornerWedge&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Brick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sphere&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cylinder&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FileMesh&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;MeshType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;MessageType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MessageOutput&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;MessageType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MessageInfo&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;MessageType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MessageWarning&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;MessageType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MessageError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;MessageType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;MouseBehavior&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;MouseBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LockCenter&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;MouseBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LockCurrentPosition&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;MouseBehavior&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;MoveState&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Stopped&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;MoveState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Coasting&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;MoveState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Pushing&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;MoveState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Stopping&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;MoveState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AirFree&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;MoveState&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;NameOcclusion&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OccludeAll&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;NameOcclusion&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;EnemyOcclusion&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;NameOcclusion&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoOcclusion&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;NameOcclusion&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;NetworkOwnership&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Automatic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;NetworkOwnership&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Manual&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;NetworkOwnership&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OnContact&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;NetworkOwnership&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;NormalId&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Top&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;NormalId&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bottom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;NormalId&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Back&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;NormalId&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Front&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;NormalId&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;NormalId&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;NormalId&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;OverrideMouseIconBehavior&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;OverrideMouseIconBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ForceShow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;OverrideMouseIconBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ForceHide&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;OverrideMouseIconBehavior&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PacketPriority&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;IMMEDIATE_PRIORITY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PacketPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HIGH_PRIORITY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PacketPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MEDIUM_PRIORITY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PacketPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LOW_PRIORITY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;PacketPriority&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PartType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ball&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PartType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Block&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PartType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cylinder&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PartType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PathStatus&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Success&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PathStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClosestNoPath&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PathStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClosestOutOfRange&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PathStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FailStartNotEmpty&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;PathStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;FailFinishNotEmpty&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;PathStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoPath&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;PathStatus&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PathWaypointAction&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Walk&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PathWaypointAction&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Jump&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PathWaypointAction&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Platform&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Windows&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OSX&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;IOS&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Android&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;XBoxOne&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PS4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PS3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;XBox360&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WiiU&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NX&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ouya&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AndroidTV&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Chromecast&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Linux&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SteamOS&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WebOS&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DOS&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BeOS&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UWP&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:19,&quot;Enum&quot;:&quot;Platform&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PlaybackState&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Begin&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PlaybackState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Delayed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PlaybackState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Playing&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PlaybackState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Paused&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;PlaybackState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Completed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;PlaybackState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cancelled&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;PlaybackState&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PlayerActions&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CharacterForward&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PlayerActions&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CharacterBackward&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PlayerActions&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CharacterLeft&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PlayerActions&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CharacterRight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;PlayerActions&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CharacterJump&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;PlayerActions&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PlayerChatType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;All&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PlayerChatType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Team&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PlayerChatType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Whisper&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PlayerChatType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PoseEasingDirection&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Out&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PoseEasingDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InOut&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PoseEasingDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;In&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PoseEasingDirection&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PoseEasingStyle&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Linear&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PoseEasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Constant&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;PoseEasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Elastic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;PoseEasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cubic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;PoseEasingStyle&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bounce&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;PoseEasingStyle&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;PrivilegeType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Owner&quot;,&quot;tags&quot;:[],&quot;Value&quot;:255,&quot;Enum&quot;:&quot;PrivilegeType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Admin&quot;,&quot;tags&quot;:[],&quot;Value&quot;:240,&quot;Enum&quot;:&quot;PrivilegeType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Member&quot;,&quot;tags&quot;:[],&quot;Value&quot;:128,&quot;Enum&quot;:&quot;PrivilegeType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Visitor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;PrivilegeType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Banned&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;PrivilegeType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ProductPurchaseDecision&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NotProcessedYet&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ProductPurchaseDecision&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PurchaseGranted&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ProductPurchaseDecision&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;QualityLevel&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Automatic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level01&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level02&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level03&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level04&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level05&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level06&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level07&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level08&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level09&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level10&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level11&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level12&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level13&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level14&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level15&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level16&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level17&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level18&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level19&quot;,&quot;tags&quot;:[],&quot;Value&quot;:19,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level20&quot;,&quot;tags&quot;:[],&quot;Value&quot;:20,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Level21&quot;,&quot;tags&quot;:[],&quot;Value&quot;:21,&quot;Enum&quot;:&quot;QualityLevel&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;R15CollisionType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;OuterBox&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;R15CollisionType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InnerBox&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;R15CollisionType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;RenderPriority&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;First&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;RenderPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Input&quot;,&quot;tags&quot;:[],&quot;Value&quot;:100,&quot;Enum&quot;:&quot;RenderPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Camera&quot;,&quot;tags&quot;:[],&quot;Value&quot;:200,&quot;Enum&quot;:&quot;RenderPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Character&quot;,&quot;tags&quot;:[],&quot;Value&quot;:300,&quot;Enum&quot;:&quot;RenderPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Last&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2000,&quot;Enum&quot;:&quot;RenderPriority&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;RenderingTestComparisonMethod&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;psnr&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;RenderingTestComparisonMethod&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;diff&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;RenderingTestComparisonMethod&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ReverbType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoReverb&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GenericReverb&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PaddedCell&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Room&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bathroom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LivingRoom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;StoneRoom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Auditorium&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ConcertHall&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cave&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Arena&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hangar&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CarpettedHallway&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hallway&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;StoneCorridor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Alley&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Forest&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;City&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Mountains&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Quarry&quot;,&quot;tags&quot;:[],&quot;Value&quot;:19,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Plain&quot;,&quot;tags&quot;:[],&quot;Value&quot;:20,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ParkingLot&quot;,&quot;tags&quot;:[],&quot;Value&quot;:21,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SewerPipe&quot;,&quot;tags&quot;:[],&quot;Value&quot;:22,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UnderWater&quot;,&quot;tags&quot;:[],&quot;Value&quot;:23,&quot;Enum&quot;:&quot;ReverbType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;RibbonTool&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Select&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Scale&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Rotate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Move&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Transform&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ColorPicker&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MaterialPicker&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Group&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ungroup&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;RibbonTool&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;RollOffMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Inverse&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;RollOffMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Linear&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;RollOffMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InverseTapered&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;RollOffMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LinearSquare&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;RollOffMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;RotationType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MovementRelative&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;RotationType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;CameraRelative&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;RotationType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;RuntimeUndoBehavior&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Aggregate&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;RuntimeUndoBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Snapshot&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;RuntimeUndoBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hybrid&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;RuntimeUndoBehavior&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SaveFilter&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SaveAll&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SaveFilter&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SaveWorld&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SaveFilter&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SaveGame&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SaveFilter&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SavedQualitySetting&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Automatic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel5&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel6&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel7&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel9&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;QualityLevel10&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;SavedQualitySetting&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ScaleType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Stretch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ScaleType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Slice&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ScaleType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Tile&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ScaleType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fit&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ScaleType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Crop&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ScaleType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ScreenOrientation&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LandscapeLeft&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ScreenOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LandscapeRight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ScreenOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LandscapeSensor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ScreenOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Portrait&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ScreenOrientation&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sensor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ScreenOrientation&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ScrollBarInset&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ScrollBarInset&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ScrollBar&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ScrollBarInset&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Always&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ScrollBarInset&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ScrollingDirection&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;X&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ScrollingDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Y&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ScrollingDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;XY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ScrollingDirection&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SizeConstraint&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RelativeXY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SizeConstraint&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RelativeXX&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SizeConstraint&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RelativeYY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SizeConstraint&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SortOrder&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LayoutOrder&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SortOrder&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Name&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SortOrder&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SortOrder&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SoundType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoSound&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Boing&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bomb&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Break&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Click&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Clock&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Slingshot&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Page&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ping&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Snap&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Splat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Step&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;StepOn&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Swoosh&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Victory&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;SoundType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SpecialKey&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Insert&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SpecialKey&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Home&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SpecialKey&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;End&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SpecialKey&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PageUp&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;SpecialKey&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PageDown&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;SpecialKey&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ChatHotkey&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;SpecialKey&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;StartCorner&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TopLeft&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;StartCorner&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TopRight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;StartCorner&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BottomLeft&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;StartCorner&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BottomRight&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;StartCorner&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Status&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Poison&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Status&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Confusion&quot;,&quot;tags&quot;:[&quot;deprecated&quot;],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Status&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Style&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AlternatingSupports&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Style&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;BridgeStyleSupports&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Style&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NoSupports&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;Style&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SurfaceConstraint&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SurfaceConstraint&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hinge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SurfaceConstraint&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SteppingMotor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SurfaceConstraint&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Motor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;SurfaceConstraint&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SurfaceType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Smooth&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Glue&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Weld&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Studs&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Inlet&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Universal&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Hinge&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Motor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SteppingMotor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;SmoothNoOutlines&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;SurfaceType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;SwipeDirection&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;SwipeDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;SwipeDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Up&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;SwipeDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Down&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;SwipeDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;SwipeDirection&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TableMajorAxis&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RowMajor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TableMajorAxis&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ColumnMajor&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TableMajorAxis&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;Technology&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Legacy&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;Technology&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Voxel&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;Technology&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TeleportResult&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Success&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Failure&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GameNotFound&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GameEnded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;GameFull&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Unauthorized&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Flooded&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;IsTeleporting&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;TeleportResult&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TeleportState&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RequestedFromServer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TeleportState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Started&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TeleportState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;WaitingForServer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TeleportState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Failed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;TeleportState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;InProgress&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;TeleportState&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TeleportType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ToPlace&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TeleportType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ToInstance&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TeleportType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ToReservedServer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TeleportType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TextFilterContext&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PublicChat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TextFilterContext&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PrivateChat&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TextFilterContext&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TextTruncate&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TextTruncate&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AtEnd&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TextTruncate&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TextXAlignment&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TextXAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TextXAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TextXAlignment&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TextYAlignment&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Top&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TextYAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TextYAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bottom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TextYAlignment&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TextureMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Stretch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TextureMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Wrap&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TextureMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Static&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TextureMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TextureQueryType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NonHumanoid&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TextureQueryType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NonHumanoidOrphaned&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TextureQueryType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Humanoid&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TextureQueryType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HumanoidOrphaned&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;TextureQueryType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ThreadPoolConfig&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Auto&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PerCore1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:101,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PerCore2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:102,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PerCore3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:103,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;PerCore4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:104,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Threads1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Threads2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Threads3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Threads4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Threads8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Threads16&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;ThreadPoolConfig&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ThrottlingPriority&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Extreme&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ThrottlingPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ElevatedOnServer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ThrottlingPriority&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ThrottlingPriority&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ThumbnailSize&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size48x48&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size180x180&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size420x420&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size60x60&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size100x100&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size150x150&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Size352x352&quot;,&quot;tags&quot;:[],&quot;Value&quot;:6,&quot;Enum&quot;:&quot;ThumbnailSize&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ThumbnailType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HeadShot&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ThumbnailType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AvatarBust&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ThumbnailType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;AvatarThumbnail&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;ThumbnailType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TickCountSampleMethod&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Fast&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TickCountSampleMethod&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Benchmark&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TickCountSampleMethod&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Precise&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TickCountSampleMethod&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TopBottom&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Top&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TopBottom&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TopBottom&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bottom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TopBottom&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TouchCameraMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Follow&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Classic&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Orbital&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;TouchCameraMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TouchMovementMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Thumbstick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DPad&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;TouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Thumbpad&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;TouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ClickToMove&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;TouchMovementMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;DynamicThumbstick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;TouchMovementMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;TweenStatus&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Canceled&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;TweenStatus&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Completed&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;TweenStatus&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;UiMessageType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UiMessageError&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;UiMessageType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;UiMessageInfo&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;UiMessageType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;UploadSetting&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Never&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;UploadSetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Ask&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;UploadSetting&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Always&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;UploadSetting&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;UserCFrame&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Head&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;UserCFrame&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftHand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;UserCFrame&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightHand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;UserCFrame&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;UserInputState&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Begin&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;UserInputState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Change&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;UserInputState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;End&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;UserInputState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Cancel&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;UserInputState&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;UserInputState&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;UserInputType&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MouseButton1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MouseButton2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MouseButton3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MouseWheel&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MouseMovement&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Touch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:7,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Keyboard&quot;,&quot;tags&quot;:[],&quot;Value&quot;:8,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Focus&quot;,&quot;tags&quot;:[],&quot;Value&quot;:9,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Accelerometer&quot;,&quot;tags&quot;:[],&quot;Value&quot;:10,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gyro&quot;,&quot;tags&quot;:[],&quot;Value&quot;:11,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad1&quot;,&quot;tags&quot;:[],&quot;Value&quot;:12,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad2&quot;,&quot;tags&quot;:[],&quot;Value&quot;:13,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad3&quot;,&quot;tags&quot;:[],&quot;Value&quot;:14,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad4&quot;,&quot;tags&quot;:[],&quot;Value&quot;:15,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad5&quot;,&quot;tags&quot;:[],&quot;Value&quot;:16,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad6&quot;,&quot;tags&quot;:[],&quot;Value&quot;:17,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad7&quot;,&quot;tags&quot;:[],&quot;Value&quot;:18,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Gamepad8&quot;,&quot;tags&quot;:[],&quot;Value&quot;:19,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;TextInput&quot;,&quot;tags&quot;:[],&quot;Value&quot;:20,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:21,&quot;Enum&quot;:&quot;UserInputType&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VRTouchpad&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VRTouchpad&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VRTouchpad&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VRTouchpadMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Touch&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VRTouchpadMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;VirtualThumbstick&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VRTouchpadMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;ABXY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;VRTouchpadMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VerticalAlignment&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Center&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VerticalAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Top&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VerticalAlignment&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Bottom&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;VerticalAlignment&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VerticalScrollBarPosition&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Left&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VerticalScrollBarPosition&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Right&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VerticalScrollBarPosition&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VibrationMotor&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Large&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VibrationMotor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Small&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VibrationMotor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftTrigger&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;VibrationMotor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightTrigger&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;VibrationMotor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LeftHand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;VibrationMotor&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;RightHand&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;VibrationMotor&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VideoQualitySettings&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;LowResolution&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VideoQualitySettings&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;MediumResolution&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VideoQualitySettings&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;HighResolution&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;VideoQualitySettings&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;VirtualInputMode&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Recording&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;VirtualInputMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Playing&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;VirtualInputMode&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;VirtualInputMode&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;WaterDirection&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NegX&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;WaterDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;X&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;WaterDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NegY&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;WaterDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Y&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;WaterDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;NegZ&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;WaterDirection&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Z&quot;,&quot;tags&quot;:[],&quot;Value&quot;:5,&quot;Enum&quot;:&quot;WaterDirection&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;WaterForce&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;None&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;WaterForce&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Small&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;WaterForce&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Medium&quot;,&quot;tags&quot;:[],&quot;Value&quot;:2,&quot;Enum&quot;:&quot;WaterForce&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Strong&quot;,&quot;tags&quot;:[],&quot;Value&quot;:3,&quot;Enum&quot;:&quot;WaterForce&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Max&quot;,&quot;tags&quot;:[],&quot;Value&quot;:4,&quot;Enum&quot;:&quot;WaterForce&quot;},{&quot;type&quot;:&quot;Enum&quot;,&quot;Name&quot;:&quot;ZIndexBehavior&quot;,&quot;tags&quot;:[]},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Global&quot;,&quot;tags&quot;:[],&quot;Value&quot;:0,&quot;Enum&quot;:&quot;ZIndexBehavior&quot;},{&quot;type&quot;:&quot;EnumItem&quot;,&quot;Name&quot;:&quot;Sibling&quot;,&quot;tags&quot;:[],&quot;Value&quot;:1,&quot;Enum&quot;:&quot;ZIndexBehavior&quot;}]]==];</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXC4C995CF73264685A91D9D15EABBB991">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.0784313753</R>
							<G>0.0784313753</G>
							<B>0.0784313753</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.58431375</R>
							<G>0.58431375</G>
							<B>0.58431375</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Header</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-36</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>36</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX95EBC53B4D414BB7B7AA607A3369D356">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-4</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Properties</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX05F6F2D295CE4A83A5407B06435833E7">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">0.800000012</float>
							<Color3 name="BorderColor3">
								<R>0.909803987</R>
								<G>0.909803987</G>
								<B>0.909803987</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">16</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<Color3 name="PlaceholderColor3">
								<R>0.699999988</R>
								<G>0.699999988</G>
								<B>0.699999988</B>
							</Color3>
							<string name="PlaceholderText">Search Properties</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-8</XO>
								<YS>0.5</YS>
								<YO>-3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextEditable">true</bool>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXC94AB282B51D41CA9E6D546AB1AE2F96">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>5</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="BindableFunction" referent="RBX8C9C8F00E1274581A580A36B646935AE">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetApi</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX1C1009FFFD76448193D6F582F3789D0B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetAwaiting</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableEvent" referent="RBX8F0D66C20DDA42C7A1FF0C055B953F6F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SetAwaiting</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX9D6E92E01C324C22A6B6114D7BE9E07B">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<float name="BackgroundTransparency">0.100000001</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ExplorerPanel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>300</XO>
						<YS>0.5</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="BindableEvent" referent="RBX6F0E84E86D064FA4AFD88BFD77CFC701">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SelectionChanged</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX370BCB2E7BD24D05A15F40CED14D48C7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SetOption</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX929F7E45FE104604A53B148D79D8F587">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SetSelection</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBXA09ECF7CD0EC4BC9BEEDD7996E86C37A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetOption</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX32926F2E8CFC4FD4825F3C63ED854E86">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetSelection</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX19693582ED2744E69BB0D0EB355CEED3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetPrint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXB87437831DB04295932C94FEB93C0DB0">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LocalScript</string>
						<string name="ScriptGuid">{FC89F0F7-E57D-4978-A5A6-7ADEA4E8C892}</string>
						<ProtectedString name="Source">-- initial states
local game = game
local workspace = workspace
local pcall = pcall
local unpack = unpack
local next = next
local tick = tick
local ipairs = ipairs
local script = script
local tostring = tostring
local type = type
local typeof = typeof
local Instance_new = Instance.new
local UDim2_new = UDim2.new
local Vector2_new = Vector2.new
local Vector3_new = Vector3.new
local NumberRange_new = NumberRange.new
local Color3_new = Color3.new
local Color3_fromRGB = Color3.fromRGB
local table_insert = table.insert
local table_remove = table.remove
local table_sort = table.sort
local table_concat = table.concat
local table_clear = table.clear
local string_split = string.split
local string_find = string.find
local string_match = string.match
local string_lower = string.lower
local string_sub = string.sub
local string_byte = string.byte
local string_gsub = string.gsub
local string_rep = string.rep
local math_floor = math.floor
local math_ceil = math.ceil
local math_random = math.random
local math_huge = math.huge
local Option = {
&#9;-- can modify object parents in the hierarchy
&#9;Modifiable = false;
&#9;-- can select objects
&#9;Selectable = true;
}

-- Scel :)

local RemoteEvent = game:GetService(&quot;ReplicatedStorage&quot;):WaitForChild(&quot;DexEvent&quot;);

-- end of scel (I wish)

-- MERELY

Option.Modifiable = true

-- END MERELY

-- general size of GUI objects, in pixels
local GUI_SIZE = 16
-- padding between items within each entry
local ENTRY_PADDING = 1
-- padding between each entry
local ENTRY_MARGIN = 1

local explorerPanel = script.Parent
local Input = game:GetService(&quot;UserInputService&quot;)
local HoldingCtrl = false
local HoldingShift = false

local addObject
local removeObject
local gameChildren = {}

table.insert(gameChildren, game:GetService(&quot;Workspace&quot;))
table.insert(gameChildren, game:GetService(&quot;Players&quot;))
table.insert(gameChildren, game:GetService(&quot;Lighting&quot;))
table.insert(gameChildren, game:GetService(&quot;ReplicatedFirst&quot;))
table.insert(gameChildren, game:GetService(&quot;ReplicatedStorage&quot;))


pcall(function()
&#9;table.insert(gameChildren, game:GetService(&quot;CoreGui&quot;))
end)

table.insert(gameChildren, game:GetService(&quot;StarterGui&quot;))
table.insert(gameChildren, game:GetService(&quot;StarterPack&quot;))
table.insert(gameChildren, game:GetService(&quot;StarterPlayer&quot;))
table.insert(gameChildren, game:GetService(&quot;SoundService&quot;))
table.insert(gameChildren, game:GetService(&quot;Chat&quot;))
table.insert(gameChildren, game:GetService(&quot;LocalizationService&quot;))
table.insert(gameChildren, game:GetService(&quot;TestService&quot;))

local childrenGame = {}

childrenGame[game:GetService(&quot;Workspace&quot;)] = true
childrenGame[game:GetService(&quot;Players&quot;)] = true
childrenGame[game:GetService(&quot;Lighting&quot;)] = true
childrenGame[game:GetService(&quot;ReplicatedFirst&quot;)] = true
childrenGame[game:GetService(&quot;ReplicatedStorage&quot;)] = true

pcall(function()
&#9;childrenGame[game:GetService(&quot;CoreGui&quot;)] = true
end)

childrenGame[game:GetService(&quot;StarterGui&quot;)] = true
childrenGame[game:GetService(&quot;StarterPack&quot;)] = true
childrenGame[game:GetService(&quot;StarterPlayer&quot;)] = true
childrenGame[game:GetService(&quot;SoundService&quot;)] = true
childrenGame[game:GetService(&quot;Chat&quot;)] = true
childrenGame[game:GetService(&quot;LocalizationService&quot;)] = true
childrenGame[game:GetService(&quot;TestService&quot;)] = true

local MuteHiddenItems = true

local DexOutput = Instance.new(&quot;Folder&quot;)
DexOutput.Name = &quot;Output&quot;
local DexOutputMain = Instance.new(&quot;ScreenGui&quot;, DexOutput)
DexOutputMain.Name = &quot;Dex Output&quot;

local HiddenEntries = Instance.new(&quot;Folder&quot;)
local HiddenGame = Instance.new(&quot;Folder&quot;)
HiddenEntries.Name = &quot;HiddenEntriesParent&quot;
local HiddenEntriesMain = Instance.new(&quot;TextButton&quot;, HiddenEntries)
Instance.new(&quot;Folder&quot;, HiddenEntriesMain)

local function NameHiddenEntries()
&#9;if MuteHiddenItems then
&#9;&#9;HiddenEntriesMain.Name = &quot;Expand to view (&quot; .. (#game:GetChildren() - #gameChildren) .. &quot;) hidden items&quot;
&#9;else
&#9;&#9;HiddenEntriesMain.Name = &quot;Collapse to hide (&quot; .. (#game:GetChildren() - #gameChildren) .. &quot;) more items&quot;
&#9;end
end

NameHiddenEntries()

print = function(...)
&#9;local Obj = Instance.new(&quot;Dialog&quot;)
&#9;Obj.Parent = DexOutputMain
&#9;Obj.Name = &quot;&quot;
&#9;for i,v in pairs({...}) do
&#9;&#9;Obj.Name = Obj.Name .. tostring(v) .. &quot; &quot;
&#9;end
end

explorerPanel:WaitForChild(&quot;GetPrint&quot;).OnInvoke = function()
&#9;return print
end

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

&#9;Returns an array of objects representing the objects currently
&#9;selected in the panel.

- `Function SetSelection ( Objects selection )`

&#9;Sets the objects that are selected in the panel. `selection` is an array
&#9;of objects.

- `Event SelectionChanged ( )`


&#9;Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

&#9;If `optionName` is given, returns the value of that option. Otherwise,
&#9;returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

&#9;Sets `optionName` to `value`.

&#9;Options:

&#9;- Modifiable

&#9;&#9;Whether objects can be modified by the panel.

&#9;&#9;Note that modifying objects depends on being able to select them. If
&#9;&#9;Selectable is false, then Actions will not be available. Reparenting
&#9;&#9;is still possible, but only for the dragged object.

&#9;- Selectable

&#9;&#9;Whether objects can be selected.

&#9;&#9;If Modifiable is false, then left-clicking will perform a drag
&#9;&#9;selection.

## Updates

- 2013-09-18
&#9;- Fixed explorer icons to match studio explorer.

- 2013-09-14
&#9;- Added GetOption and SetOption bindables.
&#9;&#9;- Option: Modifiable; sets whether objects can be modified by the panel.
&#9;&#9;- Option: Selectable; sets whether objects can be selected.
&#9;- Slight modification to left-click selection behavior.
&#9;- Improved layout and scaling.

- 2013-09-13
&#9;- Added drag to reparent objects.
&#9;&#9;- Left-click to select/deselect object.
&#9;&#9;- Left-click and drag unselected object to reparent single object.
&#9;&#9;- Left-click and drag selected object to move reparent entire selection.
&#9;&#9;- Right-click while dragging to cancel.

- 2013-09-11
&#9;- Added explorer panel header with actions.
&#9;&#9;- Added Cut action.
&#9;&#9;- Added Copy action.
&#9;&#9;- Added Paste action.
&#9;&#9;- Added Delete action.
&#9;- Added drag selection.
&#9;&#9;- Left-click: Add to selection on drag.
&#9;&#9;- Right-click: Add to or remove from selection on drag.
&#9;- Ensured SelectionChanged fires only when the selection actually changes.
&#9;- Added documentation and change log.
&#9;- Fixed thread issue.

- 2013-09-09
&#9;- Added basic multi-selection.
&#9;&#9;- Left-click to set selection.
&#9;&#9;- Right-click to add to or remove from selection.
&#9;- Removed &quot;Selection&quot; ObjectValue.
&#9;&#9;- Added GetSelection BindableFunction.
&#9;&#9;- Added SetSelection BindableFunction.
&#9;&#9;- Added SelectionChanged BindableEvent.
&#9;- Changed font to SourceSans.

- 2013-08-31
&#9;- Improved GUI sizing based off of `GUI_SIZE` constant.
&#9;- Automatic font size detection.

- 2013-08-27
&#9;- Initial explorer panel.


## Todo

- Sorting
&#9;- by ExplorerOrder
&#9;- by children
&#9;- by name
- Drag objects to reparent

]]
&#9;&#9;

local function dexWriteFile(dest, cont, name, filter, ext)
&#9;if writefileas then
&#9;&#9;writefileas(cont, name, filter, ext)
&#9;&#9;return true
&#9;elseif writefile then
&#9;&#9;writefile(dest, cont)
&#9;&#9;return true
&#9;else
&#9;&#9;return false
&#9;end&#9;
end

local SaveInstance
local SaveInstance
do
&#9;local function fetchAPI()
&#9;local api
&#9;local s,e = pcall(function()
&#9;&#9;local version = game:HttpGet(&quot;http://setup.roblox.com/versionQTStudio&quot;,true)
&#9;&#9;local rawApi = game:HttpGet(&quot;http://setup.roblox.com/&quot;..version..&quot;-API-Dump.json&quot;,true)
&#9;&#9;api = game:GetService(&quot;HttpService&quot;):JSONDecode(rawApi)
&#9;end)
&#9;if not s then return end
&#9;local classes,enums = {},{}
&#9;
&#9;for _,class in pairs(api.Classes) do
&#9;&#9;local newClass = {}
&#9;&#9;newClass.Name = class.Name
&#9;&#9;newClass.Superclass = class.Superclass
&#9;&#9;newClass.Properties = {}
&#9;&#9;newClass.Functions = {}
&#9;&#9;newClass.Events = {}
&#9;&#9;newClass.Callbacks = {}
&#9;&#9;newClass.Tags = {}
&#9;&#9;
&#9;&#9;if class.Tags then for c,tag in pairs(class.Tags) do newClass.Tags[tag] = true end end
&#9;&#9;for __,member in pairs(class.Members) do
&#9;&#9;&#9;local mType = member.MemberType
&#9;&#9;&#9;if mType == &quot;Property&quot; then
&#9;&#9;&#9;&#9;local newProp = {}
&#9;&#9;&#9;&#9;newProp.Name = member.Name
&#9;&#9;&#9;&#9;newProp.Class = class.Name
&#9;&#9;&#9;&#9;newProp.ValueType = member.ValueType.Name
&#9;&#9;&#9;&#9;newProp.Category = member.Category
&#9;&#9;&#9;&#9;newProp.Serialization = member.Serialization
&#9;&#9;&#9;&#9;newProp.Tags = {}
&#9;&#9;&#9;&#9;if member.Tags then for c,tag in pairs(member.Tags) do newProp.Tags[tag] = true end end
&#9;&#9;&#9;&#9;table.insert(newClass.Properties,newProp)
&#9;&#9;&#9;elseif mType == &quot;Function&quot; then
&#9;&#9;&#9;&#9;local newFunc = {}
&#9;&#9;&#9;&#9;newFunc.Name = member.Name
&#9;&#9;&#9;&#9;newFunc.Class = class.Name
&#9;&#9;&#9;&#9;newFunc.Parameters = {}
&#9;&#9;&#9;&#9;newFunc.ReturnType = member.ReturnType.Name
&#9;&#9;&#9;&#9;newFunc.Tags = {}
&#9;&#9;&#9;&#9;for c,param in pairs(member.Parameters) do
&#9;&#9;&#9;&#9;&#9;table.insert(newFunc.Parameters,{Name = param.Name, Type = param.Type.Name})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if member.Tags then for c,tag in pairs(member.Tags) do newFunc.Tags[tag] = true end end
&#9;&#9;&#9;&#9;table.insert(newClass.Functions,newFunc)
&#9;&#9;&#9;elseif mType == &quot;Event&quot; then
&#9;&#9;&#9;&#9;local newEvent = {}
&#9;&#9;&#9;&#9;newEvent.Name = member.Name
&#9;&#9;&#9;&#9;newEvent.Class = class.Name
&#9;&#9;&#9;&#9;newEvent.Parameters = {}
&#9;&#9;&#9;&#9;newEvent.Tags = {}
&#9;&#9;&#9;&#9;for c,param in pairs(member.Parameters) do
&#9;&#9;&#9;&#9;&#9;table.insert(newEvent.Parameters,{Name = param.Name, Type = param.Type.Name})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if member.Tags then for c,tag in pairs(member.Tags) do newEvent.Tags[tag] = true end end
&#9;&#9;&#9;&#9;table.insert(newClass.Events,newEvent)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;classes[class.Name] = newClass
&#9;end
&#9;
&#9;for _,enum in pairs(api.Enums) do
&#9;&#9;local newEnum = {}
&#9;&#9;newEnum.Name = enum.Name
&#9;&#9;newEnum.Items = {}
&#9;&#9;newEnum.Tags = {}
&#9;&#9;
&#9;&#9;if enum.Tags then for c,tag in pairs(enum.Tags) do newEnum.Tags[tag] = true end end
&#9;&#9;for __,item in pairs(enum.Items) do
&#9;&#9;&#9;local newItem = {}
&#9;&#9;&#9;newItem.Name = item.Name
&#9;&#9;&#9;newItem.Value = item.Value
&#9;&#9;&#9;table.insert(newEnum.Items,newItem)
&#9;&#9;end
&#9;&#9;
&#9;&#9;enums[enum.Name] = newEnum
&#9;end
&#9;
&#9;local function getMember(class,member)
&#9;&#9;if not classes[class] or not classes[class][member] then return end
&#9;    local result = {}
&#9;
&#9;    local currentClass = classes[class]
&#9;    while currentClass do
&#9;        for _,entry in pairs(currentClass[member]) do
&#9;            table.insert(result,entry)
&#9;        end
&#9;        currentClass = classes[currentClass.Superclass]
&#9;    end
&#9;
&#9;    table.sort(result,function(a,b) return a.Name &lt; b.Name end)
&#9;    return result
&#9;end
&#9;
&#9;return {
&#9;&#9;Classes = classes,
&#9;&#9;Enums = enums,
&#9;&#9;GetMember = getMember
&#9;}
&#9;end
&#9;
&#9;-- Dex Serializer Module
&#9;local function SerializerModule()
&#9;-- Modules
&#9;local Serializer,API
&#9;
&#9;-- Un-init
&#9;local _writefile,_getnilinstances,oldIndex,classes,enums
&#9;
&#9;-- Rest
&#9;local t_ins,t_concat = table.insert,table.concat
&#9;local buffer = {}
&#9;local refCount = 0
&#9;local getChildren = Instance.new(&quot;Part&quot;).GetChildren
&#9;local toDecompile = {}
&#9;local saveFilter = {}
&#9;local instDir = {}
&#9;
&#9;local elyFuncs = false
&#9;
&#9;local xmlReplace = {
&#9;&#9;[&quot;&apos;&quot;] = &quot;&amp;apos;&quot;,
&#9;&#9;[&quot;\&quot;&quot;] = &quot;&amp;quot;&quot;,
&#9;&#9;[&quot;&lt;&quot;] = &quot;&amp;lt;&quot;,
&#9;&#9;[&quot;&gt;&quot;] = &quot;&amp;gt;&quot;,
&#9;&#9;[&quot;&amp;&quot;] = &quot;&amp;amp;&quot;
&#9;}
&#9;
&#9;local propBypass = {
&#9;&#9;[&quot;BasePart&quot;] = {
&#9;&#9;&#9;[&quot;Size&quot;] = true,
&#9;&#9;&#9;[&quot;Color&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;Part&quot;] = {
&#9;&#9;&#9;[&quot;Shape&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;Fire&quot;] = {
&#9;&#9;&#9;[&quot;Heat&quot;] = true,
&#9;&#9;&#9;[&quot;Size&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;Smoke&quot;] = {
&#9;&#9;&#9;[&quot;Opacity&quot;] = true,
&#9;&#9;&#9;[&quot;RiseVelocity&quot;] = true,
&#9;&#9;&#9;[&quot;Size&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;DoubleConstrainedValue&quot;] = {
&#9;&#9;&#9;[&quot;Value&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;IntConstrainedValue&quot;] = {
&#9;&#9;&#9;[&quot;Value&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;TrussPart&quot;] = {
&#9;&#9;&#9;[&quot;Style&quot;] = true
&#9;&#9;}
&#9;}
&#9;
&#9;local propFilter = {
&#9;&#9;[&quot;BaseScript&quot;] = {
&#9;&#9;&#9;[&quot;LinkedSource&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;ModuleScript&quot;] = {
&#9;&#9;&#9;[&quot;LinkedSource&quot;] = true
&#9;&#9;},
&#9;&#9;[&quot;Players&quot;] = {
&#9;&#9;&#9;[&quot;CharacterAutoLoads&quot;] = true
&#9;&#9;}
&#9;}
&#9;
&#9;local sProps = setmetatable({},{__index = function(self,class)
&#9;&#9;local props = {}
&#9;&#9;
&#9;&#9;local apiProps = API.GetMember(class,&quot;Properties&quot;) or {}
&#9;&#9;for i,v in pairs(apiProps) do
&#9;&#9;&#9;if (v.Serialization.CanSave and not v.Tags.NotScriptable) or (propBypass[v.Class] and propBypass[v.Class][v.Name]) then
&#9;&#9;&#9;&#9;if not propFilter[v.Class] or not propFilter[v.Class][v.Name] then
&#9;&#9;&#9;&#9;&#9;local s,e = pcall(function() local exist = instDir[class][v.Name] end)
&#9;&#9;&#9;&#9;&#9;if s then table.insert(props,v) end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;self[class] = props
&#9;&#9;
&#9;&#9;return props
&#9;end})
&#9;
&#9;local testInsts = setmetatable({},{__index = function(self,class)
&#9;&#9;local s,testInst = pcall(function() return Instance.new(class) end)
&#9;&#9;local testInstTable = {}
&#9;&#9;
&#9;&#9;if testInst then
&#9;&#9;&#9;for i,v in pairs(sProps[class]) do
&#9;&#9;&#9;&#9;testInstTable[v.Name] = testInst[v.Name]
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;self[class] = testInstTable
&#9;&#9;
&#9;&#9;return testInstTable
&#9;end})
&#9;
&#9;local refMt = {__index = function(self,inst)
&#9;&#9;if not inst then return &quot;&quot; end
&#9;&#9;refCount = refCount + 1
&#9;&#9;self[inst] = refCount
&#9;&#9;return refCount
&#9;end}
&#9;local refs = setmetatable({},refMt)
&#9;
&#9;local valueHandlers = {
&#9;&#9;[&quot;bool&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;bool name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/bool&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;float&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;float name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/float&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;int&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;int name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/int&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;int64&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;int64 name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/int64&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;double&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;double name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val..&apos;&lt;/double&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;string&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;string name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&apos;&lt;/string&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;BrickColor&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;int name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..val.Number..&apos;&lt;/int&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Vector2&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector2 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;X&gt;&apos;..val.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..val.Y..&apos;&lt;/Y&gt;\
&#9;&lt;/Vector2&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Vector3&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector3 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;X&gt;&apos;..val.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..val.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..val.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/Vector3&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;CFrame&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,(&apos;\n&lt;CoordinateFrame name=&quot;&apos;..name..[[&quot;&gt;
&#9;&lt;X&gt;%f&lt;/X&gt;
&#9;&lt;Y&gt;%f&lt;/Y&gt;
&#9;&lt;Z&gt;%f&lt;/Z&gt;
&#9;&lt;R00&gt;%f&lt;/R00&gt;
&#9;&lt;R01&gt;%f&lt;/R01&gt;
&#9;&lt;R02&gt;%f&lt;/R02&gt;
&#9;&lt;R10&gt;%f&lt;/R10&gt;
&#9;&lt;R11&gt;%f&lt;/R11&gt;
&#9;&lt;R12&gt;%f&lt;/R12&gt;
&#9;&lt;R20&gt;%f&lt;/R20&gt;
&#9;&lt;R21&gt;%f&lt;/R21&gt;
&#9;&lt;R22&gt;%f&lt;/R22&gt;
&#9;&lt;/CoordinateFrame&gt;]]):format(val:components()))
&#9;&#9;end,
&#9;&#9;[&quot;Content&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Content name=&quot;&apos;..name..&apos;&quot;&gt;&lt;url&gt;&apos;..val:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&apos;&lt;/url&gt;&lt;/Content&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;UDim&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;UDim name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;S&gt;&apos;..val.Scale..&apos;&lt;/S&gt;\
&#9;&lt;O&gt;&apos;..val.Offset..&apos;&lt;/O&gt;\
&#9;&lt;/UDim&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;UDim2&quot;] = function(name,val)
&#9;&#9;&#9;local x = val.X
&#9;&#9;&#9;local y = val.Y
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;UDim2 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;XS&gt;&apos;..x.Scale..&apos;&lt;/XS&gt;\
&#9;&lt;XO&gt;&apos;..x.Offset..&apos;&lt;/XO&gt;\
&#9;&lt;YS&gt;&apos;..y.Scale..&apos;&lt;/YS&gt;\
&#9;&lt;YO&gt;&apos;..y.Offset..&apos;&lt;/YO&gt;\
&#9;&lt;/UDim2&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Color3&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Color3 name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;R&gt;&apos;..val.r..&apos;&lt;/R&gt;\
&#9;&lt;G&gt;&apos;..val.g..&apos;&lt;/G&gt;\
&#9;&lt;B&gt;&apos;..val.b..&apos;&lt;/B&gt;\
&#9;&lt;/Color3&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;NumberRange&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;NumberRange name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/NumberRange&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;NumberSequence&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;NumberSequence name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/NumberSequence&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;ColorSequence&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;ColorSequence name=&quot;&apos;..name..&apos;&quot;&gt;&apos;..tostring(val)..&apos;&lt;/ColorSequence&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Rect&quot;] = function(name,val)
&#9;&#9;&#9;local min,max = val.Min,val.Max
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Rect2D name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;min&gt;\
&#9;&lt;X&gt;&apos;..min.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..min.Y..&apos;&lt;/Y&gt;\
&#9;&lt;/min&gt;\
&#9;&lt;max&gt;\
&#9;&lt;X&gt;&apos;..max.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..max.Y..&apos;&lt;/Y&gt;\
&#9;&lt;/max&gt;\
&#9;&lt;/Rect2D&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Object&quot;] = function(name,val)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ref name=&quot;&apos;..name..&apos;&quot;&gt;RBX&apos;..refs[val]..&apos;&lt;/Ref&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;PhysicalProperties&quot;] = function(name,val)
&#9;&#9;&#9;if val then
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;PhysicalProperties name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;CustomPhysics&gt;true&lt;/CustomPhysics&gt;\
&#9;&lt;Density&gt;&apos;..val.Density..&apos;&lt;/Density&gt;\
&#9;&lt;Friction&gt;&apos;..val.Friction..&apos;&lt;/Friction&gt;\
&#9;&lt;Elasticity&gt;&apos;..val.Elasticity..&apos;&lt;/Elasticity&gt;\
&#9;&lt;FrictionWeight&gt;&apos;..val.FrictionWeight..&apos;&lt;/FrictionWeight&gt;\
&#9;&lt;ElasticityWeight&gt;&apos;..val.ElasticityWeight..&apos;&lt;/ElasticityWeight&gt;\
&#9;&lt;/PhysicalProperties&gt;&apos;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;PhysicalProperties name=&quot;&apos;..name..&apos;&quot;&gt;\n&lt;CustomPhysics&gt;false&lt;/CustomPhysics&gt;\n&lt;/PhysicalProperties&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;Faces&quot;] = function(name,val)
&#9;&#9;&#9;local faceInt = (val.Front and 32 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Bottom and 16 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Left and 8 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Back and 4 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Top and 2 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Right and 1 or 0)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Faces name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;faces&gt;&apos;..faceInt..&apos;&lt;/faces&gt;\
&#9;&lt;/Faces&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Axes&quot;] = function(name,val)
&#9;&#9;&#9;local axisInt = (val.Z and 4 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.Y and 2 or 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;+(val.X and 1 or 0)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Axes name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;axes&gt;&apos;..axisInt..&apos;&lt;/axes&gt;\
&#9;&lt;/Faces&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Ray&quot;] = function(name,val)
&#9;&#9;&#9;local origin = val.Origin
&#9;&#9;&#9;local direction = val.Direction
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ray name=&quot;&apos;..name..&apos;&quot;&gt;\
&#9;&lt;origin&gt;\
&#9;&lt;X&gt;&apos;..origin.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..origin.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..origin.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/origin&gt;\
&#9;&lt;direction&gt;\
&#9;&lt;X&gt;&apos;..direction.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..direction.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..direction.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/direction&gt;\
&#9;&lt;/Ray&gt;&apos;)
&#9;&#9;end,
&#9;}
&#9;
&#9;local function getNS(inst,name)
&#9;&#9;rfl_setscriptable(inst,name,true)
&#9;&#9;local propVal = oldIndex and oldIndex(inst,name) or inst[name]
&#9;&#9;rfl_setscriptable(inst,name,false)
&#9;&#9;return propVal
&#9;end
&#9;
&#9;local function getBS(inst,name)
&#9;&#9;local bs = getbspval(inst,name,true)
&#9;&#9;if bs then
&#9;&#9;&#9;return &quot;&lt;![CDATA[&quot;..bs..&quot;]]&gt;&quot;
&#9;&#9;else
&#9;&#9;&#9;return &quot;&quot;
&#9;&#9;end
&#9;end
&#9;
&#9;local specialInst = {
&#9;&#9;[&quot;UnionOperation&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then -- Assume all ely funcs defined
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Content name=&quot;AssetId&quot;&gt;&lt;url&gt;&apos;..getNS(inst,&quot;AssetId&quot;):gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&apos;&lt;/url&gt;&lt;/Content&gt;&apos;)
&#9;&#9;&#9;&#9;local initialSize = getNS(inst,&quot;InitialSize&quot;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector3 name=&quot;InitialSize&quot;&gt;\
&#9;&lt;X&gt;&apos;..initialSize.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..initialSize.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..initialSize.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/Vector3&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;ChildData&quot;&gt;&apos;..getBS(inst,&quot;ChildData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;MeshData&quot;&gt;&apos;..getBS(inst,&quot;MeshData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;PhysicsData&quot;&gt;&apos;..getBS(inst,&quot;PhysicsData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;MeshPart&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then -- Assume all ely funcs defined
&#9;&#9;&#9;&#9;local initialSize = getNS(inst,&quot;InitialSize&quot;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Vector3 name=&quot;InitialSize&quot;&gt;\
&#9;&lt;X&gt;&apos;..initialSize.X..&apos;&lt;/X&gt;\
&#9;&lt;Y&gt;&apos;..initialSize.Y..&apos;&lt;/Y&gt;\
&#9;&lt;Z&gt;&apos;..initialSize.Z..&apos;&lt;/Z&gt;\
&#9;&lt;/Vector3&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;PhysicsData&quot;&gt;&apos;..getBS(inst,&quot;PhysicsData&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;Terrain&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;MaterialColors&quot;&gt;&apos;..getBS(inst,&quot;MaterialColors&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;SmoothGrid&quot;&gt;&apos;..getBS(inst,&quot;SmoothGrid&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;TerrainRegion&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;SmoothGrid&quot;&gt;&apos;..getBS(inst,&quot;SmoothGrid&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;BinaryStringValue&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;BinaryString name=&quot;Value&quot;&gt;&apos;..getBS(inst,&quot;Value&quot;)..&apos;&lt;/BinaryString&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[&quot;Workspace&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;token name=&quot;AutoJointsMode&quot;&gt;&apos;..getNS(inst,&quot;AutoJointsMode&quot;).Value..&apos;&lt;/token&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;bool name=&quot;PGSPhysicsSolverEnabled&quot;&gt;&apos;..tostring(inst:PGSIsEnabled())..&apos;&lt;/bool&gt;&apos;)
&#9;&#9;&#9;local groupTable = {}
&#9;&#9;&#9;for i,v in pairs(game:GetService(&quot;PhysicsService&quot;):GetCollisionGroups()) do
&#9;&#9;&#9;&#9;t_ins(groupTable,v.name:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)..&quot;^&quot;..v.id..&quot;^&quot;..v.mask)
&#9;&#9;&#9;end
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;string name=&quot;CollisionGroups&quot;&gt;&apos;..t_concat(groupTable,&quot;\\&quot;)..&apos;&lt;/string&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Humanoid&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;float name=&quot;Health_XML&quot;&gt;&apos;..inst.Health..&apos;&lt;/float&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;Sound&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;float name=&quot;xmlRead_MaxDistance_3&quot;&gt;&apos;..inst.MaxDistance..&apos;&lt;/float&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;WeldConstraint&quot;] = function(inst)
&#9;&#9;&#9;if elyFuncs then
&#9;&#9;&#9;&#9;valueHandlers[&quot;CFrame&quot;](&quot;CFrame0&quot;,getNS(inst,&quot;CFrame0&quot;))
&#9;&#9;&#9;&#9;valueHandlers[&quot;CFrame&quot;](&quot;CFrame1&quot;,getNS(inst,&quot;CFrame1&quot;))
&#9;&#9;&#9;end
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ref name=&quot;Part0Internal&quot;&gt;RBX&apos;..refs[inst.Part0]..&apos;&lt;/Ref&gt;&apos;)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Ref name=&quot;Part1Internal&quot;&gt;RBX&apos;..refs[inst.Part1]..&apos;&lt;/Ref&gt;&apos;)
&#9;&#9;end,
&#9;&#9;[&quot;LocalScript&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;ProtectedString name=&quot;Source&quot;&gt;&apos;)
&#9;&#9;&#9;t_ins(buffer,&quot;&quot;)
&#9;&#9;&#9;t_ins(buffer,&apos;&lt;/ProtectedString&gt;&apos;)
&#9;&#9;&#9;t_ins(toDecompile,{inst,#buffer-1})
&#9;&#9;end,
&#9;&#9;[&quot;ModuleScript&quot;] = function(inst)
&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;ProtectedString name=&quot;Source&quot;&gt;&apos;)
&#9;&#9;&#9;t_ins(buffer,&quot;&quot;)
&#9;&#9;&#9;t_ins(buffer,&apos;&lt;/ProtectedString&gt;&apos;)
&#9;&#9;&#9;t_ins(toDecompile,{inst,#buffer-1})
&#9;&#9;end,
&#9;}
&#9;
&#9;local savePlaceBlacklist = {
&#9;&#9;[&quot;CoreGui&quot;] = true,
&#9;&#9;[&quot;CorePackages&quot;] = true
&#9;}
&#9;
&#9;local function writeXML(inst)
&#9;&#9;if saveFilter[inst] then return end
&#9;&#9;
&#9;&#9;local class = oldIndex and oldIndex(inst,&quot;ClassName&quot;) or inst.ClassName&#9;
&#9;&#9;if not instDir[class] then instDir[class] = inst end
&#9;&#9;local testInst = testInsts[class]
&#9;&#9;
&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;&apos;..class..&apos;&quot; referent=&quot;RBX&apos;..refs[inst]..&apos;&quot;&gt;\n&lt;Properties&gt;&apos;)
&#9;&#9;
&#9;&#9;for _,prop in pairs(sProps[class]) do
&#9;&#9;&#9;local propName = prop.Name
&#9;&#9;&#9;local propVal = oldIndex and oldIndex(inst,propName) or inst[propName]
&#9;&#9;&#9;if testInst[propName] ~= propVal then
&#9;&#9;&#9;&#9;local valueType = prop.ValueType
&#9;&#9;&#9;&#9;if valueHandlers[valueType] then
&#9;&#9;&#9;&#9;&#9;valueHandlers[valueType](propName,propVal)
&#9;&#9;&#9;&#9;elseif enums[valueType] then
&#9;&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;token name=&quot;&apos;..propName..&apos;&quot;&gt;&apos;..propVal.Value..&apos;&lt;/token&gt;&apos;)
&#9;&#9;&#9;&#9;elseif classes[valueType] then
&#9;&#9;&#9;&#9;&#9;valueHandlers[&quot;Object&quot;](propName,propVal)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;if specialInst[class] then
&#9;&#9;&#9;specialInst[class](inst)
&#9;&#9;end
&#9;&#9;
&#9;&#9;t_ins(buffer,&quot;\n&lt;/Properties&gt;&quot;)
&#9;&#9;
&#9;&#9;for i,v in pairs(getChildren(inst)) do
&#9;&#9;&#9;writeXML(v)
&#9;&#9;end
&#9;&#9;
&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;end
&#9;
&#9;local function resetState()
&#9;&#9;buffer = {}
&#9;&#9;refs = setmetatable({},refMt)
&#9;&#9;refCount = 0
&#9;&#9;toDecompile = {}
&#9;&#9;saveFilter = {}
&#9;&#9;instDir = {}
&#9;end
&#9;
&#9;local defaultSettings = {
&#9;&#9;DecompileMode = 0,
&#9;&#9;NilInstances = false,
&#9;&#9;RemovePlayers = true,
&#9;&#9;SavePlayerDescendants = false,
&#9;&#9;DecompileTimeout = 10,
&#9;&#9;UnluacMaxThreads = 5,
&#9;&#9;DecompileIgnore = {}
&#9;}
&#9;
&#9;Serializer = {
&#9;&#9;Init = function(data)
&#9;&#9;&#9;API = data.API
&#9;&#9;&#9;_writefile = data.WriteFile
&#9;&#9;&#9;_getnilinstances = data.GetNilInstances
&#9;&#9;&#9;oldIndex = data.OldIndex
&#9;&#9;&#9;
&#9;&#9;&#9;classes = API.Classes
&#9;&#9;&#9;enums = API.Enums
&#9;&#9;&#9;
&#9;&#9;&#9;elyFuncs = getbspval and rfl_setscriptable
&#9;&#9;&#9;
&#9;&#9;&#9;Serializer.ResetSettings()
&#9;&#9;end,
&#9;&#9;
&#9;&#9;Settings = {},
&#9;&#9;
&#9;&#9;ResetSettings = function()
&#9;&#9;&#9;Serializer.Settings = {}
&#9;&#9;&#9;for i,v in pairs(defaultSettings) do
&#9;&#9;&#9;&#9;Serializer.Settings[i] = v
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;
&#9;&#9;SaveInstance = function(inst,name,sets)
&#9;&#9;&#9;Serializer.ResetSettings()
&#9;&#9;&#9;
&#9;&#9;&#9;for i,v in pairs(sets or {}) do
&#9;&#9;&#9;&#9;Serializer.Settings[i] = v
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;resetState()
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game and Serializer.Settings.RemovePlayers then
&#9;&#9;&#9;&#9;for i,v in pairs(game:GetService(&quot;Players&quot;):GetPlayers()) do
&#9;&#9;&#9;&#9;&#9;saveFilter[v.Character] = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;t_ins(buffer,[==[&lt;roblox xmlns:xmime=&quot;http://www.w3.org/2005/05/xmlmime&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;http://www.roblox.com/roblox.xsd&quot; version=&quot;4&quot;&gt;
&#9;&lt;Meta name=&quot;ExplicitAutoJoints&quot;&gt;true&lt;/Meta&gt;
&#9;&lt;External&gt;null&lt;/External&gt;
&#9;&lt;External&gt;nil&lt;/External&gt;]==])
&#9;&#9;&#9;
&#9;&#9;&#9;if inst ~= game then
&#9;&#9;&#9;&#9;if type(inst) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(inst) do
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;writeXML(inst)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;for i,v in pairs(game:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if not savePlaceBlacklist[v.ClassName] then
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game and Serializer.Settings.NilInstances and _getnilinstances then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Folder&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;Nil Instances&lt;/string&gt;\
&#9;&lt;/Properties&gt;&apos;)
&#9;&#9;&#9;&#9;for i,v in pairs(_getnilinstances()) do
&#9;&#9;&#9;&#9;&#9;if ((API.Classes[v.ClassName] and not API.Classes[v.ClassName].Tags.Service) or not API.Classes[v.ClassName]) and v ~= game then
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game and Serializer.Settings.SavePlayerDescendants then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Folder&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;Player Descendants&lt;/string&gt;\
&#9;&lt;/Properties&gt;&apos;)
&#9;&#9;&#9;&#9;for i,v in pairs(game:GetService(&quot;Players&quot;).LocalPlayer:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;PlayerGui&quot;) or v:IsA(&quot;PlayerScripts&quot;) or v:IsA(&quot;StarterGear&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Folder&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;&apos;..v.ClassName..&apos;&lt;/string&gt;\
&#9;&lt;/Properties&gt;&apos;)
&#9;&#9;&#9;&#9;&#9;&#9;for _,c in pairs(v:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;writeXML(c)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;writeXML(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/Item&gt;&quot;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if inst == game then
&#9;&#9;&#9;&#9;t_ins(buffer,&apos;\n&lt;Item class=&quot;Script&quot; referent=&quot;RBX&apos;..refs[Instance.new(&quot;Folder&quot;)]..&apos;&quot;&gt;\
&#9;&lt;Properties&gt;\
&#9;&lt;string name=&quot;Name&quot;&gt;Please Read&lt;/string&gt;\
&#9;&lt;ProtectedString name=&quot;Source&quot;&gt;&apos;..[==[--[[
&#9;Thank you for using Dex SaveInstance by Moon. (Calamari edition.)
&#9;
&#9;If you cannot play the game, please try relocating any scripts in StarterPlayer elsewhere.
&#9;]]]==]..&apos;&lt;/ProtectedString&gt;\
&#9;&lt;/Properties&gt;\
&#9;&lt;/Item&gt;&apos;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;t_ins(buffer,&quot;\n&lt;/roblox&gt;&quot;)
&#9;&#9;&#9;
&#9;&#9;&#9;if Serializer.Settings.DecompileMode &gt; 0 and decompile then
&#9;&#9;&#9;&#9;if inst == game and #Serializer.Settings.DecompileIgnore &gt; 0 then
&#9;&#9;&#9;&#9;&#9;local ignoreServices = {}
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(Serializer.Settings.DecompileIgnore) do t_ins(ignoreServices,game:GetService(v)) end
&#9;&#9;&#9;&#9;&#9;for i = #toDecompile,1,-1 do
&#9;&#9;&#9;&#9;&#9;&#9;for _,serv in pairs(ignoreServices) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if toDecompile[i][1]:IsDescendantOf(serv) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(toDecompile,i)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if Serializer.Settings.DecompileMode == 1 then
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(toDecompile) do
&#9;&#9;&#9;&#9;&#9;&#9;local decstr = &quot;-- This could not decompile&quot;
&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;    if (false) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;decstr = tostring(v[1]):gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;decstr = &quot;&quot;
&#9;                        end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;buffer[v[2]] = decstr
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif Serializer.Settings.DecompileMode == 2 then
&#9;&#9;&#9;&#9;&#9;local left = #toDecompile
&#9;&#9;&#9;&#9;&#9;local totalScripts = left
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local statusGui = Instance.new(&quot;ScreenGui&quot;)
&#9;&#9;&#9;&#9;&#9;local statusText = Instance.new(&quot;TextLabel&quot;,statusGui)
&#9;&#9;&#9;&#9;&#9;statusText.BackgroundTransparency = 1
&#9;&#9;&#9;&#9;&#9;statusText.TextColor3 = Color3.new(1,1,1)
&#9;&#9;&#9;&#9;&#9;statusText.Position = UDim2.new(0,0,0,0)
&#9;&#9;&#9;&#9;&#9;statusText.Size = UDim2.new(1,0,0,36)
&#9;&#9;&#9;&#9;&#9;statusText.TextSize = 32
&#9;&#9;&#9;&#9;&#9;statusText.Font = Enum.Font.Code
&#9;&#9;&#9;&#9;&#9;statusText.Text = left..&quot;/&quot;..totalScripts..&quot; Scripts Left&quot;
&#9;&#9;&#9;&#9;&#9;statusGui.Parent = gethui()
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local function doDec(scr)
&#9;&#9;&#9;&#9;&#9;&#9;local thread = coroutine.running()
&#9;&#9;&#9;&#9;&#9;&#9;local decompiled = false
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;tostring(scr,&quot;unluac&quot;,function(scr,err)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;decompiled = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;coroutine.resume(thread,scr,err)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(Serializer.Settings.DecompileTimeout)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if decompiled then return end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;coroutine.resume(thread,nil,&quot;timeout&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;return coroutine.yield()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;for i = 1,Serializer.Settings.UnluacMaxThreads do
&#9;&#9;&#9;&#9;&#9;&#9;spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;while #toDecompile &gt; 0 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local nextScript = table.remove(toDecompile)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local scr,err = doDec(nextScript[1])
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if scr then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;buffer[nextScript[2]] = scr:gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;buffer[nextScript[2]] = &quot;-- This could not decompile because &quot;..(err or &quot;&quot;):gsub(&quot;[&apos;\&quot;&lt;&gt;&amp;]&quot;,xmlReplace)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;left = left - 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;statusText.Text = left..&quot;/&quot;..totalScripts..&quot; Scripts Left&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;while left &gt; 0 do game:GetService(&quot;RunService&quot;).RenderStepped:wait() end
&#9;&#9;&#9;&#9;&#9;statusGui:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;_writefile(name..(&quot;.rbxmx&quot;),(t_concat(buffer)), name, &quot;Roblox XML Files(*.rbxlx, *.rbxmx)\0 * .rbxlx; *.rbxmx\0All Files\0 * .*\0&quot;,(&quot;.rbxmx&quot;))
&#9;&#9;&#9;end)
&#9;&#9;&#9;
&#9;&#9;&#9;resetState()
&#9;&#9;end
&#9;}
&#9;
&#9;return Serializer
&#9;end
&#9;
&#9;pcall(function()
&#9;&#9;local initialized = false
&#9;&#9;local serializer = SerializerModule()
&#9;&#9;
&#9;&#9;local function init()
&#9;&#9;local startup = {
&#9;&#9;&#9;API = fetchAPI(),
&#9;&#9;&#9;WriteFile = dexWriteFile,
&#9;&#9;&#9;GetNilInstances = nil,
&#9;&#9;&#9;OldIndex = oldindex
&#9;&#9;}
&#9;&#9;serializer.Init(startup)
&#9;&#9;initialized = true
&#9;&#9;end
&#9;&#9;
&#9;&#9;if not initialized then
&#9;&#9;init()
&#9;&#9;end
&#9;&#9;
&#9;&#9;SaveInstance = serializer.SaveInstance
&#9;&#9;saveinstance = serializer.SaveInstance
&#9;end)
end

local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
local HEADER_SIZE = ENTRY_SIZE*2

local FONT = &apos;SourceSans&apos;
local FONT_SIZE do
&#9;local size = {8,9,10,11,12,14,18,24,36,48}
&#9;local s
&#9;local n = math.huge
&#9;for i = 1,#size do
&#9;&#9;if size[i] &lt;= GUI_SIZE then
&#9;&#9;&#9;FONT_SIZE = i - 1
&#9;&#9;end
&#9;end
end

local GuiColor = {
&#9;Background = Color3_fromRGB(37, 37, 42),
&#9;Border = Color3_fromRGB(20, 20, 25),
&#9;Selected = Color3_fromRGB(5, 100, 145),
&#9;BorderSelected = Color3_fromRGB(2, 125, 145),
&#9;Text = Color3_fromRGB(245, 245, 250),
&#9;TextDisabled = Color3_fromRGB(190, 190, 195),
&#9;TextSelected = Color3_fromRGB(255, 255, 255),
&#9;Button = Color3_fromRGB(31, 31, 35),
&#9;ButtonBorder = Color3_fromRGB(135, 135, 140),
&#9;ButtonSelected = Color3_fromRGB(0, 170, 155),
&#9;Field = Color3_fromRGB(37, 37, 42),
&#9;FieldBorder = Color3_fromRGB(50, 50, 55),
&#9;TitleBackground = Color3_fromRGB(10, 10, 15)
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Icon map constants

local MAP_ID = 3440403115

-- Indices based on implementation of Icon function.
local ACTION_CUT         &#9; = 160
local ACTION_COPY        &#9; = 161
local ACTION_PASTE       &#9; = 162
local ACTION_DELETE      &#9; = 163
local ACTION_SORT        &#9; = 164
local ACTION_CUT_OVER    &#9; = 174
local ACTION_COPY_OVER   &#9; = 175
local ACTION_PASTE_OVER  &#9; = 176
local ACTION_DELETE_OVER&#9; = 177
local ACTION_SORT_OVER  &#9; = 178
local ACTION_EDITQUICKACCESS = 190
local ACTION_FREEZE &#9;&#9; = 188
local ACTION_STARRED &#9;&#9; = 189
local ACTION_ADDSTAR &#9;&#9; = 184
local ACTION_ADDSTAR_OVER &#9; = 187

local NODE_COLLAPSED      = 165
local NODE_EXPANDED       = 166
local NODE_COLLAPSED_OVER = 179
local NODE_EXPANDED_OVER  = 180

local ExplorerIndex = {
&#9;[&quot;Cut&quot;] = ACTION_CUT_OVER;
&#9;[&quot;Copy&quot;] = ACTION_COPY_OVER;
&#9;[&quot;Duplicate&quot;] = ACTION_COPY_OVER;
&#9;[&quot;Delete&quot;] = ACTION_DELETE_OVER;
&#9;[&quot;Insert Part&quot;] = 1;
&#9;[&quot;Accessory&quot;] = 32;
&#9;[&quot;Accoutrement&quot;] = 32;
&#9;[&quot;AdService&quot;] = 73;
&#9;[&quot;Animation&quot;] = 60;
&#9;[&quot;AnimationController&quot;] = 60;
&#9;[&quot;AnimationTrack&quot;] = 60;
&#9;[&quot;Animator&quot;] = 60;
&#9;[&quot;ArcHandles&quot;] = 56;
&#9;[&quot;AssetService&quot;] = 72;
&#9;[&quot;Attachment&quot;] = 34;
&#9;[&quot;Backpack&quot;] = 20;
&#9;[&quot;BadgeService&quot;] = 75;
&#9;[&quot;BallSocketConstraint&quot;] = 97;
&#9;[&quot;NoCollisionConstraint&quot;] = 116;
&#9;[&quot;BillboardGui&quot;] = 64;
&#9;[&quot;BinaryStringValue&quot;] = 4;
&#9;[&quot;BindableEvent&quot;] = 67;
&#9;[&quot;BindableFunction&quot;] = 66;
&#9;[&quot;BlockMesh&quot;] = 8;
&#9;[&quot;BloomEffect&quot;] = 94;
&#9;[&quot;BlurEffect&quot;] = 90;
&#9;[&quot;BodyAngularVelocity&quot;] = 14;
&#9;[&quot;BodyForce&quot;] = 14;
&#9;[&quot;BodyGyro&quot;] = 14;
&#9;[&quot;BodyPosition&quot;] = 14;
&#9;[&quot;BodyThrust&quot;] = 14;
&#9;[&quot;BodyVelocity&quot;] = 14;
&#9;[&quot;BoolValue&quot;] = 4;
&#9;[&quot;BoxHandleAdornment&quot;] = 54;
&#9;[&quot;BrickColorValue&quot;] = 4;
&#9;[&quot;Camera&quot;] = 5;
&#9;[&quot;CFrameValue&quot;] = 4;
&#9;[&quot;CharacterMesh&quot;] = 60;
&#9;[&quot;Chat&quot;] = 33;
&#9;[&quot;ClickDetector&quot;] = 41;
&#9;[&quot;CollectionService&quot;] = 30;
&#9;[&quot;Color3Value&quot;] = 4;
&#9;[&quot;ColorCorrectionEffect&quot;] = 90;
&#9;[&quot;ConeHandleAdornment&quot;] = 54;
&#9;[&quot;Configuration&quot;] = 58;
&#9;[&quot;ContentProvider&quot;] = 72;
&#9;[&quot;ContextActionService&quot;] = 41;
&#9;[&quot;CoreGui&quot;] = 46;
&#9;[&quot;CoreScript&quot;] = 18;
&#9;[&quot;CornerWedgePart&quot;] = 1;
&#9;[&quot;CustomEvent&quot;] = 4;
&#9;[&quot;CustomEventReceiver&quot;] = 4;
&#9;[&quot;CylinderHandleAdornment&quot;] = 54;
&#9;[&quot;CylinderMesh&quot;] = 8;
&#9;[&quot;CylindricalConstraint&quot;] = 107;
&#9;[&quot;Debris&quot;] = 30;
&#9;[&quot;Decal&quot;] = 7;
&#9;[&quot;Dialog&quot;] = 62;
&#9;[&quot;DialogChoice&quot;] = 63;
&#9;[&quot;DoubleConstrainedValue&quot;] = 4;
&#9;[&quot;Explosion&quot;] = 36;
&#9;[&quot;FileMesh&quot;] = 8;
&#9;[&quot;Fire&quot;] = 61;
&#9;[&quot;Flag&quot;] = 38;
&#9;[&quot;FlagStand&quot;] = 39;
&#9;[&quot;FloorWire&quot;] = 4;
&#9;[&quot;Folder&quot;] = 70;
&#9;[&quot;ForceField&quot;] = 37;
&#9;[&quot;Frame&quot;] = 48;
&#9;[&quot;GamePassService&quot;] = 19;
&#9;[&quot;Glue&quot;] = 34;
&#9;[&quot;GuiButton&quot;] = 52;
&#9;[&quot;GuiMain&quot;] = 47;
&#9;[&quot;GuiService&quot;] = 47;
&#9;[&quot;Handles&quot;] = 53;
&#9;[&quot;HapticService&quot;] = 84;
&#9;[&quot;Hat&quot;] = 45;
&#9;[&quot;HingeConstraint&quot;] = 98;
&#9;[&quot;Hint&quot;] = 33;
&#9;[&quot;HopperBin&quot;] = 22;
&#9;[&quot;HttpService&quot;] = 76;
&#9;[&quot;Humanoid&quot;] = 9;
&#9;[&quot;ImageButton&quot;] = 52;
&#9;[&quot;ImageLabel&quot;] = 49;
&#9;[&quot;InsertService&quot;] = 72;
&#9;[&quot;IntConstrainedValue&quot;] = 4;
&#9;[&quot;IntValue&quot;] = 4;
&#9;[&quot;JointInstance&quot;] = 34;
&#9;[&quot;JointsService&quot;] = 34;
&#9;[&quot;Keyframe&quot;] = 60;
&#9;[&quot;KeyframeSequence&quot;] = 60;
&#9;[&quot;KeyframeSequenceProvider&quot;] = 60;
&#9;[&quot;Lighting&quot;] = 13;
&#9;[&quot;LineHandleAdornment&quot;] = 54;
&#9;[&quot;LocalScript&quot;] = 18;
&#9;[&quot;LogService&quot;] = 87;
&#9;[&quot;MarketplaceService&quot;] = 46;
&#9;[&quot;Message&quot;] = 33;
&#9;[&quot;Model&quot;] = 2;
&#9;[&quot;ModuleScript&quot;] = 71;
&#9;[&quot;Motor&quot;] = 34;
&#9;[&quot;Motor6D&quot;] = 34;
&#9;[&quot;MoveToConstraint&quot;] = 93;
&#9;[&quot;NegateOperation&quot;] = 78;
&#9;[&quot;NetworkClient&quot;] = 16;
&#9;[&quot;NetworkReplicator&quot;] = 29;
&#9;[&quot;NetworkServer&quot;] = 15;
&#9;[&quot;NumberValue&quot;] = 4;
&#9;[&quot;ObjectValue&quot;] = 4;
&#9;[&quot;Pants&quot;] = 44;
&#9;[&quot;ParallelRampPart&quot;] = 1;
&#9;[&quot;Part&quot;] = 1;
&#9;[&quot;ParticleEmitter&quot;] = 69;
&#9;[&quot;PartPairLasso&quot;] = 57;
&#9;[&quot;PathfindingService&quot;] = 37;
&#9;[&quot;Platform&quot;] = 35;
&#9;[&quot;Player&quot;] = 12;
&#9;[&quot;PlayerGui&quot;] = 46;
&#9;[&quot;Players&quot;] = 21;
&#9;[&quot;PlayerScripts&quot;] = 82;
&#9;[&quot;PointLight&quot;] = 13;
&#9;[&quot;PointsService&quot;] = 83;
&#9;[&quot;Pose&quot;] = 60;
&#9;[&quot;PrismaticConstraint&quot;] = 99;
&#9;[&quot;PrismPart&quot;] = 1;
&#9;[&quot;PyramidPart&quot;] = 1;
&#9;[&quot;RayValue&quot;] = 4;
&#9;[&quot;ReflectionMetadata&quot;] = 86;
&#9;[&quot;ReflectionMetadataCallbacks&quot;] = 86;
&#9;[&quot;ReflectionMetadataClass&quot;] = 86;
&#9;[&quot;ReflectionMetadataClasses&quot;] = 86;
&#9;[&quot;ReflectionMetadataEnum&quot;] = 86;
&#9;[&quot;ReflectionMetadataEnumItem&quot;] = 86;
&#9;[&quot;ReflectionMetadataEnums&quot;] = 86;
&#9;[&quot;ReflectionMetadataEvents&quot;] = 86;
&#9;[&quot;ReflectionMetadataFunctions&quot;] = 86;
&#9;[&quot;ReflectionMetadataMember&quot;] = 86;
&#9;[&quot;ReflectionMetadataProperties&quot;] = 86;
&#9;[&quot;ReflectionMetadataYieldFunctions&quot;] = 86;
&#9;[&quot;RemoteEvent&quot;] = 80;
&#9;[&quot;RemoteFunction&quot;] = 79;
&#9;[&quot;ReplicatedFirst&quot;] = 72;
&#9;[&quot;ReplicatedStorage&quot;] = 72;
&#9;[&quot;RightAngleRampPart&quot;] = 1;
&#9;[&quot;RocketPropulsion&quot;] = 14;
&#9;[&quot;RodConstraint&quot;] = 101;
&#9;[&quot;RopeConstraint&quot;] = 100;
&#9;[&quot;Rotate&quot;] = 34;
&#9;[&quot;RotateP&quot;] = 34;
&#9;[&quot;RotateV&quot;] = 34;
&#9;[&quot;RunService&quot;] = 66;
&#9;[&quot;ScreenGui&quot;] = 47;
&#9;[&quot;Script&quot;] = 6;
&#9;[&quot;ScrollingFrame&quot;] = 48;
&#9;[&quot;Seat&quot;] = 35;
&#9;[&quot;Selection&quot;] = 55;
&#9;[&quot;SelectionBox&quot;] = 54;
&#9;[&quot;SelectionPartLasso&quot;] = 57;
&#9;[&quot;SelectionPointLasso&quot;] = 57;
&#9;[&quot;SelectionSphere&quot;] = 54;
&#9;[&quot;ServerScriptService&quot;] = 0;
&#9;[&quot;ServerStorage&quot;] = 74;
&#9;[&quot;Shirt&quot;] = 43;
&#9;[&quot;ShirtGraphic&quot;] = 40;
&#9;[&quot;SkateboardPlatform&quot;] = 35;
&#9;[&quot;Sky&quot;] = 28;
&#9;[&quot;SlidingBallConstraint&quot;] = 93;
&#9;[&quot;Smoke&quot;] = 59;
&#9;[&quot;Snap&quot;] = 34;
&#9;[&quot;Sound&quot;] = 11;
&#9;[&quot;SoundService&quot;] = 31;
&#9;[&quot;Sparkles&quot;] = 42;
&#9;[&quot;SpawnLocation&quot;] = 25;
&#9;[&quot;SpecialMesh&quot;] = 8;
&#9;[&quot;SphereHandleAdornment&quot;] = 54;
&#9;[&quot;SpotLight&quot;] = 13;
&#9;[&quot;SpringConstraint&quot;] = 102;
&#9;[&quot;StarterCharacterScripts&quot;] = 82;
&#9;[&quot;StarterGear&quot;] = 20;
&#9;[&quot;StarterGui&quot;] = 46;
&#9;[&quot;StarterPack&quot;] = 20;
&#9;[&quot;StarterPlayer&quot;] = 88;
&#9;[&quot;StarterPlayerScripts&quot;] = 82;
&#9;[&quot;Status&quot;] = 2;
&#9;[&quot;StringValue&quot;] = 4;
&#9;[&quot;SunRaysEffect&quot;] = 90;
&#9;[&quot;SurfaceGui&quot;] = 64;
&#9;[&quot;SurfaceLight&quot;] = 13;
&#9;[&quot;SurfaceSelection&quot;] = 55;
&#9;[&quot;Team&quot;] = 24;
&#9;[&quot;Teams&quot;] = 23;
&#9;[&quot;TeleportService&quot;] = 81;
&#9;[&quot;Terrain&quot;] = 65;
&#9;[&quot;TerrainRegion&quot;] = 65;
&#9;[&quot;TestService&quot;] = 68;
&#9;[&quot;TextBox&quot;] = 51;
&#9;[&quot;TextButton&quot;] = 51;
&#9;[&quot;TextLabel&quot;] = 50;
&#9;[&quot;Texture&quot;] = 10;
&#9;[&quot;TextureTrail&quot;] = 4;
&#9;[&quot;Tool&quot;] = 17;
&#9;[&quot;TouchTransmitter&quot;] = 37;
&#9;[&quot;TrussPart&quot;] = 1;
&#9;[&quot;UnionOperation&quot;] = 77;
&#9;[&quot;MeshPart&quot;] = 77;
&#9;[&quot;UserInputService&quot;] = 84;
&#9;[&quot;Vector3Value&quot;] = 4;
&#9;[&quot;VehicleSeat&quot;] = 35;
&#9;[&quot;VelocityMotor&quot;] = 34;
&#9;[&quot;WedgePart&quot;] = 1;
&#9;[&quot;Weld&quot;] = 34;
&#9;[&quot;Workspace&quot;] = 19;
&#9;[&quot;WeldConstraint&quot;] = 105;
&#9;[&quot;VectorForce&quot;] = 113;
&#9;[&quot;UITextSizeConstraint&quot;] = 26;
&#9;[&quot;UITableLayout&quot;] = 26;
&#9;[&quot;UISizeConstraint&quot;] = 26;
&#9;[&quot;UIScale&quot;] = 26;
&#9;[&quot;UIPageLayout&quot;] = 26;
&#9;[&quot;UIPadding&quot;] = 26;
&#9;[&quot;UIListLayout&quot;] = 26;
&#9;[&quot;UIGridLayout&quot;] = 26;
&#9;[&quot;UIAspectRatioConstraint&quot;] = 26;
&#9;[&quot;Trail&quot;] = 26;
&#9;[&quot;UITextSizeConstraint&quot;] = 26;
&#9;[&quot;LocalizationTable&quot;] = 108;
&#9;[&quot;LocalizationService&quot;] = 103;
&#9;[&quot;LineForce&quot;] = 112;
&#9;[&quot;Beam&quot;] = 108;
&#9;[&quot;AngularVelocity&quot;] = 114;
&#9;[&quot;AlignPosition&quot;] = 111;
&#9;[&quot;AlignOrientation&quot;] = 112;
&#9;[&quot;HumanoidDescription&quot;] = 115;
&#9;[&quot;TremoloSoundEffect&quot;] = 95;
&#9;[&quot;SoundGroup&quot;] = 96;
&#9;[&quot;ReverbSoundEffect&quot;] = 95;
&#9;[&quot;PitchShiftSoundEffect&quot;] = 95;
&#9;[&quot;FlangeSoundEffect&quot;] = 95;
&#9;[&quot;EqualizerSoundEffect&quot;] = 95;
&#9;[&quot;EchoSoundEffect&quot;] = 95;
&#9;[&quot;DistortionSoundEffect&quot;] = 95;
&#9;[&quot;CompressorSoundEffect&quot;] = 95;
&#9;[&quot;ChorusSoundEffect&quot;] = 95;
&#9;[&quot;Torque&quot;] = 114;
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

function Create(ty,data)
&#9;local obj
&#9;if type(ty) == &apos;string&apos; then
&#9;&#9;obj = Instance.new(ty)
&#9;else
&#9;&#9;obj = ty
&#9;end
&#9;for k, v in pairs(data) do
&#9;&#9;if type(k) == &apos;number&apos; then
&#9;&#9;&#9;v.Parent = obj
&#9;&#9;else
&#9;&#9;&#9;obj[k] = v
&#9;&#9;end
&#9;end
&#9;return obj
end

local barActive = false
local activeOptions = {}

function createDDown(dBut, callback,...)
&#9;if barActive then
&#9;&#9;for i,v in pairs(activeOptions) do
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;&#9;activeOptions = {}
&#9;&#9;barActive = false
&#9;&#9;return
&#9;else
&#9;&#9;barActive = true
&#9;end
&#9;local slots = {...}
&#9;local base = dBut
&#9;for i,v in pairs(slots) do
&#9;&#9;local newOption = base:Clone()
&#9;&#9;newOption.ZIndex = 5
&#9;&#9;newOption.Name = &quot;Option &quot;..tostring(i)
&#9;&#9;newOption.Parent = base.Parent.Parent.Parent
&#9;&#9;newOption.BackgroundTransparency = 0
&#9;&#9;newOption.ZIndex = 2
&#9;&#9;table.insert(activeOptions,newOption)
&#9;&#9;newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
&#9;&#9;newOption.Text = slots[i]
&#9;&#9;newOption.MouseButton1Down:Connect(function()
&#9;&#9;&#9;dBut.Text = slots[i]
&#9;&#9;&#9;callback(slots[i])
&#9;&#9;&#9;for i,v in pairs(activeOptions) do
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;end
&#9;&#9;&#9;activeOptions = {}
&#9;&#9;&#9;barActive = false
&#9;&#9;end)
&#9;end
end

-- Connects a function to an event such that it fires asynchronously
local IsA = game.IsA
local ClearAllChildren = game.ClearAllChildren
local IsAncestorOf = game.IsAncestorOf
local WaitForChild = game.WaitForChild
local FindFirstChildOfClass = game.FindFirstChildOfClass
local GetPropertyChangedSignal = game.GetPropertyChangedSignal
local GetChildren = game.GetChildren
local GetDescendants = game.GetDescendants
local Clone = game.Clone
local Destroy = game.Destroy
local Wait, Connect, Disconnect = (function()
&#9;local A = game.Changed
&#9;local B = A.Connect
&#9;local C = B(A, function()end)
&#9;local D = C.Disconnect
&#9;D(C)
&#9;return A.Wait, B, D
end)()

-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
&#9;if screen == nil then return nil end
&#9;while not screen:IsA(&quot;ScreenGui&quot;) do
&#9;&#9;screen = screen.Parent
&#9;&#9;if screen == nil then return nil end
&#9;end
&#9;return screen
end

do
&#9;local ZIndexLock = {}
&#9;-- Sets the ZIndex of an object and its descendants. Objects are locked so
&#9;-- that SetZIndexOnChanged doesn&apos;t spawn multiple threads that set the
&#9;-- ZIndex of the same object.
&#9;function SetZIndex(object,z)
&#9;&#9;if not ZIndexLock[object] then
&#9;&#9;&#9;ZIndexLock[object] = true
&#9;&#9;&#9;if object:IsA&apos;GuiObject&apos; then
&#9;&#9;&#9;&#9;object.ZIndex = z
&#9;&#9;&#9;end
&#9;&#9;&#9;local children = object:GetChildren()
&#9;&#9;&#9;for i = 1,#children do
&#9;&#9;&#9;&#9;SetZIndex(children[i],z)
&#9;&#9;&#9;end
&#9;&#9;&#9;ZIndexLock[object] = nil
&#9;&#9;end
&#9;end

&#9;function SetZIndexOnChanged(object)
&#9;&#9;return object.Changed:Connect(function(p)
&#9;&#9;&#9;if p == &quot;ZIndex&quot; then
&#9;&#9;&#9;&#9;SetZIndex(object,object.ZIndex)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
&#9;local iconMap = &apos;http://www.roblox.com/asset/?id=&apos; .. MAP_ID
&#9;game:GetService(&apos;ContentProvider&apos;):Preload(iconMap)
&#9;local iconDehash do
&#9;&#9;-- 14 x 14, 0-based input, 0-based output
&#9;&#9;local f=math.floor
&#9;&#9;function iconDehash(h)
&#9;&#9;&#9;return f(h/14%14),f(h%14)
&#9;&#9;end
&#9;end

&#9;function Icon(IconFrame,index)
&#9;&#9;local row,col = iconDehash(index)
&#9;&#9;local mapSize = Vector2.new(256,256)
&#9;&#9;local pad,border = 2,1
&#9;&#9;local iconSize = 16

&#9;&#9;local class = &apos;Frame&apos;
&#9;&#9;if type(IconFrame) == &apos;string&apos; then
&#9;&#9;&#9;class = IconFrame
&#9;&#9;&#9;IconFrame = nil
&#9;&#9;end

&#9;&#9;if not IconFrame then
&#9;&#9;&#9;IconFrame = Create(class,{
&#9;&#9;&#9;&#9;Name = &quot;Icon&quot;;
&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;ClipsDescendants = true;
&#9;&#9;&#9;&#9;Create(&apos;ImageLabel&apos;,{
&#9;&#9;&#9;&#9;&#9;Name = &quot;IconMap&quot;;
&#9;&#9;&#9;&#9;&#9;Active = false;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;Image = iconMap;
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
&#9;&#9;&#9;&#9;});
&#9;&#9;&#9;})
&#9;&#9;end

&#9;&#9;IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
&#9;&#9;return IconFrame
&#9;end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- ScrollBar
do
&#9;-- AutoButtonColor doesn&apos;t always reset properly
&#9;local function ResetButtonColor(button)
&#9;&#9;local active = button.Active
&#9;&#9;button.Active = not active
&#9;&#9;button.Active = active
&#9;end

&#9;local function ArrowGraphic(size,dir,scaled,template)
&#9;&#9;local Frame = Create(&apos;Frame&apos;,{
&#9;&#9;&#9;Name = &quot;Arrow Graphic&quot;;
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;Size = UDim2.new(0,size,0,size);
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;})
&#9;&#9;if not template then
&#9;&#9;&#9;template = Instance.new(&quot;Frame&quot;)
&#9;&#9;&#9;template.BorderSizePixel = 0
&#9;&#9;end

&#9;&#9;local transform
&#9;&#9;if dir == nil or dir == &apos;Up&apos; then
&#9;&#9;&#9;function transform(p,s) return p,s end
&#9;&#9;elseif dir == &apos;Down&apos; then
&#9;&#9;&#9;function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
&#9;&#9;elseif dir == &apos;Left&apos; then
&#9;&#9;&#9;function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
&#9;&#9;elseif dir == &apos;Right&apos; then
&#9;&#9;&#9;function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
&#9;&#9;end

&#9;&#9;local scale
&#9;&#9;if scaled then
&#9;&#9;&#9;function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
&#9;&#9;else
&#9;&#9;&#9;function scale(p,s) return p,s end
&#9;&#9;end

&#9;&#9;local o = math.floor(size/4)
&#9;&#9;if size%2 == 0 then
&#9;&#9;&#9;local n = size/2-1
&#9;&#9;&#9;for i = 0,n do
&#9;&#9;&#9;&#9;local t = template:Clone()
&#9;&#9;&#9;&#9;local p,s = scale(transform(
&#9;&#9;&#9;&#9;&#9;UDim2.new(0,n-i,0,o+i),
&#9;&#9;&#9;&#9;&#9;UDim2.new(0,(i+1)*2,0,1)
&#9;&#9;&#9;&#9;))
&#9;&#9;&#9;&#9;t.Position = p
&#9;&#9;&#9;&#9;t.Size = s
&#9;&#9;&#9;&#9;t.Parent = Frame
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;local n = (size-1)/2
&#9;&#9;&#9;for i = 0,n do
&#9;&#9;&#9;&#9;local t = template:Clone()
&#9;&#9;&#9;&#9;local p,s = scale(transform(
&#9;&#9;&#9;&#9;&#9;UDim2.new(0,n-i,0,o+i),
&#9;&#9;&#9;&#9;&#9;UDim2.new(0,i*2+1,0,1)
&#9;&#9;&#9;&#9;))
&#9;&#9;&#9;&#9;t.Position = p
&#9;&#9;&#9;&#9;t.Size = s
&#9;&#9;&#9;&#9;t.Parent = Frame
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if size%4 &gt; 1 then
&#9;&#9;&#9;local t = template:Clone()
&#9;&#9;&#9;local p,s = scale(transform(
&#9;&#9;&#9;&#9;UDim2.new(0,0,0,size-o-1),
&#9;&#9;&#9;&#9;UDim2.new(0,size,0,1)
&#9;&#9;&#9;))
&#9;&#9;&#9;t.Position = p
&#9;&#9;&#9;t.Size = s
&#9;&#9;&#9;t.Parent = Frame
&#9;&#9;end
&#9;&#9;return Frame
&#9;end


&#9;local function GripGraphic(size,dir,spacing,scaled,template)
&#9;&#9;local Frame = Create(&apos;Frame&apos;,{
&#9;&#9;&#9;Name = &quot;Grip Graphic&quot;;
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;Size = UDim2.new(0,size.x,0,size.y);
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;})
&#9;&#9;if not template then
&#9;&#9;&#9;template = Instance.new(&quot;Frame&quot;)
&#9;&#9;&#9;template.BorderSizePixel = 0
&#9;&#9;end

&#9;&#9;spacing = spacing or 2

&#9;&#9;local scale
&#9;&#9;if scaled then
&#9;&#9;&#9;function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
&#9;&#9;else
&#9;&#9;&#9;function scale(p) return p end
&#9;&#9;end

&#9;&#9;if dir == &apos;Vertical&apos; then
&#9;&#9;&#9;for i=0,size.x-1,spacing do
&#9;&#9;&#9;&#9;local t = template:Clone()
&#9;&#9;&#9;&#9;t.Size = scale(UDim2.new(0,1,0,size.y))
&#9;&#9;&#9;&#9;t.Position = scale(UDim2.new(0,i,0,0))
&#9;&#9;&#9;&#9;t.Parent = Frame
&#9;&#9;&#9;end
&#9;&#9;elseif dir == nil or dir == &apos;Horizontal&apos; then
&#9;&#9;&#9;for i=0,size.y-1,spacing do
&#9;&#9;&#9;&#9;local t = template:Clone()
&#9;&#9;&#9;&#9;t.Size = scale(UDim2.new(0,size.x,0,1))
&#9;&#9;&#9;&#9;t.Position = scale(UDim2.new(0,0,0,i))
&#9;&#9;&#9;&#9;t.Parent = Frame
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;return Frame
&#9;end

&#9;local mt = {
&#9;&#9;__index = {
&#9;&#9;&#9;GetScrollPercent = function(self)
&#9;&#9;&#9;&#9;return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
&#9;&#9;&#9;end;
&#9;&#9;&#9;CanScrollDown = function(self)
&#9;&#9;&#9;&#9;return self.ScrollIndex + self.VisibleSpace &lt; self.TotalSpace
&#9;&#9;&#9;end;
&#9;&#9;&#9;CanScrollUp = function(self)
&#9;&#9;&#9;&#9;return self.ScrollIndex &gt; 0
&#9;&#9;&#9;end;
&#9;&#9;&#9;ScrollDown = function(self)
&#9;&#9;&#9;&#9;self.ScrollIndex = self.ScrollIndex + self.PageIncrement
&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;end;
&#9;&#9;&#9;ScrollUp = function(self)
&#9;&#9;&#9;&#9;self.ScrollIndex = self.ScrollIndex - self.PageIncrement
&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;end;
&#9;&#9;&#9;ScrollTo = function(self,index)
&#9;&#9;&#9;&#9;self.ScrollIndex = index
&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;end;
&#9;&#9;&#9;SetScrollPercent = function(self,percent)
&#9;&#9;&#9;&#9;self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;end;
&#9;&#9;};
&#9;}
&#9;mt.__index.CanScrollRight = mt.__index.CanScrollDown
&#9;mt.__index.CanScrollLeft = mt.__index.CanScrollUp
&#9;mt.__index.ScrollLeft = mt.__index.ScrollUp
&#9;mt.__index.ScrollRight = mt.__index.ScrollDown

&#9;function ScrollBar(horizontal)
&#9;&#9;local ScrollFrame = Create(&apos;Frame&apos;,{
&#9;&#9;&#9;Name = &quot;ScrollFrame&quot;,
&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;Position = horizontal and UDim2_new(0,0,1,-GUI_SIZE) or UDim2_new(1,-GUI_SIZE,0,0),
&#9;&#9;&#9;Size = horizontal and UDim2_new(1,0,0,GUI_SIZE) or UDim2_new(0,GUI_SIZE,1,0),
&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;Create(&apos;ImageButton&apos;,{
&#9;&#9;&#9;&#9;Name = &quot;ScrollDown&quot;,
&#9;&#9;&#9;&#9;Position = horizontal and UDim2_new(1,-GUI_SIZE,0,0) or UDim2_new(0,0,1,-GUI_SIZE),
&#9;&#9;&#9;&#9;Size = UDim2_new(0, GUI_SIZE, 0, GUI_SIZE),
&#9;&#9;&#9;&#9;BackgroundColor3 = GuiColor.Button,
&#9;&#9;&#9;&#9;BorderColor3 = GuiColor.Border
&#9;&#9;&#9;}),
&#9;&#9;&#9;Create(&apos;ImageButton&apos;,{
&#9;&#9;&#9;&#9;Name = &quot;ScrollUp&quot;,
&#9;&#9;&#9;&#9;Size = UDim2_new(0, GUI_SIZE, 0, GUI_SIZE),
&#9;&#9;&#9;&#9;BackgroundColor3 = GuiColor.Button,
&#9;&#9;&#9;&#9;BorderColor3 = GuiColor.Border
&#9;&#9;&#9;}),
&#9;&#9;&#9;Create(&apos;ImageButton&apos;,{
&#9;&#9;&#9;&#9;Name = &quot;ScrollBar&quot;,
&#9;&#9;&#9;&#9;Size = horizontal and UDim2_new(1,-GUI_SIZE*2,1,0) or UDim2_new(1,0,1,-GUI_SIZE*2),
&#9;&#9;&#9;&#9;Position = horizontal and UDim2_new(0,GUI_SIZE,0,0) or UDim2_new(0,0,0,GUI_SIZE),
&#9;&#9;&#9;&#9;AutoButtonColor = false,
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3_new(1/4, 1/4, 1/4),
&#9;&#9;&#9;&#9;BorderColor3 = GuiColor.Border,
&#9;&#9;&#9;&#9;Create(&apos;ImageButton&apos;,{
&#9;&#9;&#9;&#9;&#9;Name = &quot;ScrollThumb&quot;,
&#9;&#9;&#9;&#9;&#9;AutoButtonColor = false,
&#9;&#9;&#9;&#9;&#9;Size = UDim2_new(0, GUI_SIZE, 0, GUI_SIZE),
&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = GuiColor.Button,
&#9;&#9;&#9;&#9;&#9;BorderColor3 = GuiColor.Border
&#9;&#9;&#9;&#9;})
&#9;&#9;&#9;})
&#9;&#9;})

&#9;&#9;local graphicTemplate = Create(&apos;Frame&apos;,{
&#9;&#9;&#9;Name=&quot;Graphic&quot;,
&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;BackgroundColor3 = GuiColor.Border
&#9;&#9;})
&#9;&#9;local graphicSize = GUI_SIZE/2

&#9;&#9;local ScrollDownFrame = ScrollFrame.ScrollDown
&#9;&#9;local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and &apos;Right&apos; or &apos;Down&apos;,true,graphicTemplate)
&#9;&#9;ScrollDownGraphic.Position = UDim2_new(.5,-graphicSize/2,.5,-graphicSize/2)
&#9;&#9;ScrollDownGraphic.Parent = ScrollDownFrame
&#9;&#9;local ScrollUpFrame = ScrollFrame.ScrollUp
&#9;&#9;local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and &apos;Left&apos; or &apos;Up&apos;,true,graphicTemplate)
&#9;&#9;ScrollUpGraphic.Position = UDim2_new(.5,-graphicSize/2,.5,-graphicSize/2)
&#9;&#9;ScrollUpGraphic.Parent = ScrollUpFrame
&#9;&#9;local ScrollBarFrame = ScrollFrame.ScrollBar
&#9;&#9;local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
&#9;&#9;do
&#9;&#9;&#9;local size = GUI_SIZE*3/8
&#9;&#9;&#9;local Decal = GripGraphic(Vector2_new(size,size),horizontal and &apos;Vertical&apos; or &apos;Horizontal&apos;,2,graphicTemplate)
&#9;&#9;&#9;Decal.Position = UDim2_new(.5,-size/2,.5,-size/2)
&#9;&#9;&#9;Decal.Parent = ScrollThumbFrame
&#9;&#9;end

&#9;&#9;local Class = setmetatable({
&#9;&#9;&#9;GUI = ScrollFrame,
&#9;&#9;&#9;ScrollIndex = 0,
&#9;&#9;&#9;VisibleSpace = 0,
&#9;&#9;&#9;TotalSpace = 0,
&#9;&#9;&#9;PageIncrement = 1
&#9;&#9;},{
&#9;&#9;&#9;__index = {
&#9;&#9;&#9;&#9;GetScrollPercent = function(self)
&#9;&#9;&#9;&#9;&#9;return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;CanScrollDown = function(self)
&#9;&#9;&#9;&#9;&#9;return self.ScrollIndex + self.VisibleSpace &lt; self.TotalSpace
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;CanScrollUp = function(self)
&#9;&#9;&#9;&#9;&#9;return self.ScrollIndex &gt; 0
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;CanScrollRight = function(self)
&#9;&#9;&#9;&#9;&#9;return self.ScrollIndex + self.VisibleSpace &lt; self.TotalSpace
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;CanScrollLeft = function(self)
&#9;&#9;&#9;&#9;&#9;return self.ScrollIndex &gt; 0
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;ScrollDown = function(self)
&#9;&#9;&#9;&#9;&#9;self.ScrollIndex += self.PageIncrement
&#9;&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;ScrollUp = function(self)
&#9;&#9;&#9;&#9;&#9;self.ScrollIndex -= self.PageIncrement
&#9;&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;ScrollRight = function(self)
&#9;&#9;&#9;&#9;&#9;self.ScrollIndex += self.PageIncrement
&#9;&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;ScrollLeft = function(self)
&#9;&#9;&#9;&#9;&#9;self.ScrollIndex -= self.PageIncrement
&#9;&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;ScrollTo = function(self,index)
&#9;&#9;&#9;&#9;&#9;self.ScrollIndex = index
&#9;&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;SetScrollPercent = function(self,percent)
&#9;&#9;&#9;&#9;&#9;self.ScrollIndex = math_floor((self.TotalSpace - self.VisibleSpace)*percent + .5)
&#9;&#9;&#9;&#9;&#9;self:Update()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;}
&#9;&#9;})

&#9;&#9;local UpdateScrollThumb
&#9;&#9;if horizontal then
&#9;&#9;&#9;function UpdateScrollThumb()
&#9;&#9;&#9;&#9;ScrollThumbFrame.Size = UDim2_new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
&#9;&#9;&#9;&#9;if ScrollThumbFrame.AbsoluteSize.X &lt; GUI_SIZE then
&#9;&#9;&#9;&#9;&#9;ScrollThumbFrame.Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local barSize = ScrollBarFrame.AbsoluteSize.X
&#9;&#9;&#9;&#9;ScrollThumbFrame.Position = UDim2_new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.X)/barSize,0,0,0)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;function UpdateScrollThumb()
&#9;&#9;&#9;&#9;ScrollThumbFrame.Size = UDim2_new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
&#9;&#9;&#9;&#9;if ScrollThumbFrame.AbsoluteSize.Y &lt; GUI_SIZE then
&#9;&#9;&#9;&#9;&#9;ScrollThumbFrame.Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local barSize = ScrollBarFrame.AbsoluteSize.Y
&#9;&#9;&#9;&#9;ScrollThumbFrame.Position = UDim2_new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.Y)/barSize,0)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local lastDown, lastUp
&#9;&#9;local scrollStyle = {BackgroundColor3=Color3_new(1, 1, 1),BackgroundTransparency=0}
&#9;&#9;local scrollStyle_ds = {BackgroundColor3=Color3_new(1, 1, 1),BackgroundTransparency=.7}

&#9;&#9;local function Update()
&#9;&#9;&#9;local t, v, s = Class.TotalSpace, Class.VisibleSpace, Class.ScrollIndex
&#9;&#9;&#9;if v &lt;= t then
&#9;&#9;&#9;&#9;if s &gt; 0 then
&#9;&#9;&#9;&#9;&#9;if s + v &gt; t then
&#9;&#9;&#9;&#9;&#9;&#9;Class.ScrollIndex = t - v
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Class.ScrollIndex = 0
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Class.ScrollIndex = 0
&#9;&#9;&#9;end

&#9;&#9;&#9;if Class.UpdateCallback then
&#9;&#9;&#9;&#9;if Class.UpdateCallback(Class) == false then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;local down = Class:CanScrollDown()
&#9;&#9;&#9;local up = Class:CanScrollUp()
&#9;&#9;&#9;if down ~= lastDown then
&#9;&#9;&#9;&#9;lastDown = down
&#9;&#9;&#9;&#9;ScrollDownFrame.Active = down
&#9;&#9;&#9;&#9;ScrollDownFrame.AutoButtonColor = down
&#9;&#9;&#9;&#9;local children = GetChildren(ScrollDownGraphic)
&#9;&#9;&#9;&#9;local style = down and scrollStyle or scrollStyle_ds
&#9;&#9;&#9;&#9;for i = 1,#children do
&#9;&#9;&#9;&#9;&#9;Create(children[i],style)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if up ~= lastUp then
&#9;&#9;&#9;&#9;lastUp = up
&#9;&#9;&#9;&#9;ScrollUpFrame.Active = up
&#9;&#9;&#9;&#9;ScrollUpFrame.AutoButtonColor = up
&#9;&#9;&#9;&#9;local children = GetChildren(ScrollUpGraphic)
&#9;&#9;&#9;&#9;local style = up and scrollStyle or scrollStyle_ds
&#9;&#9;&#9;&#9;for i = 1,#children do
&#9;&#9;&#9;&#9;&#9;Create(children[i],style)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;ScrollThumbFrame.Visible = down or up
&#9;&#9;&#9;UpdateScrollThumb()
&#9;&#9;end
&#9;&#9;Class.Update = Update

&#9;&#9;SetZIndexOnChanged(ScrollFrame)

&#9;&#9;local MouseDrag = Create(&apos;ImageButton&apos;,{
&#9;&#9;&#9;Name = &quot;MouseDrag&quot;,
&#9;&#9;&#9;Position = UDim2_new(-.25,0,-.25,0),
&#9;&#9;&#9;Size = UDim2_new(1.5,0,1.5,0),
&#9;&#9;&#9;Transparency = 1,
&#9;&#9;&#9;AutoButtonColor = false,
&#9;&#9;&#9;Active = true,
&#9;&#9;&#9;ZIndex = 10
&#9;&#9;})

&#9;&#9;local scrollEventID = 0
&#9;&#9;Connect(ScrollDownFrame.MouseButton1Down, function()
&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;local current = scrollEventID
&#9;&#9;&#9;local up_con
&#9;&#9;&#9;up_con = Connect(MouseDrag.MouseButton1Up, function()
&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;&#9;ResetButtonColor(ScrollDownFrame)
&#9;&#9;&#9;&#9;Disconnect(up_con)
&#9;&#9;&#9;&#9;drag = nil
&#9;&#9;&#9;end)
&#9;&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;&#9;Class:ScrollDown()
&#9;&#9;&#9;wait(.2)
&#9;&#9;&#9;while scrollEventID == current do
&#9;&#9;&#9;&#9;Class:ScrollDown()
&#9;&#9;&#9;&#9;if not Class:CanScrollDown() then break end
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;Connect(ScrollDownFrame.MouseButton1Up, function()
&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;end)

&#9;&#9;Connect(ScrollUpFrame.MouseButton1Down, function()
&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;local current = scrollEventID
&#9;&#9;&#9;local up_con
&#9;&#9;&#9;up_con = Connect(MouseDrag.MouseButton1Up, function()
&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;&#9;ResetButtonColor(ScrollUpFrame)
&#9;&#9;&#9;&#9;Disconnect(up_con)
&#9;&#9;&#9;&#9;drag = nil
&#9;&#9;&#9;end)
&#9;&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;&#9;Class:ScrollUp()
&#9;&#9;&#9;wait(.2)
&#9;&#9;&#9;while scrollEventID == current do
&#9;&#9;&#9;&#9;Class:ScrollUp()
&#9;&#9;&#9;&#9;if not Class:CanScrollUp() then break end
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;Connect(ScrollUpFrame.MouseButton1Up, function()
&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;end)

&#9;&#9;if horizontal then
&#9;&#9;&#9;Connect(ScrollBarFrame.MouseButton1Down, function(x,y)
&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;local current = scrollEventID
&#9;&#9;&#9;&#9;local up_con
&#9;&#9;&#9;&#9;up_con = Connect(MouseDrag.MouseButton1Up, function()
&#9;&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;&#9;&#9;ResetButtonColor(ScrollUpFrame)
&#9;&#9;&#9;&#9;&#9;Disconnect(up_con)
&#9;&#9;&#9;&#9;&#9;drag = nil
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;&#9;&#9;if x &gt; ScrollThumbFrame.AbsolutePosition.X then
&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;wait(.2)
&#9;&#9;&#9;&#9;&#9;while scrollEventID == current do
&#9;&#9;&#9;&#9;&#9;&#9;if x &lt; ScrollThumbFrame.AbsolutePosition.X + ScrollThumbFrame.AbsoluteSize.X then break end
&#9;&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;wait(.2)
&#9;&#9;&#9;&#9;&#9;while scrollEventID == current do
&#9;&#9;&#9;&#9;&#9;&#9;if x &gt; ScrollThumbFrame.AbsolutePosition.X then break end
&#9;&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;Connect(ScrollBarFrame.MouseButton1Down, function(x,y)
&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;local current = scrollEventID
&#9;&#9;&#9;&#9;local up_con
&#9;&#9;&#9;&#9;up_con = Connect(MouseDrag.MouseButton1Up, function()
&#9;&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;&#9;&#9;ResetButtonColor(ScrollUpFrame)
&#9;&#9;&#9;&#9;&#9;Disconnect(up_con)
&#9;&#9;&#9;&#9;&#9;drag = nil
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;&#9;&#9;if y &gt; ScrollThumbFrame.AbsolutePosition.Y then
&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;wait(.2)
&#9;&#9;&#9;&#9;&#9;while scrollEventID == current do
&#9;&#9;&#9;&#9;&#9;&#9;if y &lt; ScrollThumbFrame.AbsolutePosition.Y + ScrollThumbFrame.AbsoluteSize.Y then break end
&#9;&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;wait(.2)
&#9;&#9;&#9;&#9;&#9;while scrollEventID == current do
&#9;&#9;&#9;&#9;&#9;&#9;if y &gt; ScrollThumbFrame.AbsolutePosition.Y then break end
&#9;&#9;&#9;&#9;&#9;&#9;Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;end

&#9;&#9;if horizontal then
&#9;&#9;&#9;Connect(ScrollThumbFrame.MouseButton1Down, function(x,y)
&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.X
&#9;&#9;&#9;&#9;local drag_con
&#9;&#9;&#9;&#9;local up_con
&#9;&#9;&#9;&#9;drag_con = Connect(MouseDrag.MouseMoved, function(x,y)
&#9;&#9;&#9;&#9;&#9;local bar_abs_pos = ScrollBarFrame.AbsolutePosition.X
&#9;&#9;&#9;&#9;&#9;local bar_drag = ScrollBarFrame.AbsoluteSize.X - ScrollThumbFrame.AbsoluteSize.X
&#9;&#9;&#9;&#9;&#9;local bar_abs_one = bar_abs_pos + bar_drag
&#9;&#9;&#9;&#9;&#9;x -= mouse_offset
&#9;&#9;&#9;&#9;&#9;x = x &lt; bar_abs_pos and bar_abs_pos or x &gt; bar_abs_one and bar_abs_one or x
&#9;&#9;&#9;&#9;&#9;x -= bar_abs_pos
&#9;&#9;&#9;&#9;&#9;Class:SetScrollPercent(x/(bar_drag))
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;up_con = Connect(MouseDrag.MouseButton1Up, function()
&#9;&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;&#9;&#9;ResetButtonColor(ScrollThumbFrame)
&#9;&#9;&#9;&#9;&#9;Disconnect(drag_con)
&#9;&#9;&#9;&#9;&#9;drag_con = nil
&#9;&#9;&#9;&#9;&#9;Disconnect(up_con)
&#9;&#9;&#9;&#9;&#9;drag = nil
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;Connect(ScrollThumbFrame.MouseButton1Down, function(x,y)
&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.Y
&#9;&#9;&#9;&#9;local drag_con, up_con
&#9;&#9;&#9;&#9;drag_con = Connect(MouseDrag.MouseMoved, function(x,y)
&#9;&#9;&#9;&#9;&#9;local bar_abs_pos = ScrollBarFrame.AbsolutePosition.Y
&#9;&#9;&#9;&#9;&#9;local bar_drag = ScrollBarFrame.AbsoluteSize.Y - ScrollThumbFrame.AbsoluteSize.Y
&#9;&#9;&#9;&#9;&#9;local bar_abs_one = bar_abs_pos + bar_drag
&#9;&#9;&#9;&#9;&#9;y -= mouse_offset
&#9;&#9;&#9;&#9;&#9;y = y &lt; bar_abs_pos and bar_abs_pos or y &gt; bar_abs_one and bar_abs_one or y
&#9;&#9;&#9;&#9;&#9;y -= bar_abs_pos
&#9;&#9;&#9;&#9;&#9;Class:SetScrollPercent(y/(bar_drag))
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;up_con = Connect(MouseDrag.MouseButton1Up, function()
&#9;&#9;&#9;&#9;&#9;scrollEventID = tick()
&#9;&#9;&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;&#9;&#9;ResetButtonColor(ScrollThumbFrame)
&#9;&#9;&#9;&#9;&#9;Disconnect(drag_con)
&#9;&#9;&#9;&#9;&#9;drag_con = nil
&#9;&#9;&#9;&#9;&#9;Disconnect(up_con)
&#9;&#9;&#9;&#9;&#9;drag = nil
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;&#9;end)
&#9;&#9;end

&#9;&#9;function Class:Destroy()
&#9;&#9;&#9;Destroy(ScrollFrame)
&#9;&#9;&#9;Destroy(MouseDrag)
&#9;&#9;&#9;for k in next, Class do
&#9;&#9;&#9;&#9;Class[k] = nil
&#9;&#9;&#9;end
&#9;&#9;&#9;setmetatable(Class, nil)
&#9;&#9;end
&#9;&#9;Update()
&#9;&#9;return Class
&#9;end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Explorer panel

Create(explorerPanel,{
&#9;BackgroundColor3 = GuiColor.Field;
&#9;BorderColor3 = GuiColor.Border;
&#9;Active = true;
})

local SettingsRemote = explorerPanel.Parent:WaitForChild(&quot;SettingsPanel&quot;):WaitForChild(&quot;GetSetting&quot;)
local GetApiRemote = explorerPanel.Parent:WaitForChild(&quot;PropertiesFrame&quot;):WaitForChild(&quot;GetApi&quot;)
local GetAwaitRemote = explorerPanel.Parent:WaitForChild(&quot;PropertiesFrame&quot;):WaitForChild(&quot;GetAwaiting&quot;)
local bindSetAwaiting = explorerPanel.Parent:WaitForChild(&quot;PropertiesFrame&quot;):WaitForChild(&quot;SetAwaiting&quot;)

local SaveInstanceWindow = explorerPanel.Parent:WaitForChild(&quot;SaveInstance&quot;)
local ConfirmationWindow = explorerPanel.Parent:WaitForChild(&quot;Confirmation&quot;)
local CautionWindow = explorerPanel.Parent:WaitForChild(&quot;Caution&quot;)
local TableCautionWindow = explorerPanel.Parent:WaitForChild(&quot;TableCaution&quot;)

local RemoteWindow = explorerPanel.Parent:WaitForChild(&quot;CallRemote&quot;)

local ScriptEditor = explorerPanel.Parent:WaitForChild(&quot;ScriptEditor&quot;)
local ScriptEditorEvent = ScriptEditor:WaitForChild(&quot;OpenScript&quot;)

local CurrentSaveInstanceWindow
local CurrentRemoteWindow

local lastSelectedNode

local DexStorage
local DexStorageMain
local DexStorageEnabled

if saveinstance then DexStorageEnabled = true end

if DexStorageEnabled then
&#9;DexStorage = Instance.new(&quot;Folder&quot;)
&#9;DexStorage.Name = &quot;Dex&quot;
&#9;DexStorageMain = Instance.new(&quot;Folder&quot;,DexStorage)
&#9;DexStorageMain.Name = &quot;DexStorage&quot;
end

local NilStorage
local NilStorageMain
local NilStorageEnabled

if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

if NilStorageEnabled then
&#9;NilStorage = Instance.new(&quot;Folder&quot;)
&#9;NilStorage.Name = &quot;Dex Internal Storage&quot;
&#9;NilStorageMain = Instance.new(&quot;Folder&quot;,NilStorage)
&#9;NilStorageMain.Name = &quot;Nil Instances&quot;
end

local listFrame = Create(&apos;Frame&apos;,{
&#9;Name = &quot;List&quot;;
&#9;BackgroundTransparency = 1;
&#9;ClipsDescendants = true;
&#9;Position = UDim2.new(0,0,0,HEADER_SIZE);
&#9;Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
&#9;Parent = explorerPanel;
})

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
&#9;Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
&#9;Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
&#9;Parent = explorerPanel;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = GUI_SIZE
Create(scrollBarH.GUI,{
&#9;Position = UDim2.new(0,0,1,-GUI_SIZE);
&#9;Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
&#9;Visible = false;
&#9;Parent = explorerPanel;
})

local headerFrame = Create(&apos;Frame&apos;,{
&#9;Name = &quot;Header&quot;;
&#9;BackgroundColor3 = GuiColor.Background;
&#9;BorderColor3 = GuiColor.Border;
&#9;Position = UDim2.new(0,0,0,0);
&#9;Size = UDim2.new(1,0,0,HEADER_SIZE);
&#9;Parent = explorerPanel;
&#9;Create(&apos;TextLabel&apos;,{
&#9;&#9;Text = &quot;Explorer&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;TextColor3 = GuiColor.Text;
&#9;&#9;TextXAlignment = &apos;Left&apos;;
&#9;&#9;Font = FONT;
&#9;&#9;FontSize = FONT_SIZE;
&#9;&#9;Position = UDim2.new(0,4,0,0);
&#9;&#9;Size = UDim2.new(1,-4,0.5,0);
&#9;});
})

local explorerFilter = &#9;Create(&apos;TextBox&apos;,{
&#9;PlaceholderText = &quot;Filter Workspace&quot;;
&#9;PlaceholderColor3 = Color3.new(44/255, 44/255, 44/255);
&#9;Text = &quot;&quot;;
&#9;BackgroundTransparency = 0.8;
&#9;TextColor3 = GuiColor.Text;
&#9;TextXAlignment = &apos;Left&apos;;
&#9;Font = FONT;
&#9;FontSize = FONT_SIZE;
&#9;Position = UDim2.new(0,4,0.5,0);
&#9;Size = UDim2.new(1,-8,0.5,-2);
});
explorerFilter.Parent = headerFrame

SetZIndexOnChanged(explorerPanel)

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
&#9;Font = Enum.Font.Arial,
&#9;Margin = 5,
&#9;Black = Color3_fromRGB(0,0,5),
&#9;Black2 = Color3_fromRGB(24, 24, 29),
&#9;White = Color3_fromRGB(244,244,249),
&#9;WhiteOver = Color3_fromRGB(200,200,205),
&#9;Hover = Color3_fromRGB(2, 128, 149),
&#9;Hover2 = Color3_fromRGB(5, 102, 146)
}

local Row = {
&#9;Font = Styles.Font,
&#9;FontSize = Enum.FontSize.Size14,
&#9;TextXAlignment = Enum.TextXAlignment.Left,
&#9;TextColor = Styles.White,
&#9;TextColorOver = Styles.WhiteOver,
&#9;TextLockedColor = Color3_fromRGB(155,155,160),
&#9;Height = 24,
&#9;BorderColor = Color3_fromRGB(54,54,55),
&#9;BackgroundColor = Styles.Black2,
&#9;BackgroundColorAlternate = Color3_fromRGB(32, 32, 37),
&#9;BackgroundColorMouseover = Color3_fromRGB(40, 40, 45),
&#9;TitleMarginLeft = 15
}

local DropDown = {
&#9;Font = Styles.Font,
&#9;FontSize = Enum.FontSize.Size14,
&#9;TextColor = Color3_fromRGB(255,255,260),
&#9;TextColorOver = Row.TextColorOver,
&#9;TextXAlignment = Enum.TextXAlignment.Left,
&#9;Height = 20,
&#9;BackColor = Styles.Black2,
&#9;BackColorOver = Styles.Hover2,
&#9;BorderColor = Color3_fromRGB(45,45,50),
&#9;BorderSizePixel = 0,
&#9;ArrowColor = Color3_fromRGB(80,80,83),
&#9;ArrowColorOver = Styles.Hover
}

local BrickColors = {
&#9;BoxSize = 13,
&#9;BorderSizePixel = 0,
&#9;BorderColor = Color3_fromRGB(53,53,55),
&#9;FrameColor = Color3_fromRGB(53,53,55),
&#9;Size = 20,
&#9;Padding = 4,
&#9;ColorsPerRow = 8,
&#9;OuterBorder = 1,
&#9;OuterBorderColor = Styles.Black
}

local currentRightClickMenu
local CurrentInsertObjectWindow
local CurrentFunctionCallerWindow

local RbxApi

function ClassCanCreate(IName)
&#9;local success,err = pcall(function() Instance.new(IName) end)
&#9;if err then
&#9;&#9;return false
&#9;else
&#9;&#9;return true
&#9;end
end

function GetClasses()
&#9;if RbxApi == nil then return {} end
&#9;local classTable = {}
&#9;for i,v in pairs(RbxApi.Classes) do
&#9;&#9;if ClassCanCreate(v.Name) then
&#9;&#9;&#9;table.insert(classTable,v.Name)
&#9;&#9;end
&#9;end
&#9;return classTable
end

local function sortAlphabetic(t, property)
&#9;table.sort(t,
&#9;&#9;function(x,y) return x[property] &lt; y[property]
&#9;end)
end

local function FunctionIsHidden(functionData)
&#9;local tags = functionData[&quot;tags&quot;]
&#9;for _,name in pairs(tags) do
&#9;&#9;if name == &quot;deprecated&quot;
&#9;&#9;&#9;or name == &quot;hidden&quot;
&#9;&#9;&#9;or name == &quot;writeonly&quot; then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

local function GetAllFunctions(className)
&#9;local class = RbxApi.Classes[className]
&#9;local functions = {}
&#9;
&#9;if not class then return functions end
&#9;
&#9;while class do
&#9;&#9;if class.Name == &quot;Instance&quot; then break end
&#9;&#9;for _,nextFunction in pairs(class.Functions) do
&#9;&#9;&#9;if not FunctionIsHidden(nextFunction) then
&#9;&#9;&#9;&#9;table.insert(functions, nextFunction)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;class = RbxApi.Classes[class.Superclass]
&#9;end
&#9;
&#9;sortAlphabetic(functions, &quot;Name&quot;)

&#9;return functions
end

function GetFunctions()
&#9;if RbxApi == nil then return {} end
&#9;local List = SelectionVar():Get()
&#9;
&#9;if #List == 0 then return end
&#9;
&#9;local MyObject = List[1]
&#9;
&#9;local functionTable = {}
&#9;for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
&#9;&#9;table.insert(functionTable,v)
&#9;end
&#9;return functionTable
end

function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
&#9;local mouse = game:GetService(&quot;Players&quot;).LocalPlayer:GetMouse()
&#9;local totalSize = explorerPanel.Parent.AbsoluteSize.y
&#9;if #choices == 0 then return end
&#9;
&#9;table.sort(choices, function(a,b) return a &lt; b end)

&#9;local frame = Instance.new(&quot;Frame&quot;)&#9;
&#9;frame.Name = &quot;InsertObject&quot;
&#9;frame.Size = UDim2.new(0, 200, 1, 0)
&#9;frame.BackgroundTransparency = 1
&#9;frame.Active = true
&#9;
&#9;local menu = nil
&#9;local arrow = nil
&#9;local expanded = false
&#9;local margin = DropDown.BorderSizePixel;
&#9;
&#9;--[[
&#9;local button = Instance.new(&quot;TextButton&quot;)
&#9;button.Font = Row.Font
&#9;button.FontSize = Row.FontSize
&#9;button.TextXAlignment = Row.TextXAlignment
&#9;button.BackgroundTransparency = 1
&#9;button.TextColor3 = Row.TextColor
&#9;if readOnly then
&#9;&#9;button.TextColor3 = Row.TextLockedColor
&#9;end
&#9;button.Text = currentChoice
&#9;button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
&#9;button.Position = UDim2.new(0, Styles.Margin, 0, 0)
&#9;button.Parent = frame
&#9;--]]
&#9;
&#9;local function hideMenu()
&#9;&#9;expanded = false
&#9;&#9;--showArrow(DropDown.ArrowColor)
&#9;&#9;if frame then
&#9;&#9;&#9;--frame:Destroy()
&#9;&#9;&#9;CurrentInsertObjectWindow.Visible = false
&#9;&#9;end
&#9;end
&#9;
&#9;local function showMenu()
&#9;&#9;expanded = true
&#9;&#9;menu = Instance.new(&quot;ScrollingFrame&quot;)
&#9;&#9;menu.Size = UDim2.new(0,200,1,0)
&#9;&#9;menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
&#9;&#9;menu.Position = UDim2.new(0, margin, 0, 0)
&#9;&#9;menu.BackgroundTransparency = 0
&#9;&#9;menu.BackgroundColor3 = DropDown.BackColor
&#9;&#9;menu.BorderColor3 = DropDown.BorderColor
&#9;&#9;menu.BorderSizePixel = DropDown.BorderSizePixel
&#9;&#9;menu.TopImage = &quot;rbxasset://textures/blackBkg_square.png&quot;
&#9;&#9;menu.MidImage = &quot;rbxasset://textures/blackBkg_square.png&quot;
&#9;&#9;menu.BottomImage = &quot;rbxasset://textures/blackBkg_square.png&quot;
&#9;&#9;menu.Active = true
&#9;&#9;menu.ZIndex = 5
&#9;&#9;menu.Parent = frame
&#9;&#9;
&#9;&#9;--local parentFrameHeight = script.Parent.List.Size.Y.Offset
&#9;&#9;--local rowHeight = mouse.Y
&#9;&#9;--if (rowHeight + menu.Size.Y.Offset) &gt; parentFrameHeight then
&#9;&#9;--&#9;menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
&#9;&#9;--end
&#9;&#9;&#9;
&#9;&#9;local function choice(name)
&#9;&#9;&#9;onClick(name)
&#9;&#9;&#9;hideMenu()
&#9;&#9;end
&#9;&#9;
&#9;&#9;for i,name in pairs(choices) do
&#9;&#9;&#9;local option = CreateRightClickMenuItem(name, function()
&#9;&#9;&#9;&#9;choice(name)
&#9;&#9;&#9;end,1)
&#9;&#9;&#9;option.Size = UDim2.new(1, 0, 0, 20)
&#9;&#9;&#9;option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
&#9;&#9;&#9;option.ZIndex = menu.ZIndex
&#9;&#9;&#9;option.Parent = menu
&#9;&#9;end
&#9;end
&#9;
&#9;showMenu()
&#9;
&#9;return frame
end

function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
&#9;local mouse = game:GetService(&quot;Players&quot;).LocalPlayer:GetMouse()
&#9;local totalSize = explorerPanel.Parent.AbsoluteSize.y
&#9;if #choices == 0 then return end
&#9;
&#9;table.sort(choices, function(a,b) return a.Name &lt; b.Name end)

&#9;local frame = Instance.new(&quot;Frame&quot;)&#9;
&#9;frame.Name = &quot;InsertObject&quot;
&#9;frame.Size = UDim2.new(0, 200, 1, 0)
&#9;frame.BackgroundTransparency = 1
&#9;frame.Active = true
&#9;
&#9;local menu = nil
&#9;local arrow = nil
&#9;local expanded = false
&#9;local margin = DropDown.BorderSizePixel;
&#9;
&#9;local function hideMenu()
&#9;&#9;expanded = false
&#9;&#9;--showArrow(DropDown.ArrowColor)
&#9;&#9;if frame then
&#9;&#9;&#9;--frame:Destroy()
&#9;&#9;&#9;CurrentInsertObjectWindow.Visible = false
&#9;&#9;end
&#9;end
&#9;
&#9;local function showMenu()
&#9;&#9;expanded = true
&#9;&#9;menu = Instance.new(&quot;ScrollingFrame&quot;)
&#9;&#9;menu.Size = UDim2.new(0,300,1,0)
&#9;&#9;menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
&#9;&#9;menu.Position = UDim2.new(0, margin, 0, 0)
&#9;&#9;menu.BackgroundTransparency = 0
&#9;&#9;menu.BackgroundColor3 = DropDown.BackColor
&#9;&#9;menu.BorderColor3 = DropDown.BorderColor
&#9;&#9;menu.BorderSizePixel = DropDown.BorderSizePixel
&#9;&#9;menu.TopImage = &quot;rbxasset://textures/blackBkg_square.png&quot;
&#9;&#9;menu.MidImage = &quot;rbxasset://textures/blackBkg_square.png&quot;
&#9;&#9;menu.BottomImage = &quot;rbxasset://textures/blackBkg_square.png&quot;
&#9;&#9;menu.Active = true
&#9;&#9;menu.ZIndex = 5
&#9;&#9;menu.Parent = frame
&#9;&#9;
&#9;&#9;--local parentFrameHeight = script.Parent.List.Size.Y.Offset
&#9;&#9;--local rowHeight = mouse.Y
&#9;&#9;--if (rowHeight + menu.Size.Y.Offset) &gt; parentFrameHeight then
&#9;&#9;--&#9;menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
&#9;&#9;--end
&#9;&#9;
&#9;&#9;local function GetParameters(functionData)
&#9;&#9;&#9;local paraString = &quot;&quot;
&#9;&#9;&#9;paraString = paraString..&quot;(&quot;
&#9;&#9;&#9;for i,v in pairs(functionData.Arguments) do
&#9;&#9;&#9;&#9;paraString = paraString..v.Type..&quot; &quot;..v.Name
&#9;&#9;&#9;&#9;if i &lt; #functionData.Arguments then
&#9;&#9;&#9;&#9;&#9;paraString = paraString..&quot;, &quot;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;paraString = paraString..&quot;)&quot;
&#9;&#9;&#9;return paraString
&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;local function choice(name)
&#9;&#9;&#9;onClick(name)
&#9;&#9;&#9;hideMenu()
&#9;&#9;end
&#9;&#9;
&#9;&#9;for i,name in pairs(choices) do
&#9;&#9;&#9;local option = CreateRightClickMenuItem(name.ReturnType..&quot; &quot;..name.Name..GetParameters(name), function()
&#9;&#9;&#9;&#9;choice(name)
&#9;&#9;&#9;end,2)
&#9;&#9;&#9;option.Size = UDim2.new(1, 0, 0, 20)
&#9;&#9;&#9;option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
&#9;&#9;&#9;option.ZIndex = menu.ZIndex
&#9;&#9;&#9;option.Parent = menu
&#9;&#9;end
&#9;end


&#9;showMenu()

&#9;
&#9;return frame
end

function CreateInsertObject()
&#9;if not CurrentInsertObjectWindow then return end
&#9;CurrentInsertObjectWindow.Visible = true
&#9;if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
&#9;&#9;CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-6,0,0)
&#9;end
&#9;if CurrentInsertObjectWindow.Visible then
&#9;&#9;CurrentInsertObjectWindow.Parent = explorerPanel.Parent
&#9;end
end

function CreateFunctionCaller(oh)
&#9;if CurrentFunctionCallerWindow then
&#9;&#9;CurrentFunctionCallerWindow:Destroy()
&#9;&#9;CurrentFunctionCallerWindow = nil
&#9;end
&#9;CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
&#9;&#9;GetFunctions(),
&#9;&#9;&quot;&quot;,
&#9;&#9;false,
&#9;&#9;function(option)
&#9;&#9;&#9;CurrentFunctionCallerWindow:Destroy()
&#9;&#9;&#9;CurrentFunctionCallerWindow = nil
&#9;&#9;&#9;local list = SelectionVar():Get()
&#9;&#9;&#9;for i,v in pairs(list) do
&#9;&#9;&#9;&#9;local rets = {pcall(function() return (v[option.Name](v)) end)}
&#9;&#9;&#9;&#9;table.remove(rets,1)
&#9;&#9;&#9;&#9;pcall(function() print(&quot;Function&quot;, option.Name, &quot;on&quot;, v, &quot;:&quot;, unpack(rets)) end)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;DestroyRightClick()
&#9;&#9;end
&#9;)
&#9;if currentRightClickMenu and CurrentFunctionCallerWindow then
&#9;&#9;CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
&#9;end
&#9;if CurrentFunctionCallerWindow then
&#9;&#9;CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
&#9;end
end

function CreateRightClickMenuItem(text, onClick, insObj)
&#9;local button = Instance.new(&quot;TextButton&quot;)
&#9;button.Font = DropDown.Font
&#9;button.FontSize = DropDown.FontSize
&#9;button.TextColor3 = DropDown.TextColor
&#9;button.BackgroundColor3 = DropDown.BackColor
&#9;button.AutoButtonColor = false
&#9;button.BorderSizePixel = 0
&#9;button.TextTransparency = 1
&#9;button.Active = true
&#9;
&#9;if text then
&#9;&#9;local label = Instance.new(&quot;TextLabel&quot;, button)
&#9;&#9;label.Size = UDim2.new(1, 0, 1, 0)
&#9;&#9;label.Font = DropDown.Font
&#9;&#9;label.FontSize = Enum.FontSize.Size11
&#9;&#9;label.TextColor3 = DropDown.TextColor
&#9;&#9;label.TextXAlignment = DropDown.TextXAlignment
&#9;&#9;label.BackgroundTransparency = 1
&#9;&#9;label.BorderSizePixel = 0
&#9;&#9;label.ZIndex = 5

&#9;&#9;label.Text = text
&#9;&#9;button.Text = text
&#9;&#9;

&#9;&#9;if insObj == 2 then
&#9;&#9;&#9;label.FontSize = Enum.FontSize.Size11
&#9;&#9;&#9;label.Size = UDim2.new(1, -16, 1, 0)
&#9;&#9;&#9;label.Position = UDim2.new(0, 16, 0, 0)
&#9;&#9;else
&#9;&#9;&#9;if insObj == 1 or ExplorerIndex[text] then
&#9;&#9;&#9;&#9;local newIcon = Icon(nil,ExplorerIndex[text] or 0)
&#9;&#9;&#9;&#9;newIcon.Position = UDim2.new(0,2,0,2)
&#9;&#9;&#9;&#9;newIcon.Size = UDim2.new(0,16,0,16)
&#9;&#9;&#9;&#9;newIcon.IconMap.ZIndex = 5
&#9;&#9;&#9;&#9;newIcon.Parent = button
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;label.Size = UDim2.new(1, -32, 1, 0)
&#9;&#9;&#9;label.Position = UDim2.new(0, 32, 0, 0)
&#9;&#9;end
&#9;&#9;
&#9;&#9;
&#9;&#9;button.MouseEnter:Connect(function()
&#9;&#9;&#9;button.TextColor3 = DropDown.TextColorOver
&#9;&#9;&#9;button.BackgroundColor3 = DropDown.BackColorOver
&#9;&#9;&#9;if not insObj and CurrentInsertObjectWindow then
&#9;&#9;&#9;&#9;if CurrentInsertObjectWindow.Visible == false and button.Text == &quot;Insert Object&quot; then
&#9;&#9;&#9;&#9;&#9;CreateInsertObject()
&#9;&#9;&#9;&#9;elseif CurrentInsertObjectWindow.Visible and button.Text ~= &quot;Insert Object&quot; then
&#9;&#9;&#9;&#9;&#9;CurrentInsertObjectWindow.Visible = false
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not insObj then
&#9;&#9;&#9;&#9;if CurrentFunctionCallerWindow and button.Text ~= &quot;Call Function&quot; then
&#9;&#9;&#9;&#9;&#9;CurrentFunctionCallerWindow:Destroy()
&#9;&#9;&#9;&#9;&#9;CurrentFunctionCallerWindow = nil
&#9;&#9;&#9;&#9;elseif button.Text == &quot;Call Function&quot; then
&#9;&#9;&#9;&#9;&#9;CreateFunctionCaller()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;button.MouseLeave:Connect(function()
&#9;&#9;&#9;button.TextColor3 = DropDown.TextColor
&#9;&#9;&#9;button.BackgroundColor3 = DropDown.BackColor
&#9;&#9;end)
&#9;&#9;button.MouseButton1Click:Connect(function()
&#9;&#9;&#9;button.TextColor3 = DropDown.TextColor
&#9;&#9;&#9;button.BackgroundColor3 = DropDown.BackColor
&#9;&#9;&#9;onClick(text)
&#9;&#9;end)&#9;
&#9;else
&#9;&#9;local sep = Instance.new(&quot;Frame&quot;, button)
&#9;&#9;sep.Size = UDim2.new(1, -20, 0, 1)
&#9;&#9;sep.Position = UDim2.new(0, 16, 0, 2)
&#9;&#9;sep.BackgroundColor3 = DropDown.BorderColor
&#9;&#9;sep.BorderSizePixel = 0
&#9;&#9;sep.ZIndex = 5
&#9;end
&#9;
&#9;return button
end

function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
&#9;local mouse = game:GetService(&quot;Players&quot;).LocalPlayer:GetMouse()

&#9;local frame = Instance.new(&quot;TextButton&quot;)&#9;
&#9;frame.Name = &quot;DropDown&quot;
&#9;frame.Size = UDim2.new(0, 200, 0, 0)
&#9;frame.AutoButtonColor = false
&#9;frame.Style = Enum.ButtonStyle.RobloxRoundDropdownButton
&#9;frame.Active = false
&#9;
&#9;local menu = nil
&#9;local arrow = nil
&#9;local expanded = false
&#9;local margin = DropDown.BorderSizePixel;
&#9;
&#9;local function hideMenu()
&#9;&#9;expanded = false
&#9;&#9;if frame then
&#9;&#9;&#9;frame:Destroy()
&#9;&#9;&#9;DestroyRightClick()
&#9;&#9;end
&#9;end
&#9;
&#9;local function showMenu()
&#9;&#9;expanded = true
&#9;&#9;menu = Instance.new(&quot;Frame&quot;)
&#9;&#9;menu.Size = UDim2.new(0, 200, 0, 0)
&#9;&#9;
&#9;&#9;for i,name in pairs(choices) do
&#9;&#9;&#9;if name then
&#9;&#9;&#9;&#9;menu.Size = menu.Size + UDim2.new(0, 0, 0, 20)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;menu.Size = menu.Size + UDim2.new(0, 0, 0, 7)
&#9;&#9;&#9;end&#9;&#9;
&#9;&#9;end
&#9;&#9;
&#9;&#9;frame.Size = menu.Size + UDim2.new(0, 0, 0, 6)
&#9;&#9;
&#9;&#9;menu.Position = UDim2.new(0, -16, 0, -10)
&#9;&#9;menu.BackgroundTransparency = 0
&#9;&#9;menu.BackgroundColor3 = DropDown.BackColor
&#9;&#9;menu.BorderColor3 = DropDown.BorderColor
&#9;&#9;menu.BorderSizePixel = DropDown.BorderSizePixel
&#9;&#9;menu.Active = true
&#9;&#9;menu.ZIndex = 5
&#9;&#9;menu.Parent = frame
&#9;&#9;
&#9;&#9;local function choice(name)
&#9;&#9;&#9;onClick(name)
&#9;&#9;&#9;hideMenu()
&#9;&#9;end
&#9;&#9;
&#9;&#9;local previous&#9;&#9;
&#9;&#9;for i,name in pairs(choices) do
&#9;&#9;&#9;local option = CreateRightClickMenuItem(name, function()
&#9;&#9;&#9;&#9;choice(name)
&#9;&#9;&#9;end)
&#9;&#9;&#9;
&#9;&#9;&#9;if name then
&#9;&#9;&#9;&#9;option.Size = UDim2.new(1, 0, 0, 20)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;option.Size = UDim2.new(1, 0, 0, 7)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if previous then
&#9;&#9;&#9;&#9;option.Position = UDim2.new(0, 0, 0, previous.Position.Height.Offset + previous.Size.Height.Offset)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;option.ZIndex = menu.ZIndex
&#9;&#9;&#9;option.Parent = menu
&#9;&#9;&#9;
&#9;&#9;&#9;previous = option&#9;&#9;&#9;
&#9;&#9;end
&#9;end

&#9;showMenu()
&#9;
&#9;return frame
end

function checkMouseInGui(gui)
&#9;if gui == nil then return false end
&#9;local plrMouse = game:GetService(&quot;Players&quot;).LocalPlayer:GetMouse()
&#9;local guiPosition = gui.AbsolutePosition
&#9;local guiSize = gui.AbsoluteSize&#9;
&#9;
&#9;if plrMouse.X &gt;= guiPosition.x and plrMouse.X &lt;= guiPosition.x + guiSize.x and plrMouse.Y &gt;= guiPosition.y and plrMouse.Y &lt;= guiPosition.y + guiSize.y then
&#9;&#9;return true
&#9;else
&#9;&#9;return false
&#9;end
end

local clipboard = {}
local function delete(o)
&#9;o.Parent = nil
&#9;RemoteEvent:InvokeServer(&quot;Delete&quot;, o)
end

local getTextWidth do
&#9;local text = Create(&apos;TextLabel&apos;,{
&#9;&#9;Name = &quot;TextWidth&quot;;
&#9;&#9;TextXAlignment = &apos;Left&apos;;
&#9;&#9;TextYAlignment = &apos;Center&apos;;
&#9;&#9;Font = FONT;
&#9;&#9;FontSize = FONT_SIZE;
&#9;&#9;Text = &quot;&quot;;
&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;Size = UDim2.new(1,0,1,0);
&#9;&#9;Visible = false;
&#9;&#9;Parent = explorerPanel;
&#9;})
&#9;function getTextWidth(s)
&#9;&#9;text.Text = s
&#9;&#9;return text.TextBounds.x
&#9;end
end

local nameScanned = false
-- Holds the game tree converted to a list.
local TreeList = {}
-- Matches objects to their tree node representation.
local NodeLookup = {}

local nodeWidth = 0

local QuickButtons = {}

function filteringWorkspace()
&#9;if explorerFilter.Text ~= &quot;&quot; and explorerFilter.Text ~= &quot;Filter Workspace&quot; then
&#9;&#9;return true
&#9;end
&#9;return false
end

function lookForAName(obj,name)
&#9;for i,v in pairs(obj:GetChildren()) do
&#9;&#9;if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
&#9;&#9;lookForAName(v,name)
&#9;end
end

function scanName(obj)
&#9;nameScanned = false
&#9;if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
&#9;&#9;nameScanned = true
&#9;else
&#9;&#9;lookForAName(obj,explorerFilter.Text)
&#9;end
&#9;return nameScanned
end

function updateActions()
&#9;for i,v in pairs(QuickButtons) do
&#9;&#9;if v.Cond() then
&#9;&#9;&#9;v.Toggle(true)
&#9;&#9;else
&#9;&#9;&#9;v.Toggle(false)
&#9;&#9;end
&#9;end
end

local updateList,rawUpdateList,updateScroll,rawUpdateSize do
&#9;local function r(t)
&#9;&#9;for i = 1,#t do
&#9;&#9;&#9;if not filteringWorkspace() or scanName(t[i].Object) then
&#9;&#9;&#9;&#9;if t.Object == game then
&#9;&#9;&#9;&#9;&#9;if childrenGame[t[i].Object] then
&#9;&#9;&#9;&#9;&#9;&#9;TreeList[#TreeList+1] = t[i]
&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
&#9;&#9;&#9;&#9;&#9;&#9;if w &gt; nodeWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;nodeWidth = w
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if t[i].Expanded or filteringWorkspace() then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;r(t[i])
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;TreeList[#TreeList+1] = t[i]
&#9;
&#9;&#9;&#9;&#9;&#9;local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
&#9;&#9;&#9;&#9;&#9;if w &gt; nodeWidth then
&#9;&#9;&#9;&#9;&#9;&#9;nodeWidth = w
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if t[i].Expanded or filteringWorkspace() then
&#9;&#9;&#9;&#9;&#9;&#9;r(t[i])
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;function rawUpdateSize()
&#9;&#9;scrollBarH.TotalSpace = nodeWidth
&#9;&#9;scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
&#9;&#9;scrollBarH:Update()
&#9;&#9;local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
&#9;&#9;scrollBarH.GUI.Visible = visible

&#9;&#9;listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

&#9;&#9;scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
&#9;&#9;scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
&#9;&#9;
&#9;&#9;scrollBar.TotalSpace = #TreeList+1
&#9;&#9;scrollBar:Update()
&#9;end

&#9;function rawUpdateList()
&#9;&#9;-- Clear then repopulate the entire list. It appears to be fast enough.
&#9;&#9;TreeList = {}
&#9;&#9;nodeWidth = 0
&#9;&#9;r(NodeLookup[game])
&#9;&#9;r(NodeLookup[DexOutput])
&#9;&#9;if DexStorageEnabled then
&#9;&#9;&#9;r(NodeLookup[DexStorage])
&#9;&#9;end
&#9;&#9;if NilStorageEnabled then
&#9;&#9;&#9;r(NodeLookup[NilStorage])
&#9;&#9;end
&#9;&#9;r(NodeLookup[HiddenEntries])
&#9;&#9;r(NodeLookup[HiddenGame])
&#9;&#9;rawUpdateSize()
&#9;&#9;updateActions()
&#9;end

&#9;-- Adding or removing large models will cause many updates to occur. We
&#9;-- can reduce the number of updates by creating a delay, then dropping any
&#9;-- updates that occur during the delay.
&#9;local updatingList = false
&#9;function updateList()
&#9;&#9;if updatingList then return end
&#9;&#9;updatingList = true
&#9;&#9;wait(0.25)
&#9;&#9;updatingList = false
&#9;&#9;rawUpdateList()
&#9;end

&#9;local updatingScroll = false
&#9;function updateScroll()
&#9;&#9;if updatingScroll then return end
&#9;&#9;updatingScroll = true
&#9;&#9;wait(0.25)
&#9;&#9;updatingScroll = false
&#9;&#9;scrollBar:Update()
&#9;end
end

local Selection do
&#9;local bindGetSelection = explorerPanel:FindFirstChild(&quot;GetSelection&quot;)
&#9;if not bindGetSelection then
&#9;&#9;bindGetSelection = Create(&apos;BindableFunction&apos;,{Name = &quot;GetSelection&quot;})
&#9;&#9;bindGetSelection.Parent = explorerPanel
&#9;end

&#9;local bindSetSelection = explorerPanel:FindFirstChild(&quot;SetSelection&quot;)
&#9;if not bindSetSelection then
&#9;&#9;bindSetSelection = Create(&apos;BindableFunction&apos;,{Name = &quot;SetSelection&quot;})
&#9;&#9;bindSetSelection.Parent = explorerPanel
&#9;end

&#9;local bindSelectionChanged = explorerPanel:FindFirstChild(&quot;SelectionChanged&quot;)
&#9;if not bindSelectionChanged then
&#9;&#9;bindSelectionChanged = Create(&apos;BindableEvent&apos;,{Name = &quot;SelectionChanged&quot;})
&#9;&#9;bindSelectionChanged.Parent = explorerPanel
&#9;end

&#9;local SelectionList = {}
&#9;local SelectionSet = {}
&#9;local Updates = true
&#9;Selection = {
&#9;&#9;Selected = SelectionSet;
&#9;&#9;List = SelectionList;
&#9;}

&#9;local function addObject(object)
&#9;&#9;-- list update
&#9;&#9;local lupdate = false
&#9;&#9;-- scroll update
&#9;&#9;local supdate = false

&#9;&#9;if not SelectionSet[object] then
&#9;&#9;&#9;local node = NodeLookup[object]
&#9;&#9;&#9;if node then
&#9;&#9;&#9;&#9;table.insert(SelectionList,object)
&#9;&#9;&#9;&#9;SelectionSet[object] = true
&#9;&#9;&#9;&#9;node.Selected = true

&#9;&#9;&#9;&#9;-- expand all ancestors so that selected node becomes visible
&#9;&#9;&#9;&#9;node = node.Parent
&#9;&#9;&#9;&#9;while node do
&#9;&#9;&#9;&#9;&#9;if not node.Expanded then
&#9;&#9;&#9;&#9;&#9;&#9;node.Expanded = true
&#9;&#9;&#9;&#9;&#9;&#9;lupdate = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;node = node.Parent
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;supdate = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return lupdate,supdate
&#9;end

&#9;Selection.Finding = false
&#9;Selection.Found = {}
&#9;
&#9;function Selection:Set(objects)
&#9;&#9;if Selection.Finding then
&#9;&#9;&#9;Selection.Found = objects&#9;
&#9;&#9;end
&#9;&#9;
&#9;&#9;local lupdate = false
&#9;&#9;local supdate = false

&#9;&#9;if #SelectionList &gt; 0 then
&#9;&#9;&#9;for i = 1,#SelectionList do
&#9;&#9;&#9;&#9;local object = SelectionList[i]
&#9;&#9;&#9;&#9;local node = NodeLookup[object]
&#9;&#9;&#9;&#9;if node then
&#9;&#9;&#9;&#9;&#9;node.Selected = false
&#9;&#9;&#9;&#9;&#9;SelectionSet[object] = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;SelectionList = {}
&#9;&#9;&#9;Selection.List = SelectionList
&#9;&#9;&#9;supdate = true
&#9;&#9;end

&#9;&#9;for i = 1,#objects do
&#9;&#9;&#9;local l,s = addObject(objects[i])
&#9;&#9;&#9;lupdate = l or lupdate
&#9;&#9;&#9;supdate = s or supdate
&#9;&#9;end

&#9;&#9;if lupdate then
&#9;&#9;&#9;rawUpdateList()
&#9;&#9;&#9;supdate = true
&#9;&#9;elseif supdate then
&#9;&#9;&#9;scrollBar:Update()
&#9;&#9;end

&#9;&#9;if supdate then
&#9;&#9;&#9;bindSelectionChanged:Fire()
&#9;&#9;&#9;updateActions()
&#9;&#9;end
&#9;end

&#9;function Selection:Add(object)
&#9;&#9;local l,s = addObject(object)
&#9;&#9;if l then
&#9;&#9;&#9;rawUpdateList()
&#9;&#9;&#9;if Updates then
&#9;&#9;&#9;&#9;bindSelectionChanged:Fire()
&#9;&#9;&#9;&#9;updateActions()
&#9;&#9;&#9;end
&#9;&#9;elseif s then
&#9;&#9;&#9;scrollBar:Update()
&#9;&#9;&#9;if Updates then
&#9;&#9;&#9;&#9;bindSelectionChanged:Fire()
&#9;&#9;&#9;&#9;updateActions()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;function Selection:StopUpdates()
&#9;&#9;Updates = false
&#9;end
&#9;
&#9;function Selection:ResumeUpdates()
&#9;&#9;Updates = true
&#9;&#9;bindSelectionChanged:Fire()
&#9;&#9;updateActions()
&#9;end

&#9;function Selection:Remove(object,noupdate)
&#9;&#9;if SelectionSet[object] then
&#9;&#9;&#9;local node = NodeLookup[object]
&#9;&#9;&#9;if node then
&#9;&#9;&#9;&#9;node.Selected = false
&#9;&#9;&#9;&#9;SelectionSet[object] = nil
&#9;&#9;&#9;&#9;for i = 1,#SelectionList do
&#9;&#9;&#9;&#9;&#9;if SelectionList[i] == object then
&#9;&#9;&#9;&#9;&#9;&#9;table.remove(SelectionList,i)
&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if not noupdate then
&#9;&#9;&#9;&#9;&#9;scrollBar:Update()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;bindSelectionChanged:Fire()
&#9;&#9;&#9;&#9;updateActions()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;function Selection:Get()
&#9;&#9;local list = {}
&#9;&#9;for i = 1,#SelectionList do
&#9;&#9;&#9;if SelectionList[i] ~= HiddenEntriesMain and SelectionList[i] ~= DexOutputMain then
&#9;&#9;&#9;&#9;table.insert(list, SelectionList[i])
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return list
&#9;end

&#9;bindSetSelection.OnInvoke = function(...)
&#9;&#9;Selection:Set(...)
&#9;end

&#9;bindGetSelection.OnInvoke = function()
&#9;&#9;return Selection:Get()
&#9;end
end

function CreateCaution(title,msg)
&#9;local newCaution = CautionWindow
&#9;newCaution.Visible = true
&#9;newCaution.Title.Text = title
&#9;newCaution.MainWindow.Desc.Text = msg
&#9;newCaution.MainWindow.Ok.MouseButton1Up:Connect(function()
&#9;&#9;newCaution.Visible = false
&#9;end)
end

function CreateTableCaution(title,msg)
&#9;if type(msg) ~= &quot;table&quot; then return CreateCaution(title,tostring(msg)) end
&#9;local newCaution = TableCautionWindow:Clone()
&#9;newCaution.Title.Text = title
&#9;
&#9;local TableList = newCaution.MainWindow.TableResults
&#9;local TableTemplate = newCaution.MainWindow.TableTemplate
&#9;
&#9;for i,v in pairs(msg) do
&#9;&#9;local newResult = TableTemplate:Clone()
&#9;&#9;newResult.Type.Text = type(v)
&#9;&#9;newResult.Value.Text = tostring(v)
&#9;&#9;newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
&#9;&#9;newResult.Parent = TableList
&#9;&#9;TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
&#9;&#9;newResult.Visible = true
&#9;end
&#9;newCaution.Parent = explorerPanel.Parent
&#9;newCaution.Visible = true
&#9;newCaution.MainWindow.Ok.MouseButton1Up:Connect(function()
&#9;&#9;newCaution:Destroy()
&#9;end)
end

local function Split(str, delimiter)
&#9;local start = 1
&#9;local t = {}
&#9;while true do
&#9;&#9;local pos = string.find (str, delimiter, start, true)
&#9;&#9;if not pos then
&#9;&#9;&#9;break
&#9;&#9;end
&#9;&#9;table.insert (t, string.sub (str, start, pos - 1))
&#9;&#9;start = pos + string.len (delimiter)
&#9;end
&#9;table.insert (t, string.sub (str, start))
&#9;return t
end

local function ToValue(value,type)
&#9;if type == &quot;Vector2&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list &lt; 2 then return nil end
&#9;&#9;local x = tonumber(list[1]) or 0
&#9;&#9;local y = tonumber(list[2]) or 0
&#9;&#9;return Vector2.new(x,y)
&#9;elseif type == &quot;Vector3&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list &lt; 3 then return nil end
&#9;&#9;local x = tonumber(list[1]) or 0
&#9;&#9;local y = tonumber(list[2]) or 0
&#9;&#9;local z = tonumber(list[3]) or 0
&#9;&#9;return Vector3.new(x,y,z)
&#9;elseif type == &quot;Color3&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list &lt; 3 then return nil end
&#9;&#9;local r = tonumber(list[1]) or 0
&#9;&#9;local g = tonumber(list[2]) or 0
&#9;&#9;local b = tonumber(list[3]) or 0
&#9;&#9;return Color3.new(r/255,g/255, b/255)
&#9;elseif type == &quot;UDim2&quot; then
&#9;&#9;local list = Split(string.gsub(string.gsub(value, &quot;{&quot;, &quot;&quot;),&quot;}&quot;,&quot;&quot;),&quot;,&quot;)
&#9;&#9;if #list &lt; 4 then return nil end
&#9;&#9;local xScale = tonumber(list[1]) or 0
&#9;&#9;local xOffset = tonumber(list[2]) or 0
&#9;&#9;local yScale = tonumber(list[3]) or 0
&#9;&#9;local yOffset = tonumber(list[4]) or 0
&#9;&#9;return UDim2.new(xScale, xOffset, yScale, yOffset)
&#9;elseif type == &quot;Number&quot; then
&#9;&#9;return tonumber(value)
&#9;elseif type == &quot;String&quot; then
&#9;&#9;return value
&#9;elseif type == &quot;NumberRange&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list == 1 then
&#9;&#9;&#9;if tonumber(list[1]) == nil then return nil end
&#9;&#9;&#9;local newVal = tonumber(list[1]) or 0
&#9;&#9;&#9;return NumberRange.new(newVal)
&#9;&#9;end
&#9;&#9;if #list &lt; 2 then return nil end
&#9;&#9;local x = tonumber(list[1]) or 0
&#9;&#9;local y = tonumber(list[2]) or 0
&#9;&#9;return NumberRange.new(x,y)
&#9;elseif type == &quot;Script&quot; then
&#9;&#9;local success,err = ypcall(function()
&#9;&#9;return loadstring(
&#9;&#9;&#9;&quot;return &quot;..value
&#9;&#9;)()
&#9;&#9;end)
&#9;&#9;if err then
&#9;&#9;&#9;return nil
&#9;&#9;end
&#9;else
&#9;&#9;return nil
&#9;end
end

local function ToPropValue(value,type)
&#9;if type == &quot;Vector2&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list &lt; 2 then return nil end
&#9;&#9;local x = tonumber(list[1]) or 0
&#9;&#9;local y = tonumber(list[2]) or 0
&#9;&#9;return Vector2.new(x,y)
&#9;elseif type == &quot;Vector3&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list &lt; 3 then return nil end
&#9;&#9;local x = tonumber(list[1]) or 0
&#9;&#9;local y = tonumber(list[2]) or 0
&#9;&#9;local z = tonumber(list[3]) or 0
&#9;&#9;return Vector3.new(x,y,z)
&#9;elseif type == &quot;Color3&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list &lt; 3 then return nil end
&#9;&#9;local r = tonumber(list[1]) or 0
&#9;&#9;local g = tonumber(list[2]) or 0
&#9;&#9;local b = tonumber(list[3]) or 0
&#9;&#9;return Color3.new(r/255,g/255, b/255)
&#9;elseif type == &quot;UDim2&quot; then
&#9;&#9;local list = Split(string.gsub(string.gsub(value, &quot;{&quot;, &quot;&quot;),&quot;}&quot;,&quot;&quot;),&quot;,&quot;)
&#9;&#9;if #list &lt; 4 then return nil end
&#9;&#9;local xScale = tonumber(list[1]) or 0
&#9;&#9;local xOffset = tonumber(list[2]) or 0
&#9;&#9;local yScale = tonumber(list[3]) or 0
&#9;&#9;local yOffset = tonumber(list[4]) or 0
&#9;&#9;return UDim2.new(xScale, xOffset, yScale, yOffset)
&#9;elseif type == &quot;Content&quot; then
&#9;&#9;return value
&#9;elseif type == &quot;float&quot; or type == &quot;int&quot; or type == &quot;double&quot; then
&#9;&#9;return tonumber(value)
&#9;elseif type == &quot;string&quot; then
&#9;&#9;return value
&#9;elseif type == &quot;NumberRange&quot; then
&#9;&#9;local list = Split(value,&quot;,&quot;)
&#9;&#9;if #list == 1 then
&#9;&#9;&#9;if tonumber(list[1]) == nil then return nil end
&#9;&#9;&#9;local newVal = tonumber(list[1]) or 0
&#9;&#9;&#9;return NumberRange.new(newVal)
&#9;&#9;end
&#9;&#9;if #list &lt; 2 then return nil end
&#9;&#9;local x = tonumber(list[1]) or 0
&#9;&#9;local y = tonumber(list[2]) or 0
&#9;&#9;return NumberRange.new(x,y)
&#9;elseif string.sub(value,1,4) == &quot;Enum&quot; then
&#9;&#9;local getEnum = value
&#9;&#9;while true do
&#9;&#9;&#9;local x,y = string.find(getEnum,&quot;.&quot;)
&#9;&#9;&#9;if y then
&#9;&#9;&#9;&#9;getEnum = string.sub(getEnum,y+1)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;print(getEnum)
&#9;&#9;return getEnum
&#9;else
&#9;&#9;return nil
&#9;end
end

function PromptRemoteCaller(inst)
&#9;if CurrentRemoteWindow then
&#9;&#9;CurrentRemoteWindow:Destroy()
&#9;&#9;CurrentRemoteWindow = nil
&#9;end
&#9;CurrentRemoteWindow = RemoteWindow:Clone()
&#9;CurrentRemoteWindow.Parent = explorerPanel.Parent
&#9;CurrentRemoteWindow.Visible = true
&#9;
&#9;local displayValues = false
&#9;
&#9;local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
&#9;local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate
&#9;
&#9;if inst:IsA(&quot;RemoteEvent&quot;) then
&#9;&#9;CurrentRemoteWindow.Title.Text = &quot;Fire Event&quot;
&#9;&#9;CurrentRemoteWindow.MainWindow.Ok.Text = &quot;Fire&quot;
&#9;&#9;CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
&#9;&#9;CurrentRemoteWindow.MainWindow.Desc2.Visible = false
&#9;end
&#9;
&#9;local newArgument = ArgumentTemplate:Clone()
&#9;newArgument.Parent = ArgumentList
&#9;newArgument.Visible = true
&#9;newArgument.Type.MouseButton1Down:Connect(function()
&#9;&#9;createDDown(newArgument.Type,function(choice)
&#9;&#9;&#9;newArgument.Type.Text = choice
&#9;&#9;end,&quot;Script&quot;,&quot;Number&quot;,&quot;String&quot;,&quot;Color3&quot;,&quot;Vector3&quot;,&quot;Vector2&quot;,&quot;UDim2&quot;,&quot;NumberRange&quot;)
&#9;end)
&#9;
&#9;CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:Connect(function()
&#9;&#9;if CurrentRemoteWindow and inst.Parent ~= nil then
&#9;&#9;&#9;local MyArguments = {}
&#9;&#9;&#9;for i,v in pairs(ArgumentList:GetChildren()) do
&#9;&#9;&#9;&#9;table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
&#9;&#9;&#9;end
&#9;&#9;&#9;if inst:IsA(&quot;RemoteFunction&quot;) then
&#9;&#9;&#9;&#9;if displayValues then
&#9;&#9;&#9;&#9;&#9;spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;local myResults = inst:InvokeServer(unpack(MyArguments))
&#9;&#9;&#9;&#9;&#9;&#9;if myResults then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CreateTableCaution(&quot;Remote Caller&quot;,myResults)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CreateCaution(&quot;Remote Caller&quot;,&quot;This remote did not return anything.&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;inst:InvokeServer(unpack(MyArguments))
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;inst:FireServer(unpack(MyArguments))
&#9;&#9;&#9;end
&#9;&#9;&#9;CurrentRemoteWindow:Destroy()
&#9;&#9;&#9;CurrentRemoteWindow = nil
&#9;&#9;end
&#9;end)
&#9;
&#9;CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:Connect(function()
&#9;&#9;if CurrentRemoteWindow then
&#9;&#9;&#9;local newArgument = ArgumentTemplate:Clone()
&#9;&#9;&#9;newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
&#9;&#9;&#9;newArgument.Parent = ArgumentList
&#9;&#9;&#9;ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
&#9;&#9;&#9;newArgument.Visible = true
&#9;&#9;&#9;newArgument.Type.MouseButton1Down:Connect(function()
&#9;&#9;&#9;&#9;createDDown(newArgument.Type,function(choice)
&#9;&#9;&#9;&#9;&#9;newArgument.Type.Text = choice
&#9;&#9;&#9;&#9;end,&quot;Script&quot;,&quot;Number&quot;,&quot;String&quot;,&quot;Color3&quot;,&quot;Vector3&quot;,&quot;Vector2&quot;,&quot;UDim2&quot;,&quot;NumberRange&quot;)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
&#9;
&#9;CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:Connect(function()
&#9;&#9;if CurrentRemoteWindow then
&#9;&#9;&#9;if #ArgumentList:GetChildren() &gt; 1 then
&#9;&#9;&#9;&#9;ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
&#9;&#9;&#9;&#9;ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
&#9;CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:Connect(function()
&#9;&#9;if CurrentRemoteWindow then
&#9;&#9;&#9;CurrentRemoteWindow:Destroy()
&#9;&#9;&#9;CurrentRemoteWindow = nil
&#9;&#9;end
&#9;end)
&#9;
&#9;CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:Connect(function()
&#9;&#9;if displayValues then
&#9;&#9;&#9;displayValues = false
&#9;&#9;&#9;CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
&#9;&#9;else
&#9;&#9;&#9;displayValues = true
&#9;&#9;&#9;CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
&#9;&#9;end
&#9;end)
end

function PromptSaveInstance(inst)
&#9;if CurrentSaveInstanceWindow then
&#9;&#9;CurrentSaveInstanceWindow:Destroy()
&#9;&#9;CurrentSaveInstanceWindow = nil
&#9;&#9;if explorerPanel.Parent:FindFirstChild(&quot;SaveInstanceOverwriteCaution&quot;) then
&#9;&#9;&#9;explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
&#9;&#9;end
&#9;end
&#9;
&#9;CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
&#9;CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
&#9;CurrentSaveInstanceWindow.Visible = true
&#9;
&#9;local filename = CurrentSaveInstanceWindow.MainWindow.FileName
&#9;local saveObjects = true
&#9;local overwriteCaution = false
&#9;
&#9;CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:Connect(function()
&#9;&#9;if readfile then
&#9;&#9;&#9;if readfile(filename.Text..&quot;.rbxmx&quot;) then
&#9;&#9;&#9;&#9;if not overwriteCaution then
&#9;&#9;&#9;&#9;&#9;overwriteCaution = true
&#9;&#9;&#9;&#9;&#9;local newCaution = ConfirmationWindow:Clone()
&#9;&#9;&#9;&#9;&#9;newCaution.Name = &quot;SaveInstanceOverwriteCaution&quot;
&#9;&#9;&#9;&#9;&#9;newCaution.MainWindow.Desc.Text = &quot;The file, &quot;..filename.Text..&quot;.rbxmx, already exists. Overwrite?&quot;
&#9;&#9;&#9;&#9;&#9;newCaution.Parent = explorerPanel.Parent
&#9;&#9;&#9;&#9;&#9;newCaution.Visible = true
&#9;&#9;&#9;&#9;&#9;newCaution.MainWindow.Yes.MouseButton1Up:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;ypcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;SaveInstance(inst,filename.Text..&quot;.rbxmx&quot;,not saveObjects)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;overwriteCaution = false
&#9;&#9;&#9;&#9;&#9;&#9;newCaution:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;if CurrentSaveInstanceWindow then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentSaveInstanceWindow:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentSaveInstanceWindow = nil
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;newCaution.MainWindow.No.MouseButton1Up:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;overwriteCaution = false
&#9;&#9;&#9;&#9;&#9;&#9;newCaution:Destroy()
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;ypcall(function()
&#9;&#9;&#9;&#9;&#9;SaveInstance(inst,filename.Text..&quot;.rbxmx&quot;,not saveObjects)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;if CurrentSaveInstanceWindow then
&#9;&#9;&#9;&#9;&#9;CurrentSaveInstanceWindow:Destroy()
&#9;&#9;&#9;&#9;&#9;CurrentSaveInstanceWindow = nil
&#9;&#9;&#9;&#9;&#9;if explorerPanel.Parent:FindFirstChild(&quot;SaveInstanceOverwriteCaution&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;ypcall(function()
&#9;&#9;&#9;&#9;if SaveInstance then
&#9;&#9;&#9;&#9;&#9;SaveInstance(inst,filename.Text..&quot;.rbxmx&quot;,not saveObjects)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;_G.SaveInstance(inst,filename.Text,not saveObjects)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;if CurrentSaveInstanceWindow then
&#9;&#9;&#9;&#9;CurrentSaveInstanceWindow:Destroy()
&#9;&#9;&#9;&#9;CurrentSaveInstanceWindow = nil
&#9;&#9;&#9;&#9;if explorerPanel.Parent:FindFirstChild(&quot;SaveInstanceOverwriteCaution&quot;) then
&#9;&#9;&#9;&#9;&#9;explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:Connect(function()
&#9;&#9;if CurrentSaveInstanceWindow then
&#9;&#9;&#9;CurrentSaveInstanceWindow:Destroy()
&#9;&#9;&#9;CurrentSaveInstanceWindow = nil
&#9;&#9;&#9;if explorerPanel.Parent:FindFirstChild(&quot;SaveInstanceOverwriteCaution&quot;) then
&#9;&#9;&#9;&#9;explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:Connect(function()
&#9;&#9;if saveObjects then
&#9;&#9;&#9;saveObjects = false
&#9;&#9;&#9;CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
&#9;&#9;else
&#9;&#9;&#9;saveObjects = true
&#9;&#9;&#9;CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
&#9;&#9;end
&#9;end)
end

function DestroyRightClick()
&#9;if currentRightClickMenu then
&#9;&#9;currentRightClickMenu:Destroy()
&#9;&#9;currentRightClickMenu = nil
&#9;end
&#9;if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
&#9;&#9;CurrentInsertObjectWindow.Visible = false
&#9;end
end

function rightClickMenu(sObj)
&#9;local mouse = game:GetService(&quot;Players&quot;).LocalPlayer:GetMouse()
&#9;
&#9;currentRightClickMenu = CreateRightClickMenu(
&#9;&#9;{&quot;Cut&quot;,&quot;Copy&quot;,&quot;Paste Into&quot;,&quot;Duplicate&quot;,&quot;Delete&quot;,false,&quot;Group&quot;,&quot;Ungroup&quot;,&quot;Select Children&quot;,false,&quot;Teleport To&quot;,&quot;Call Function&quot;,&quot;Call Remote&quot;,false,&quot;Insert Part&quot;,&quot;Insert Object&quot;,&quot;Save to File...&quot;,false,&quot;View Script&quot;},
&#9;&#9;&quot;&quot;,
&#9;&#9;false,
&#9;&#9;function(option)
&#9;&#9;&#9;if option == &quot;Cut&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;clipboard = {}
&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;ClearClipboard&quot;)
&#9;&#9;&#9;&#9;local list = Selection.List
&#9;&#9;&#9;&#9;local cut = {}
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;local _, obj = pcall(function() return list[i]:Clone() end)
&#9;&#9;&#9;&#9;&#9;if obj then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(clipboard,obj)
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(cut,list[i])
&#9;&#9;&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;Copy&quot;, list[i])
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;for i = 1,#cut do
&#9;&#9;&#9;&#9;&#9;pcall(delete,cut[i])
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;updateActions()
&#9;&#9;&#9;elseif option == &quot;Copy&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;clipboard = {}
&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;ClearClipboard&quot;)
&#9;&#9;&#9;&#9;local list = Selection.List
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;local _, obj = pcall(function() return list[i]:Clone() end)
&#9;&#9;&#9;&#9;&#9;if obj then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(clipboard,obj)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;Copy&quot;, list[i])
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;updateActions()
&#9;&#9;&#9;elseif option == &quot;Paste Into&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local parent = Selection.List[1] or workspace
&#9;&#9;&#9;&#9;if not RemoteEvent:InvokeServer(&quot;Paste&quot;, parent) then
&#9;&#9;&#9;&#9;&#9;for i = 1,#clipboard do
&#9;&#9;&#9;&#9;&#9;&#9;if (clipboard[i]) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;clipboard[i]:Clone().Parent = parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;Duplicate&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;local parent = Selection.List[1].Parent or workspace;
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;if not RemoteEvent:InvokeServer(&quot;Duplicate&quot;, list[i], parent) then -- scel was here again hi
&#9;&#9;&#9;&#9;&#9;&#9;local _, obj = pcall(function() return list[i]:Clone() end)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if obj then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;obj.Parent = parent;
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;Delete&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;pcall(delete,list[i])
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Selection:Set({})
&#9;&#9;&#9;elseif option == &quot;Group&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local parent = Selection.List[1].Parent or workspace
&#9;&#9;&#9;&#9;local newModel = RemoteEvent:InvokeServer(&quot;InstanceNew&quot;, &quot;Model&quot;, {Parent = parent}) or Instance.new(&quot;Model&quot;)
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;newModel.Parent = parent
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;list[i].Parent = newModel
&#9;&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;SetProperty&quot;, list[i], &quot;Parent&quot;, newModel)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Selection:Set({})
&#9;&#9;&#9;elseif option == &quot;Ungroup&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local ungrouped = {}
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;if list[i]:IsA(&quot;Model&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;for i2,v2 in pairs(list[i]:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v2.Parent = list[i].Parent or workspace
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(ungrouped,v2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;SetProperty&quot;, v2, &quot;Parent&quot;, list[i].Parent or workspace)
&#9;&#9;&#9;&#9;&#9;&#9;end&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;pcall(delete,list[i])&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Selection:Set({})
&#9;&#9;&#9;&#9;if SettingsRemote:Invoke(&quot;SelectUngrouped&quot;) then
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(ungrouped) do
&#9;&#9;&#9;&#9;&#9;&#9;Selection:Add(v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;Select Children&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;Selection:Set({})
&#9;&#9;&#9;&#9;Selection:StopUpdates()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;for i2,v2 in pairs(list[i]:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;Selection:Add(v2)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Selection:ResumeUpdates()
&#9;&#9;&#9;elseif option == &quot;Teleport To&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;if list[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;game:GetService(&quot;Players&quot;).LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;Insert Part&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local insertedParts = {}
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;local props = {}
&#9;&#9;&#9;&#9;&#9;&#9;props.Parent = list[i]
&#9;&#9;&#9;&#9;&#9;&#9;props.CFrame = CFrame.new(game:GetService(&quot;Players&quot;).LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local newPart = RemoteEvent:InvokeServer(&quot;InstanceNew&quot;, &quot;Part&quot;, props) or Instance.new(&quot;Part&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;newPart.Parent = props.Parent;
&#9;&#9;&#9;&#9;&#9;&#9;newPart.CFrame = props.CFrame;
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(insertedParts,newPart)
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;Save to File...&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;if #list == 1 then
&#9;&#9;&#9;&#9;&#9;list[1].Archivable = true
&#9;&#9;&#9;&#9;&#9;ypcall(function()SaveInstance(list[1],tostring(list[1]) .. tick())end)
&#9;&#9;&#9;&#9;elseif #list &gt; 1 then
&#9;&#9;&#9;&#9;&#9;local newModel = Instance.new(&quot;Model&quot;)
&#9;&#9;&#9;&#9;&#9;newModel.Name = &quot;SavedInstances&quot;
&#9;&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;&#9;ypcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;list[i].Archivable = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;list[i]:Clone().Parent = newModel
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ypcall(function()SaveInstance(newModel,&quot;SavedInstances&quot; .. tick())end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;Call Remote&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;if list[i]:IsA(&quot;RemoteFunction&quot;) or list[i]:IsA(&quot;RemoteEvent&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;PromptRemoteCaller(list[i])
&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif option == &quot;View Script&quot; then
&#9;&#9;&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;&#9;&#9;local list = Selection:Get()
&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;if list[i]:IsA(&quot;LocalScript&quot;) or list[i]:IsA(&quot;ModuleScript&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;ScriptEditorEvent:Fire(list[i])
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;end)
&#9;currentRightClickMenu.Parent = explorerPanel.Parent
&#9;currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
&#9;if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X &gt; explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
&#9;&#9;currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
&#9;end
end

local function cancelReparentDrag()end
local function cancelSelectDrag()end
do
&#9;local listEntries = {}
&#9;local nameConnLookup = {}

&#9;local mouseDrag = Create(&apos;ImageButton&apos;,{
&#9;&#9;Name = &quot;MouseDrag&quot;;
&#9;&#9;Position = UDim2.new(-0.25,0,-0.25,0);
&#9;&#9;Size = UDim2.new(1.5,0,1.5,0);
&#9;&#9;Transparency = 1;
&#9;&#9;AutoButtonColor = false;
&#9;&#9;Active = true;
&#9;&#9;ZIndex = 10;
&#9;})
&#9;local function dragSelect(last,add,button)
&#9;&#9;local connDrag
&#9;&#9;local conUp

&#9;&#9;conDrag = mouseDrag.MouseMoved:Connect(function(x,y)
&#9;&#9;&#9;local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
&#9;&#9;&#9;local size = listFrame.AbsoluteSize
&#9;&#9;&#9;if pos.x &lt; 0 or pos.x &gt; size.x or pos.y &lt; 0 or pos.y &gt; size.y then return end

&#9;&#9;&#9;local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
&#9;&#9;&#9;-- Mouse may have made a large step, so interpolate between the
&#9;&#9;&#9;-- last index and the current.
&#9;&#9;&#9;for n = i&lt;last and i or last, i&gt;last and i or last do
&#9;&#9;&#9;&#9;local node = TreeList[n]
&#9;&#9;&#9;&#9;if node then
&#9;&#9;&#9;&#9;&#9;if add then
&#9;&#9;&#9;&#9;&#9;&#9;Selection:Add(node.Object)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Selection:Remove(node.Object)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;last = i
&#9;&#9;end)

&#9;&#9;function cancelSelectDrag()
&#9;&#9;&#9;mouseDrag.Parent = nil
&#9;&#9;&#9;conDrag:Disconnect()
&#9;&#9;&#9;conUp:Disconnect()
&#9;&#9;&#9;function cancelSelectDrag()end
&#9;&#9;end

&#9;&#9;conUp = mouseDrag[button]:Connect(cancelSelectDrag)

&#9;&#9;mouseDrag.Parent = GetScreen(listFrame)
&#9;end

&#9;local function dragReparent(object,dragGhost,clickPos,ghostOffset)
&#9;&#9;local connDrag
&#9;&#9;local conUp
&#9;&#9;local conUp2

&#9;&#9;local parentIndex = nil
&#9;&#9;local dragged = false

&#9;&#9;local parentHighlight = Create(&apos;Frame&apos;,{
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;Visible = false;
&#9;&#9;&#9;Create(&apos;Frame&apos;,{
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.1;
&#9;&#9;&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;&#9;&#9;Size = UDim2.new(1,0,0,1);
&#9;&#9;&#9;});
&#9;&#9;&#9;Create(&apos;Frame&apos;,{
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.1;
&#9;&#9;&#9;&#9;Position = UDim2.new(1,0,0,0);
&#9;&#9;&#9;&#9;Size = UDim2.new(0,1,1,0);
&#9;&#9;&#9;});
&#9;&#9;&#9;Create(&apos;Frame&apos;,{
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.1;
&#9;&#9;&#9;&#9;Position = UDim2.new(0,0,1,0);
&#9;&#9;&#9;&#9;Size = UDim2.new(1,0,0,1);
&#9;&#9;&#9;});
&#9;&#9;&#9;Create(&apos;Frame&apos;,{
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.1;
&#9;&#9;&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;&#9;&#9;Size = UDim2.new(0,1,1,0);
&#9;&#9;&#9;});
&#9;&#9;})
&#9;&#9;SetZIndex(parentHighlight,9)

&#9;&#9;conDrag = mouseDrag.MouseMoved:Connect(function(x,y)
&#9;&#9;&#9;local dragPos = Vector2.new(x,y)
&#9;&#9;&#9;if dragged then
&#9;&#9;&#9;&#9;local pos = dragPos - listFrame.AbsolutePosition
&#9;&#9;&#9;&#9;local size = listFrame.AbsoluteSize

&#9;&#9;&#9;&#9;parentIndex = nil
&#9;&#9;&#9;&#9;parentHighlight.Visible = false
&#9;&#9;&#9;&#9;if pos.x &gt;= 0 and pos.x &lt;= size.x and pos.y &gt;= 0 and pos.y &lt;= size.y + ENTRY_SIZE*2 then
&#9;&#9;&#9;&#9;&#9;local i = math.ceil(pos.y/ENTRY_BOUND-2)
&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + scrollBar.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
&#9;&#9;&#9;&#9;&#9;&#9;parentIndex = i
&#9;&#9;&#9;&#9;&#9;&#9;local entry = listEntries[i]
&#9;&#9;&#9;&#9;&#9;&#9;if entry then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentHighlight.Visible = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
&#9;&#9;&#9;elseif (clickPos-dragPos).Magnitude &gt; 8 then
&#9;&#9;&#9;&#9;dragged = true
&#9;&#9;&#9;&#9;SetZIndex(dragGhost,9)
&#9;&#9;&#9;&#9;dragGhost.IndentFrame.Transparency = 0.25
&#9;&#9;&#9;&#9;dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
&#9;&#9;&#9;&#9;dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
&#9;&#9;&#9;&#9;dragGhost.Parent = GetScreen(listFrame)
&#9;&#9;&#9;&#9;parentHighlight.Parent = listFrame
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;function cancelReparentDrag()
&#9;&#9;&#9;mouseDrag.Parent = nil
&#9;&#9;&#9;conDrag:Disconnect()
&#9;&#9;&#9;conUp:Disconnect()
&#9;&#9;&#9;conUp2:Disconnect()
&#9;&#9;&#9;dragGhost:Destroy()
&#9;&#9;&#9;parentHighlight:Destroy()
&#9;&#9;&#9;function cancelReparentDrag()end
&#9;&#9;end

&#9;&#9;local wasSelected = Selection.Selected[object]
&#9;&#9;if not wasSelected and Option.Selectable then
&#9;&#9;&#9;Selection:Set({object})
&#9;&#9;end

&#9;&#9;conUp = mouseDrag.MouseButton1Up:Connect(function()
&#9;&#9;&#9;cancelReparentDrag()
&#9;&#9;&#9;if dragged then
&#9;&#9;&#9;&#9;if parentIndex then
&#9;&#9;&#9;&#9;&#9;local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;if parentNode then
&#9;&#9;&#9;&#9;&#9;&#9;parentNode.Expanded = true

&#9;&#9;&#9;&#9;&#9;&#9;local parentObj = parentNode.Object
&#9;&#9;&#9;&#9;&#9;&#9;local function parent(a,b)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;a.Parent = b
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if Option.Selectable then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local list = Selection.List
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pcall(parent,list[i],parentObj)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;pcall(parent,object,parentObj)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- do selection click
&#9;&#9;&#9;&#9;if wasSelected and Option.Selectable then
&#9;&#9;&#9;&#9;&#9;Selection:Set({})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;conUp2 = mouseDrag.MouseButton2Down:Connect(function()
&#9;&#9;&#9;cancelReparentDrag()
&#9;&#9;end)

&#9;&#9;mouseDrag.Parent = GetScreen(listFrame)
&#9;end

&#9;local entryTemplate = Create(&apos;ImageButton&apos;,{
&#9;&#9;Name = &quot;Entry&quot;;
&#9;&#9;Transparency = 1;
&#9;&#9;AutoButtonColor = false;
&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;Size = UDim2.new(1,0,0,ENTRY_SIZE);
&#9;&#9;Create(&apos;Frame&apos;,{
&#9;&#9;&#9;Name = &quot;IndentFrame&quot;;
&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;BackgroundColor3 = GuiColor.Selected;
&#9;&#9;&#9;BorderColor3 = GuiColor.BorderSelected;
&#9;&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;&#9;Size = UDim2.new(1,0,1,0);
&#9;&#9;&#9;Create(Icon(&apos;ImageButton&apos;,0),{
&#9;&#9;&#9;&#9;Name = &quot;Expand&quot;;
&#9;&#9;&#9;&#9;AutoButtonColor = false;
&#9;&#9;&#9;&#9;Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
&#9;&#9;&#9;&#9;Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
&#9;&#9;&#9;});
&#9;&#9;&#9;Create(Icon(nil,0),{
&#9;&#9;&#9;&#9;Name = &quot;ExplorerIcon&quot;;
&#9;&#9;&#9;&#9;Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
&#9;&#9;&#9;&#9;Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
&#9;&#9;&#9;});
&#9;&#9;&#9;Create(&apos;TextLabel&apos;,{
&#9;&#9;&#9;&#9;Name = &quot;EntryText&quot;;
&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;TextColor3 = GuiColor.Text;
&#9;&#9;&#9;&#9;TextXAlignment = &apos;Left&apos;;
&#9;&#9;&#9;&#9;TextYAlignment = &apos;Center&apos;;
&#9;&#9;&#9;&#9;Font = FONT;
&#9;&#9;&#9;&#9;FontSize = FONT_SIZE;
&#9;&#9;&#9;&#9;Text = &quot;&quot;;
&#9;&#9;&#9;&#9;Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
&#9;&#9;&#9;&#9;Size = UDim2.new(1,-2,1,0);
&#9;&#9;&#9;});
&#9;&#9;});
&#9;})

&#9;function scrollBar.UpdateCallback(self)
&#9;&#9;for i = 1,self.VisibleSpace do
&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;if node then
&#9;&#9;&#9;&#9;local entry = listEntries[i]
&#9;&#9;&#9;&#9;if not entry then
&#9;&#9;&#9;&#9;&#9;entry = Create(entryTemplate:Clone(),{
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
&#9;&#9;&#9;&#9;&#9;&#9;ZIndex = listFrame.ZIndex;
&#9;&#9;&#9;&#9;&#9;})
&#9;&#9;&#9;&#9;&#9;listEntries[i] = entry

&#9;&#9;&#9;&#9;&#9;local expand = entry.IndentFrame.Expand
&#9;&#9;&#9;&#9;&#9;&#9;expand.MouseEnter:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;&#9;if #node &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.Object ~= HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.Expanded then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_EXPANDED_OVER)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_COLLAPSED_OVER)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.HiddenExpanded then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_EXPANDED_OVER)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_COLLAPSED_OVER)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;expand.MouseLeave:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.Object == HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.HiddenExpanded then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_EXPANDED)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_COLLAPSED)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if #node &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.Expanded then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_EXPANDED)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon(expand,NODE_COLLAPSED)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local function radd(o,refresh,parent)&#9;
&#9;&#9;&#9;&#9;&#9;&#9;addObject(o,refresh,parent)&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local s,children = pcall(function() return o:GetChildren() end, o)
&#9;&#9;&#9;&#9;&#9;&#9;if s then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1,#children do&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;radd(children[i],refresh,o)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;expand.MouseButton1Down:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;&#9;if #node &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.Object ~= HiddenEntriesMain then&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;node.Expanded = not node.Expanded
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not MuteHiddenItems then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;NodeLookup[HiddenGame] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Object = HiddenGame;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Parent = nil;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Index = 0;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Expanded = true;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i,v in pairs(game:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not childrenGame[v] then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;radd(v, true, HiddenGame)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;MuteHiddenItems = not MuteHiddenItems
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;node.HiddenExpanded = not node.HiddenExpanded
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if node.Object == explorerPanel.Parent and node.Expanded then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CreateCaution(&quot;Warning&quot;, &quot;Modifying the contents of this Instance could cause erratic or unstable behavior. Proceed with caution.&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- use raw update so the list updates instantly
&#9;&#9;&#9;&#9;&#9;&#9;&#9;rawUpdateList()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;&#9;entry.MouseButton1Down:Connect(function(x,y)
&#9;&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;&#9;DestroyRightClick()
&#9;&#9;&#9;&#9;&#9;&#9;if GetAwaitRemote:Invoke() then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;bindSetAwaiting:Fire(node.Object)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if node.Object == HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if not HoldingShift then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;lastSelectedNode = i + self.ScrollIndex
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if HoldingShift and not filteringWorkspace() then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if lastSelectedNode then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if i + self.ScrollIndex - lastSelectedNode &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:StopUpdates()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newNode = TreeList[lastSelectedNode + i2]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if newNode then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Add(newNode.Object)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:ResumeUpdates()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:StopUpdates()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newNode = TreeList[lastSelectedNode + i2]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if newNode then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Add(newNode.Object)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:ResumeUpdates()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if HoldingCtrl then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Selection.Selected[node.Object] then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Remove(node.Object)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Add(node.Object)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if Option.Modifiable then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local pos = Vector2.new(x,y)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
&#9;&#9;&#9;&#9;&#9;&#9;elseif Option.Selectable then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Selection.Selected[node.Object] then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Set({})
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Set({node.Object})
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;dragSelect(i+self.ScrollIndex,true,&apos;MouseButton1Up&apos;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;&#9;entry.MouseButton2Down:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;if not Option.Selectable then return end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;DestroyRightClick()
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;curSelect = entry
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if node.Object == HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if GetAwaitRemote:Invoke() then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;bindSetAwaiting:Fire(node.Object)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if not Selection.Selected[node.Object] then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:Set({node.Object})
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;entry.MouseButton2Up:Connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;if not Option.Selectable then return end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local node = TreeList[i + self.ScrollIndex]
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if node.Object == HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if checkMouseInGui(curSelect) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;rightClickMenu(node.Object)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;&#9;entry.Parent = listFrame
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;entry.Visible = true

&#9;&#9;&#9;&#9;local object = node.Object

&#9;&#9;&#9;&#9;-- update expand icon
&#9;&#9;&#9;&#9;if node.Object ~= HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;if #node == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.Expand.Visible = false
&#9;&#9;&#9;&#9;&#9;elseif node.Expanded then
&#9;&#9;&#9;&#9;&#9;&#9;Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
&#9;&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.Expand.Visible = true
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
&#9;&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.Expand.Visible = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if node.HiddenExpanded then
&#9;&#9;&#9;&#9;&#9;&#9;Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
&#9;&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.Expand.Visible = true
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
&#9;&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.Expand.Visible = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;-- update explorer icon
&#9;&#9;&#9;&#9;if object ~= HiddenEntriesMain then
&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.EntryText.Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.ExplorerIcon.Visible = true
&#9;&#9;&#9;&#9;&#9;Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.EntryText.Position = UDim2.new(0,0,0,0);
&#9;&#9;&#9;&#9;&#9;entry.IndentFrame.ExplorerIcon.Visible = false
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;-- update indentation
&#9;&#9;&#9;&#9;local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
&#9;&#9;&#9;&#9;entry.IndentFrame.Position = UDim2.new(0,w,0,0)
&#9;&#9;&#9;&#9;entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

&#9;&#9;&#9;&#9;-- update hidden entries name
&#9;&#9;&#9;&#9;NameHiddenEntries()
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;-- update name change detection
&#9;&#9;&#9;&#9;if nameConnLookup[entry] then
&#9;&#9;&#9;&#9;&#9;nameConnLookup[entry]:Disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local text = entry.IndentFrame.EntryText
&#9;&#9;&#9;&#9;text.Text = object.Name
&#9;&#9;&#9;&#9;nameConnLookup[entry] = node.Object.Changed:Connect(function(p)
&#9;&#9;&#9;&#9;&#9;if p == &apos;Name&apos; then
&#9;&#9;&#9;&#9;&#9;&#9;text.Text = object.Name
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;-- update selection
&#9;&#9;&#9;&#9;entry.IndentFrame.Transparency = node.Selected and 0 or 1
&#9;&#9;&#9;&#9;text.TextColor3 = GuiColor[node.Selected and &apos;TextSelected&apos; or &apos;Text&apos;]

&#9;&#9;&#9;&#9;entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
&#9;&#9;&#9;elseif listEntries[i] then
&#9;&#9;&#9;&#9;listEntries[i].Visible = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for i = self.VisibleSpace+1,self.TotalSpace do
&#9;&#9;&#9;local entry = listEntries[i]
&#9;&#9;&#9;if entry then
&#9;&#9;&#9;&#9;listEntries[i] = nil
&#9;&#9;&#9;&#9;entry:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;function scrollBarH.UpdateCallback(self)
&#9;&#9;for i = 1,scrollBar.VisibleSpace do
&#9;&#9;&#9;local node = TreeList[i + scrollBar.ScrollIndex]
&#9;&#9;&#9;if node then
&#9;&#9;&#9;&#9;local entry = listEntries[i]
&#9;&#9;&#9;&#9;if entry then
&#9;&#9;&#9;&#9;&#9;entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;Connect(listFrame.Changed,function(p)
&#9;&#9;if p == &apos;AbsoluteSize&apos; then
&#9;&#9;&#9;rawUpdateSize()
&#9;&#9;end
&#9;end)

&#9;local wheelAmount = 6
&#9;explorerPanel.MouseWheelForward:Connect(function()
&#9;&#9;if scrollBar.VisibleSpace - 1 &gt; wheelAmount then
&#9;&#9;&#9;scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
&#9;&#9;else
&#9;&#9;&#9;scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
&#9;&#9;end
&#9;end)
&#9;explorerPanel.MouseWheelBackward:Connect(function()
&#9;&#9;if scrollBar.VisibleSpace - 1 &gt; wheelAmount then
&#9;&#9;&#9;scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
&#9;&#9;else
&#9;&#9;&#9;scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
&#9;&#9;end
&#9;end)
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Object detection

-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
local function insert(t,i,v)
&#9;for n = #t,i,-1 do
&#9;&#9;local v = t[n]
&#9;&#9;v.Index = n+1
&#9;&#9;t[n+1] = v
&#9;end
&#9;v.Index = i
&#9;t[i] = v
end

-- Removes `i` from `t`. Also sets `Index` field in removed value.
local function remove(t,i)
&#9;local v = t[i]
&#9;for n = i+1,#t do
&#9;&#9;local v = t[n]
&#9;&#9;v.Index = n-1
&#9;&#9;t[n-1] = v
&#9;end
&#9;t[#t] = nil
&#9;v.Index = 0
&#9;return v
end

-- Returns how deep `o` is in the tree.
local function depth(o)
&#9;local d = -1
&#9;while o do
&#9;&#9;o = o.Parent
&#9;&#9;d = d + 1
&#9;end
&#9;return d
end


local connLookup = {}

-- Returns whether a node would be present in the tree list
local function nodeIsVisible(node)
&#9;local visible = true
&#9;node = node.Parent
&#9;while node and visible do
&#9;&#9;visible = visible and node.Expanded
&#9;&#9;node = node.Parent
&#9;end
&#9;return visible
end

-- Removes an object&apos;s tree node. Called when the object stops existing in the
-- game tree.
removeObject = function(object)
&#9;local objectNode = NodeLookup[object]
&#9;if not objectNode then
&#9;&#9;return
&#9;end

&#9;local visible = nodeIsVisible(objectNode)

&#9;Selection:Remove(object,true)

&#9;local parent = objectNode.Parent
&#9;remove(parent,objectNode.Index)
&#9;NodeLookup[object] = nil
&#9;connLookup[object]:Disconnect()
&#9;connLookup[object] = nil

&#9;if visible then
&#9;&#9;updateList()
&#9;elseif nodeIsVisible(parent) then
&#9;&#9;updateScroll()
&#9;end
end

-- Moves a tree node to a new parent. Called when an existing object&apos;s parent
-- changes.
local function moveObject(object,parent)
&#9;local objectNode = NodeLookup[object]
&#9;if not objectNode then
&#9;&#9;return
&#9;end

&#9;local parentNode = NodeLookup[parent]
&#9;if not parentNode then
&#9;&#9;return
&#9;end

&#9;local visible = nodeIsVisible(objectNode)

&#9;remove(objectNode.Parent,objectNode.Index)
&#9;objectNode.Parent = parentNode

&#9;objectNode.Depth = depth(object)
&#9;local function r(node,d)
&#9;&#9;for i = 1,#node do
&#9;&#9;&#9;node[i].Depth = d
&#9;&#9;&#9;r(node[i],d+1)
&#9;&#9;end
&#9;end
&#9;r(objectNode,objectNode.Depth+1)

&#9;insert(parentNode,#parentNode+1,objectNode)

&#9;if visible or nodeIsVisible(objectNode) then
&#9;&#9;updateList()
&#9;elseif nodeIsVisible(objectNode.Parent) then
&#9;&#9;updateScroll()
&#9;end
end

-- ScriptContext[&apos;/Libraries/LibraryRegistration/LibraryRegistration&apos;]
-- This RobloxLocked object lets me index its properties for some reason

local function check(object)
&#9;return object.AncestryChanged
end

-- Creates a new tree node from an object. Called when an object starts
-- existing in the game tree.
addObject = function(object,noupdate,parent)
&#9;if script then
&#9;&#9;-- protect against naughty RobloxLocked objects
&#9;&#9;local s = pcall(check,object)
&#9;&#9;if not s then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;end

&#9;local parentNode
&#9;
&#9;if parent then
&#9;&#9;parentNode = NodeLookup[parent]
&#9;else
&#9;&#9;parentNode = NodeLookup[object.Parent]&#9;
&#9;end
&#9;
&#9;if not parentNode then
&#9;&#9;return
&#9;end

&#9;local objectNode = {
&#9;&#9;Object = object;
&#9;&#9;Parent = parentNode;
&#9;&#9;Index = 0;
&#9;&#9;Expanded = false;
&#9;&#9;Selected = false;
&#9;&#9;Depth = depth(object);
&#9;}

&#9;connLookup[object] = Connect(object.AncestryChanged,function(c,p)
&#9;&#9;if c == object then
&#9;&#9;&#9;if p == nil then
&#9;&#9;&#9;&#9;removeObject(c)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;moveObject(c,p)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)

&#9;NodeLookup[object] = objectNode
&#9;insert(parentNode,#parentNode+1,objectNode)

&#9;if not noupdate then
&#9;&#9;if nodeIsVisible(objectNode) then
&#9;&#9;&#9;updateList()
&#9;&#9;elseif nodeIsVisible(objectNode.Parent) then
&#9;&#9;&#9;updateScroll()
&#9;&#9;end
&#9;end
end

local function makeObject(obj, par)
&#9;--[[local newObject = Instance.new(obj.ClassName)
&#9;for i,v in pairs(obj.Properties) do
&#9;&#9;ypcall(function()
&#9;&#9;&#9;local newProp
&#9;&#9;&#9;newProp = ToPropValue(v.Value,v.Type)
&#9;&#9;&#9;newObject[v.Name] = newProp
&#9;&#9;end)
&#9;end
&#9;newObject.Parent = par
&#9;
&#9;obj.Properties.Parent = par--]]
&#9;
&#9;RemoteEvent:InvokeServer(&quot;NewInstance&quot;, obj.ClassName, obj.Properties)
end

local function writeObject(obj)
&#9;local newObject = {ClassName = obj.ClassName, Properties = {}}
&#9;for i,v in pairs(RbxApi.GetProperties(obj.className)) do
&#9;&#9;if v[&quot;Name&quot;] ~= &quot;Parent&quot; then
&#9;&#9;&#9;print(&quot;thispassed&quot;)
&#9;&#9;&#9;table.insert(newObject.Properties,{Name = v[&quot;Name&quot;], Type = v[&quot;ValueType&quot;], Value = tostring(obj[v[&quot;Name&quot;]])})
&#9;&#9;end
&#9;end
&#9;return newObject
end

local function buildDexStorage()
&#9;local localDexStorage
&#9;
&#9;local success,err = ypcall(function()
&#9;&#9;localDexStorage = game:GetObjects(&quot;rbxasset://DexStorage.rbxm&quot;)[1]
&#9;end)
&#9;
&#9;if success and localDexStorage then
&#9;&#9;for i,v in pairs(localDexStorage:GetChildren()) do
&#9;&#9;&#9;ypcall(function()
&#9;&#9;&#9;&#9;v.Parent = DexStorageMain
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end
&#9;
&#9;updateDexStorageListeners()
&#9;--[[
&#9;local localDexStorage = readfile(getelysianpath()..&quot;DexStorage.txt&quot;)--game:GetService(&quot;CookiesService&quot;):GetCookieValue(&quot;DexStorage&quot;)
&#9;--local success,err = pcall(function()
&#9;&#9;if localDexStorage then
&#9;&#9;&#9;local objTable = game:GetService(&quot;HttpService&quot;):JSONDecode(localDexStorage)
&#9;&#9;&#9;for i,v in pairs(objTable) do
&#9;&#9;&#9;&#9;makeObject(v,DexStorageMain)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;--end)
&#9;--]]
end

local dexStorageDebounce = false
local dexStorageListeners = {}

local function updateDexStorage()
&#9;if dexStorageDebounce then return end
&#9;dexStorageDebounce = true&#9;
&#9;
&#9;wait()
&#9;
&#9;pcall(function()
&#9;&#9;saveinstance(&quot;content//DexStorage.rbxm&quot;,DexStorageMain)
&#9;end)
&#9;
&#9;updateDexStorageListeners()
&#9;
&#9;dexStorageDebounce = false
&#9;--[[
&#9;local success,err = ypcall(function()
&#9;&#9;local objs = {}
&#9;&#9;for i,v in pairs(DexStorageMain:GetChildren()) do
&#9;&#9;&#9;table.insert(objs,writeObject(v))
&#9;&#9;end
&#9;&#9;writefile(getelysianpath()..&quot;DexStorage.txt&quot;,game:GetService(&quot;HttpService&quot;):JSONEncode(objs))
&#9;&#9;--game:GetService(&quot;CookiesService&quot;):SetCookieValue(&quot;DexStorage&quot;,game:GetService(&quot;HttpService&quot;):JSONEncode(objs))
&#9;end)
&#9;if err then
&#9;&#9;CreateCaution(&quot;DexStorage Save Fail!&quot;,&quot;DexStorage broke! If you see this message, report to Raspberry Pi!&quot;)
&#9;end
&#9;print(&quot;hi&quot;)
&#9;--]]
end

function updateDexStorageListeners()
&#9;for i,v in pairs(dexStorageListeners) do
&#9;&#9;v:Disconnect()
&#9;end
&#9;dexStorageListeners = {}
&#9;for i,v in pairs(DexStorageMain:GetChildren()) do
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ev = v.Changed:Connect(updateDexStorage)
&#9;&#9;&#9;table.insert(dexStorageListeners,ev)
&#9;&#9;end)
&#9;end
end

do
&#9;local function registerNodeLookup4(o)
&#9;&#9;NodeLookup[o] = {
&#9;&#9;&#9;Object = o;
&#9;&#9;&#9;Parent = nil;
&#9;&#9;&#9;Index = 0;
&#9;&#9;&#9;Expanded = true;
&#9;&#9;}
&#9;end
&#9;
&#9;registerNodeLookup4(game)
&#9;
&#9;NodeLookup[DexOutput] = {
&#9;&#9;Object = DexOutput;
&#9;&#9;Parent = nil;
&#9;&#9;Index = 0;
&#9;&#9;Expanded = true;
&#9;}
&#9;
&#9;if DexStorageEnabled then
&#9;&#9;NodeLookup[DexStorage] = {
&#9;&#9;&#9;Object = DexStorage;
&#9;&#9;&#9;Parent = nil;
&#9;&#9;&#9;Index = 0;
&#9;&#9;&#9;Expanded = true;
&#9;&#9;}
&#9;end
&#9;
&#9;if NilStorageEnabled then
&#9;&#9;NodeLookup[NilStorage] = {
&#9;&#9;&#9;Object = NilStorage;
&#9;&#9;&#9;Parent = nil;
&#9;&#9;&#9;Index = 0;
&#9;&#9;&#9;Expanded = true;
&#9;&#9;}
&#9;end

&#9;registerNodeLookup4(HiddenEntries)&#9;
&#9;registerNodeLookup4(HiddenGame)&#9;
&#9;
&#9;Connect(game.DescendantAdded,addObject)
&#9;Connect(game.DescendantRemoving,removeObject)
&#9;
&#9;Connect(DexOutput.DescendantAdded,addObject)
&#9;Connect(DexOutput.DescendantRemoving,removeObject)
&#9;
&#9;if DexStorageEnabled then
&#9;&#9;--[[
&#9;&#9;if readfile(getelysianpath()..&quot;DexStorage.txt&quot;) == nil then
&#9;&#9;&#9;writefile(getelysianpath()..&quot;DexStorage.txt&quot;,&quot;&quot;)
&#9;&#9;end
&#9;&#9;--]]
&#9;&#9;
&#9;&#9;buildDexStorage()
&#9;
&#9;&#9;Connect(DexStorage.DescendantAdded,addObject)
&#9;&#9;Connect(DexStorage.DescendantRemoving,removeObject)
&#9;
&#9;&#9;Connect(DexStorage.DescendantAdded,updateDexStorage)
&#9;&#9;Connect(DexStorage.DescendantRemoving,updateDexStorage)
&#9;end
&#9;
&#9;if NilStorageEnabled then
&#9;&#9;Connect(NilStorage.DescendantAdded,addObject)
&#9;&#9;Connect(NilStorage.DescendantRemoving,removeObject)&#9;&#9;
&#9;&#9;
&#9;&#9;local currentTable = get_nil_instances()&#9;
&#9;&#9;
&#9;&#9;spawn(function()
&#9;&#9;&#9;while wait() do
&#9;&#9;&#9;&#9;if #currentTable ~= #get_nil_instances() then
&#9;&#9;&#9;&#9;&#9;currentTable = get_nil_instances()
&#9;&#9;&#9;&#9;&#9;--NilStorageMain:ClearAllChildren()
&#9;&#9;&#9;&#9;&#9;for i,v in pairs(get_nil_instances()) do
&#9;&#9;&#9;&#9;&#9;&#9;if v ~= NilStorage and v ~= DexStorage then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Parent = NilStorageMain
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;--[[
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newNil = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;newNil.Archivable = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;newNil:Clone().Parent = NilStorageMain
&#9;&#9;&#9;&#9;&#9;&#9;&#9;--]]
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end

&#9;local function get(o)
&#9;&#9;return o:GetChildren()
&#9;end
&#9;&#9;
&#9;local function r(o)
&#9;&#9;if o == game and MuteHiddenItems then
&#9;&#9;&#9;for i, v in pairs(gameChildren) do&#9;&#9;&#9;
&#9;&#9;&#9;&#9;addObject(v,true)
&#9;&#9;&#9;&#9;r(v)
&#9;&#9;&#9;end
&#9;&#9;&#9;return&#9;
&#9;&#9;end
&#9;&#9;
&#9;&#9;local s,children = pcall(get,o)
&#9;&#9;if s then
&#9;&#9;&#9;for i = 1,#children do
&#9;&#9;&#9;&#9;addObject(children[i],true)
&#9;&#9;&#9;&#9;r(children[i])
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;r(game)&#9;
&#9;r(DexOutput)
&#9;if DexStorageEnabled then
&#9;&#9;r(DexStorage)
&#9;end
&#9;if NilStorageEnabled then
&#9;&#9;r(NilStorage)
&#9;end
&#9;
&#9;r(HiddenEntries)

&#9;scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
&#9;updateList()
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Actions

local actionButtons do
&#9;actionButtons = {}

&#9;local totalActions = 1
&#9;local currentActions = totalActions
&#9;local function makeButton(icon,over,name,vis,cond)
&#9;&#9;local buttonEnabled = false
&#9;&#9;
&#9;&#9;local button = Create(Icon(&apos;ImageButton&apos;,icon),{
&#9;&#9;&#9;Name = name .. &quot;Button&quot;;
&#9;&#9;&#9;Visible = Option.Modifiable and Option.Selectable;
&#9;&#9;&#9;Position = UDim2.new(1, -4 + -(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
&#9;&#9;&#9;Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
&#9;&#9;&#9;Parent = headerFrame;
&#9;&#9;})

&#9;&#9;local tipText = Create(&apos;TextLabel&apos;,{
&#9;&#9;&#9;Name = name .. &quot;Text&quot;;
&#9;&#9;&#9;Text = name;
&#9;&#9;&#9;Visible = false;
&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;TextXAlignment = &apos;Right&apos;;
&#9;&#9;&#9;Font = FONT;
&#9;&#9;&#9;FontSize = FONT_SIZE;
&#9;&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;&#9;Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
&#9;&#9;&#9;Parent = headerFrame;
&#9;&#9;})
&#9;&#9;
&#9;&#9;button.MouseEnter:Connect(function()
&#9;&#9;&#9;if buttonEnabled then
&#9;&#9;&#9;&#9;button.BackgroundTransparency = 0.9
&#9;&#9;&#9;end
&#9;&#9;&#9;--Icon(button,over)
&#9;&#9;&#9;--tipText.Visible = true
&#9;&#9;end)
&#9;&#9;button.MouseLeave:Connect(function()
&#9;&#9;&#9;button.BackgroundTransparency = 1
&#9;&#9;&#9;--Icon(button,icon)
&#9;&#9;&#9;--tipText.Visible = false
&#9;&#9;end)

&#9;&#9;currentActions = currentActions + 1
&#9;&#9;actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
&#9;&#9;QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
&#9;&#9;&#9;if on then
&#9;&#9;&#9;&#9;buttonEnabled = true
&#9;&#9;&#9;&#9;Icon(button,over)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;buttonEnabled = false
&#9;&#9;&#9;&#9;Icon(button,icon)
&#9;&#9;&#9;end
&#9;&#9;end}
&#9;&#9;return button
&#9;end

&#9;--local clipboard = {}
&#9;local function delete(o)
&#9;&#9;o.Parent = nil
&#9;&#9;RemoteEvent:InvokeServer(&quot;Delete&quot;, o)
&#9;end
&#9;&#9;

&#9;-- DELETE
&#9;makeButton(ACTION_DELETE,ACTION_DELETE_OVER,&quot;Delete&quot;,true,function() return #Selection:Get() &gt; 0 end).MouseButton1Click:Connect(function()
&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;local list = Selection:Get()
&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;pcall(delete,list[i])
&#9;&#9;end
&#9;&#9;Selection:Set({})
&#9;end)
&#9;
&#9;-- PASTE
&#9;makeButton(ACTION_PASTE,ACTION_PASTE_OVER,&quot;Paste&quot;,true,function() return #Selection:Get() &gt; 0 and #clipboard &gt; 0 end).MouseButton1Click:Connect(function()
&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;local parent = Selection.List[1] or workspace
&#9;&#9;for i = 1,#clipboard do
&#9;&#9;&#9;clipboard[i]:Clone().Parent = parent
&#9;&#9;end
&#9;&#9;

&#9;&#9;RemoteEvent:InvokeServer(&quot;Paste&quot;, parent)
&#9;end)
&#9;
&#9;-- COPY
&#9;makeButton(ACTION_COPY,ACTION_COPY_OVER,&quot;Copy&quot;,true,function() return #Selection:Get() &gt; 0 end).MouseButton1Click:Connect(function()
&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;clipboard = {}
&#9;&#9;local list = Selection.List
&#9;&#9;
&#9;&#9;RemoteEvent:InvokeServer(&quot;ClearClipboard&quot;)
&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;table.insert(clipboard,list[i]:Clone())
&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;Copy&quot;, list[i])
&#9;&#9;end
&#9;&#9;updateActions()
&#9;end)
&#9;
&#9;-- CUT
&#9;makeButton(ACTION_CUT,ACTION_CUT_OVER,&quot;Cut&quot;,true,function() return #Selection:Get() &gt; 0 end).MouseButton1Click:Connect(function()
&#9;&#9;if not Option.Modifiable then return end
&#9;&#9;clipboard = {}
&#9;&#9;local list = Selection.List
&#9;&#9;local cut = {}
&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;local obj = list[i]:Clone()
&#9;&#9;&#9;if obj then
&#9;&#9;&#9;&#9;table.insert(clipboard,obj)
&#9;&#9;&#9;&#9;table.insert(cut,list[i])

&#9;&#9;&#9;&#9;RemoteEvent:InvokeServer(&quot;Copy&quot;, list[i])
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for i = 1,#cut do
&#9;&#9;&#9;pcall(delete,cut[i])
&#9;&#9;end
&#9;&#9;updateActions()
&#9;end)
&#9;
&#9;-- FREEZE


&#9;-- SORT
&#9;-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,&quot;Sort&quot;)
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Option Bindables

do
&#9;local optionCallback = {
&#9;&#9;Modifiable = function(value)
&#9;&#9;&#9;for i = 1,#actionButtons do
&#9;&#9;&#9;&#9;actionButtons[i].Obj.Visible = value and Option.Selectable
&#9;&#9;&#9;end
&#9;&#9;&#9;cancelReparentDrag()
&#9;&#9;end;
&#9;&#9;Selectable = function(value)
&#9;&#9;&#9;for i = 1,#actionButtons do
&#9;&#9;&#9;&#9;actionButtons[i].Obj.Visible = value and Option.Modifiable
&#9;&#9;&#9;end
&#9;&#9;&#9;cancelSelectDrag()
&#9;&#9;&#9;Selection:Set({})
&#9;&#9;end;
&#9;}

&#9;local bindSetOption = explorerPanel:FindFirstChild(&quot;SetOption&quot;)
&#9;if not bindSetOption then
&#9;&#9;bindSetOption = Create(&apos;BindableFunction&apos;,{Name = &quot;SetOption&quot;})
&#9;&#9;bindSetOption.Parent = explorerPanel
&#9;end

&#9;bindSetOption.OnInvoke = function(optionName,value)
&#9;&#9;if optionCallback[optionName] then
&#9;&#9;&#9;Option[optionName] = value
&#9;&#9;&#9;optionCallback[optionName](value)
&#9;&#9;end
&#9;end

&#9;local bindGetOption = explorerPanel:FindFirstChild(&quot;GetOption&quot;)
&#9;if not bindGetOption then
&#9;&#9;bindGetOption = Create(&apos;BindableFunction&apos;,{Name = &quot;GetOption&quot;})
&#9;&#9;bindGetOption.Parent = explorerPanel
&#9;end

&#9;bindGetOption.OnInvoke = function(optionName)
&#9;&#9;if optionName then
&#9;&#9;&#9;return Option[optionName]
&#9;&#9;else
&#9;&#9;&#9;local options = {}
&#9;&#9;&#9;for k,v in pairs(Option) do
&#9;&#9;&#9;&#9;options[k] = v
&#9;&#9;&#9;end
&#9;&#9;&#9;return options
&#9;&#9;end
&#9;end
end

function SelectionVar()
&#9;return Selection
end

Input.InputBegan:Connect(function(key)
&#9;if key.KeyCode == Enum.KeyCode.LeftControl then
&#9;&#9;HoldingCtrl = true
&#9;end
&#9;if key.KeyCode == Enum.KeyCode.LeftShift then
&#9;&#9;HoldingShift = true
&#9;end
end)

Input.InputEnded:Connect(function(key)
&#9;if key.KeyCode == Enum.KeyCode.LeftControl then
&#9;&#9;HoldingCtrl = false
&#9;end
&#9;if key.KeyCode == Enum.KeyCode.LeftShift then
&#9;&#9;HoldingShift = false
&#9;end
end)

while RbxApi == nil do
&#9;RbxApi = GetApiRemote:Invoke()
&#9;wait()
end

explorerFilter.Changed:Connect(function(prop)
&#9;if prop == &quot;Text&quot; then&#9;&#9;
&#9;&#9;Selection.Finding = true
&#9;&#9;rawUpdateList()
&#9;end
end)

explorerFilter.FocusLost:Connect(function()&#9;
&#9;if explorerFilter.Text == &quot;&quot; then
&#9;&#9;if Selection.Found[1] then
&#9;&#9;&#9;scrollBar:ScrollTo(NodeLookup[Selection.Found[1]].Index)
&#9;&#9;end
&#9;&#9;
&#9;&#9;Selection.Finding = false
&#9;&#9;Selection.Found = {}
&#9;end
end)

CurrentInsertObjectWindow = CreateInsertObjectMenu(
&#9;GetClasses(),
&#9;&quot;&quot;,
&#9;false,
&#9;function(option)
&#9;&#9;CurrentInsertObjectWindow.Visible = false
&#9;&#9;local list = SelectionVar():Get()
&#9;&#9;for i = 1,#list do
&#9;&#9;&#9;pcall(function() Instance.new(option,list[i]) RemoteEvent:InvokeServer(&quot;NewInstance&quot;, option, list[i]) end)
&#9;&#9;end
&#9;&#9;DestroyRightClick()
&#9;end
)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX07ACF445B02D4DC2AC5159B81D4BD522">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Exploring</string>
						<string name="ScriptGuid">{F57FB442-02EA-40C6-B031-D57385B645BD}</string>
						<ProtectedString name="Source"><![CDATA[-- < Aliases > --
local game = game
local workspace = workspace
local pcall = pcall
local unpack = unpack
local next = next
local tick = tick
local ipairs = ipairs
local script = script
local tostring = tostring
local type = type
local typeof = typeof
local Instance_new = Instance.new
local UDim2_new = UDim2.new
local Vector2_new = Vector2.new
local Vector3_new = Vector3.new
local NumberRange_new = NumberRange.new
local Color3_new = Color3.new
local Color3_fromRGB = Color3.fromRGB
local table_insert = table.insert
local table_remove = table.remove
local table_sort = table.sort
local table_concat = table.concat
local table_clear = table.clear
local string_split = string.split
local string_find = string.find
local string_match = string.match
local string_lower = string.lower
local string_sub = string.sub
local string_byte = string.byte
local string_gsub = string.gsub
local string_rep = string.rep
local math_floor = math.floor
local math_ceil = math.ceil
local math_random = math.random
local math_huge = math.huge
-- < Services > --
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
-- < Class Aliases > --
local IsA = game.IsA
local ClearAllChildren = game.ClearAllChildren
local IsAncestorOf = game.IsAncestorOf
local WaitForChild = game.WaitForChild
local FindFirstChildOfClass = game.FindFirstChildOfClass
local GetPropertyChangedSignal = game.GetPropertyChangedSignal
local GetChildren = game.GetChildren
local GetDescendants = game.GetDescendants
local Clone = game.Clone
local Destroy = game.Destroy
local Wait, Connect, Disconnect = (function()
	local A = game.Changed
	local B = A.Connect
	local C = B(A, function()end)
	local D = C.Disconnect
	D(C)
	return A.Wait, B, D
end)()
-- < Upvalues > --
local RenderStepped = RunService.RenderStepped
local Bindables = WaitForChild(script.Parent.Parent, "Bindables", 300)
local GetSpecials_Bindable = WaitForChild(Bindables, "GetSpecials", 300)
local GetSetting_Bindable = WaitForChild(Bindables, "GetSetting", 300)
local GetOption_Bindable = WaitForChild(Bindables, "GetOption", 300)
local GetAwaiting_Bindable = WaitForChild(Bindables, "GetAwaiting", 300)
local GetSelection_Bindable = WaitForChild(Bindables, "GetSelection", 300)
local GetApi_Bindable = WaitForChild(Bindables, "GetApi", 300)
local GetPrint_Bindable = WaitForChild(Bindables, "GetPrint", 300)
local OpenScript_Bindable = WaitForChild(Bindables, "OpenScript", 300)
local SelectionChanged_Bindable = WaitForChild(Bindables, "SelectionChanged", 300)
local SetAwaiting_Bindable = WaitForChild(Bindables, "SetAwaiting", 300)
local SetOption_Bindable = WaitForChild(Bindables, "SetOption", 300)
local SetSelection_Bindable = WaitForChild(Bindables, "SetSelection", 300)
local Specials = GetSpecials_Bindable:Invoke()
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Option = {
	Modifiable = true, -- can modify object parents in the hierarchy
	Selectable = true -- can select objects
}
local GUI_SIZE = 16 -- general size of GUI objects, in pixels
local ENTRY_PADDING, ENTRY_MARGIN = 1, 1 -- padding between items within each entry and padding between each entry
local explorerPanel = script.Parent
local Dex = explorerPanel.Parent
local HoldingCtrl, HoldingShift = false, false
-- < Custom Aliases > --
local getinstancelist = Specials.getinstancelist
local writeinstance = Specials.writeinstance
local fireclickdetector = Specials.fireclickdetector
local firetouchinterest = Specials.firetouchinterest
local fireproximityprompt = Specials.fireproximityprompt
local wait = function(p1)
	local A = p1 and p1 or 0
	if A ~= 0 then
		for B = 0, A * 60 do
			Wait(RenderStepped)
		end
	end
	return
end
-- < Source > --
local DexOutput, DexOutputMain = Instance_new("Folder"), Instance_new("ScreenGui")
DexOutput.Name = "Output"
DexOutputMain.Name = "Dex Output"
DexOutputMain.Parent = DexOutput

local print = function(...)
	local A = Instance_new("Dialog")
	for _,v in next, {...} do
		A.Name = tostring(v) .. " "
	end
	A.Parent = DexOutputMain
end

GetPrint_Bindable.OnInvoke = function()
	return print
end

local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING * 2
local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
local HEADER_SIZE = ENTRY_SIZE * 2

local FONT = 'SourceSans'
local FONT_SIZE

do
	local size,s,n = {8,9,10,11,12,14,18,24,36,48}, nil, math_huge
	for i = 1, #size do
		if size[i] <= GUI_SIZE then
			FONT_SIZE = i - 1
		end
	end
end

local GuiColor = {
	Background = Color3_fromRGB(37, 37, 42),
	Border = Color3_fromRGB(20, 20, 25),
	Selected = Color3_fromRGB(5, 100, 145),
	BorderSelected = Color3_fromRGB(2, 125, 145),
	Text = Color3_fromRGB(245, 245, 250),
	TextDisabled = Color3_fromRGB(190, 190, 195),
	TextSelected = Color3_fromRGB(255, 255, 255),
	Button = Color3_fromRGB(31, 31, 35),
	ButtonBorder = Color3_fromRGB(135, 135, 140),
	ButtonSelected = Color3_fromRGB(0, 170, 155),
	Field = Color3_fromRGB(37, 37, 42),
	FieldBorder = Color3_fromRGB(50, 50, 55),
	TitleBackground = Color3_fromRGB(10, 10, 15)
}
-- Icon map constants
local ActionTextures = {
	Copy = {"rbxasset://textures/TerrainTools/icon_regions_copy.png","rbxasset://textures/TerrainTools/icon_regions_copy.png"},
	Paste = {"rbxasset://textures/TerrainTools/icon_regions_paste.png","rbxasset://textures/TerrainTools/icon_regions_paste.png"},
	Delete = {"rbxasset://textures/TerrainTools/icon_regions_delete.png","rbxasset://textures/TerrainTools/icon_regions_delete.png"},
	Starred = {"rbxasset://textures/StudioToolbox/AssetPreview/star_filled.png","rbxasset://textures/StudioToolbox/AssetPreview/star_filled.png"},
	AddStar = {"rbxasset://textures/StudioToolbox/AssetPreview/star_stroke.png","rbxasset://textures/StudioToolbox/AssetPreview/star_stroke.png"}
}

local NodeTextures = {"rbxasset://textures/AnimationEditor/btn_expand.png", "rbxasset://textures/AnimationEditor/btn_collapse.png"}

local ExplorerIndex, ReflectionMetadata = {
	ValueBase = 4,
	DataModelMesh = 8,
	SurfaceAppearance = 10,
	BodyMover = 14,
	WorldRoot = 19,
	CorePackages = 20,
	UIComponent = 26,
	Atmosphere = 28,
	NetworkReplicator = 29,
	JointsService = 34,
	BasePlayerGui = 46,
	PluginDebugService = 46,
	RobloxPluginGuiService = 46,
	SelectionLasso = 57,
	RobloxReplicatedStorage = 70,
	StandalonePluginScripts = 78,
	PostEffect = 83,
	SoundEffect = 84,
	Plugin = 86,
	Motor6D = 106,
	LineHandleAdornment = 107,
	ImageHandleAdornment = 108,
	CylinderHandleAdornment = 109,
	ConeHandleAdornment = 110,
	BoxHandleAdornment = 111,
	SphereHandleAdornment = 112,
	ReplicatedScriptService = 113,
	Bone = 114,
	VideoFrame = 120
}, "https://anaminus.github.io/rbx/json/rmd/latest.json"

for _, Metadata in next, HttpService:JSONDecode(game:HttpGetAsync(ReflectionMetadata)) do
	if Metadata.ExplorerImageIndex > 0 and Metadata.ExplorerImageIndex <= 120 then
		ExplorerIndex[Metadata.Name] = Metadata.ExplorerImageIndex
	end
end

local function Create(p1, p2)
	local A = type(p1) == 'string' and Instance_new(p1) or p1
	for B, C in next, p2 do
		if type(B) == 'number' then
			C.Parent = A
		else
			A[B] = C
		end
	end
	return A
end

local barActive, activeOptions = false, {}

local function createDDown(dBut, callback,...)
	if barActive then
		for _,v in next, activeOptions do
			Destroy(v)
		end
		table_clear(activeOptions)
		barActive = false
		return
	else
		barActive = true
	end
	local slots, base = {...}, dBut
	for i,v in next, slots do
		local newOption = Clone(base)
		newOption.ZIndex = 2
		newOption.Name = "Option " .. tostring(i)
		newOption.BackgroundTransparency = 0
		table_insert(activeOptions, newOption)
		newOption.Position = UDim2_new(-.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
		newOption.Text = slots[i]
		newOption.Parent = base.Parent.Parent.Parent
		Connect(newOption.MouseButton1Down, function()
			dBut.Text = slots[i]
			callback(slots[i])
			for _,v in next, activeOptions do
				Destroy(v)
			end
			table_clear(activeOptions)
			barActive = false
		end)
	end
end

local function EventConnect(event,func)
	return Connect(event, function(...)
		local a = {...}
		pcall(function()
			func(unpack(a))
		end)
	end)
end

function GetScreen(screen)
	if screen == nil then return nil end
	while not IsA(screen, "ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end

do
	local ZIndexLock = {}
	local function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if IsA(object, 'GuiObject') then
				object.ZIndex = z
			end
			local children = GetChildren(object)
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
	function SetZIndexOnChanged(object)
		return Connect(GetPropertyChangedSignal(object, "ZIndex"), function()
			SetZIndex(object, object.ZIndex)
		end)
	end
end

local Icon
do
	local iconMap = 'rbxasset://textures/ClassImages.png'

	function Icon(IconFrame,index)
		local mapSize = Vector2_new(1920,16)
		local iconSize = 16
		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end
		if not IconFrame then
			IconFrame = Create(class,{
				Name = "IconFrame",
				BackgroundTransparency = 1,
				ClipsDescendants = true,
				Create('ImageLabel',{
					Name = "IconMap",
					Active = false,
					BackgroundTransparency = 1,
					Image = iconMap,
					Size = UDim2_new(0,iconSize,0,mapSize.Y)
				})
			})
		end
		local IconMap = WaitForChild(IconFrame, "IconMap", 300)
		IconMap.ImageRectOffset = Vector2_new(iconSize * index,0)
		IconMap.ImageRectSize = Vector2_new(iconSize, iconSize)
		return IconFrame
	end
end

function SpecialIcon(IconFrame,texture,iconSize)
	local class = 'Frame'
	if type(IconFrame) == 'string' then
		class = IconFrame
		IconFrame = nil
	end
	if not IconFrame then
		IconFrame = Create(class,{
			Name = "IconFrame",
			BackgroundTransparency = 1,
			ClipsDescendants = true,
			Create('ImageLabel',{
				Name = "SpecialIcon",
				Active = true,
				BackgroundTransparency = 1,
				Image = texture,
				Size = iconSize or UDim2_new(0,16,0,16)
			})
		})
	end
	return IconFrame
end

do
	local function ResetButtonColor(button)
		local active = button.Active
		button.Active = not active
		button.Active = active
	end

	local function ArrowGraphic(size,dir,scaled,template)
		local Frame = Create('Frame',{
			Name = "Arrow Graphic",
			BorderSizePixel = 0,
			Size = UDim2_new(0,size,0,size),
			Transparency = 1
		})

		if not template then
			template = Create('Frame',{
				BorderSizePixel = 0
			})
		end

		template.BackgroundColor3 = Color3_new(1, 1, 1)

		local transform
		if dir == nil or dir == 'Up' then
			function transform(p,s) return p,s end
		elseif dir == 'Down' then
			function transform(p,s) return UDim2_new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
		elseif dir == 'Left' then
			function transform(p,s) return UDim2_new(0,p.Y.Offset,0,p.X.Offset),UDim2_new(0,s.Y.Offset,0,s.X.Offset) end
		elseif dir == 'Right' then
			function transform(p,s) return UDim2_new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2_new(0,s.Y.Offset,0,s.X.Offset) end
		end

		local scale
		if scaled then
			function scale(p,s) return UDim2_new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2_new(s.X.Offset/size,0,s.Y.Offset/size,0) end
		else
			function scale(p,s) return p,s end
		end

		local o = math_floor(size/4)
		if size%2 == 0 then
			local n = size/2-1
			for i = 0,n do
				local t = Clone(template)
				local p,s = scale(transform(
					UDim2_new(0,n-i,0,o+i),
					UDim2_new(0,(i+1)*2,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		else
			local n = (size-1)/2
			for i = 0,n do
				local t = Clone(template)
				local p,s = scale(transform(
					UDim2_new(0,n-i,0,o+i),
					UDim2_new(0,i*2+1,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		end
		if size%4 > 1 then
			local t = Clone(template)
			local p,s = scale(transform(
				UDim2_new(0,0,0,size-o-1),
				UDim2_new(0,size,0,1)
				))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end

		for _, v in ipairs(GetChildren(Frame)) do
			v.BackgroundColor3 = Color3_new(1, 1, 1)
		end

		return Frame
	end

	local function GripGraphic(size,dir,spacing,scaled,template)
		local Frame = Create('Frame',{
			Name = "Grip Graphic",
			BorderSizePixel = 0,
			Size = UDim2_new(0,size.X,0,size.Y),
			Transparency = 1
		})

		if not template then
			template = Create('Frame',{
				BorderSizePixel = 0
			})
		end

		spacing = spacing or 2

		local scale = function(p)
			return scaled and UDim2_new(p.X.Offset / size.X, 0, p.Y.Offset / size.Y, 0) or p
		end

		if dir == 'Vertical' then
			for i=0,size.X-1,spacing do
				local t = Clone(template)
				t.Size = scale(UDim2_new(0,1,0, size.Y))
				t.Position = scale(UDim2_new(0,i,0,0))
				t.Parent = Frame
			end
		elseif dir == nil or dir == 'Horizontal' then
			for i=0,size.Y-1,spacing do
				local t = Clone(template)
				t.Size = scale(UDim2_new(0,size.X,0,1))
				t.Position = scale(UDim2_new(0,0,0,i))
				t.Parent = Frame
			end
		end

		return Frame
	end

	function ScrollBar(horizontal)
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame",
			BorderSizePixel = 0,
			Position = horizontal and UDim2_new(0,0,1,-GUI_SIZE) or UDim2_new(1,-GUI_SIZE,0,0),
			Size = horizontal and UDim2_new(1,0,0,GUI_SIZE) or UDim2_new(0,GUI_SIZE,1,0),
			BackgroundTransparency = 1,
			Create('ImageButton',{
				Name = "ScrollDown",
				Position = horizontal and UDim2_new(1,-GUI_SIZE,0,0) or UDim2_new(0,0,1,-GUI_SIZE),
				Size = UDim2_new(0, GUI_SIZE, 0, GUI_SIZE),
				BackgroundColor3 = GuiColor.Button,
				BorderColor3 = GuiColor.Border
			}),
			Create('ImageButton',{
				Name = "ScrollUp",
				Size = UDim2_new(0, GUI_SIZE, 0, GUI_SIZE),
				BackgroundColor3 = GuiColor.Button,
				BorderColor3 = GuiColor.Border
			}),
			Create('ImageButton',{
				Name = "ScrollBar",
				Size = horizontal and UDim2_new(1,-GUI_SIZE*2,1,0) or UDim2_new(1,0,1,-GUI_SIZE*2),
				Position = horizontal and UDim2_new(0,GUI_SIZE,0,0) or UDim2_new(0,0,0,GUI_SIZE),
				AutoButtonColor = false,
				BackgroundColor3 = Color3_new(1/4, 1/4, 1/4),
				BorderColor3 = GuiColor.Border,
				Create('ImageButton',{
					Name = "ScrollThumb",
					AutoButtonColor = false,
					Size = UDim2_new(0, GUI_SIZE, 0, GUI_SIZE),
					BackgroundColor3 = GuiColor.Button,
					BorderColor3 = GuiColor.Border
				})
			})
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic",
			BorderSizePixel = 0,
			BackgroundColor3 = GuiColor.Border
		})
		local graphicSize = GUI_SIZE/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
		local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
		ScrollDownGraphic.Position = UDim2_new(.5,-graphicSize/2,.5,-graphicSize/2)
		ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
		local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
		ScrollUpGraphic.Position = UDim2_new(.5,-graphicSize/2,.5,-graphicSize/2)
		ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = GUI_SIZE*3/8
			local Decal = GripGraphic(Vector2_new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2_new(.5,-size/2,.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local Class = setmetatable({
			GUI = ScrollFrame,
			ScrollIndex = 0,
			VisibleSpace = 0,
			TotalSpace = 0,
			PageIncrement = 1
		},{
			__index = {
				GetScrollPercent = function(self)
					return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
				end,
				CanScrollDown = function(self)
					return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
				end,
				CanScrollUp = function(self)
					return self.ScrollIndex > 0
				end,
				CanScrollRight = function(self)
					return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
				end,
				CanScrollLeft = function(self)
					return self.ScrollIndex > 0
				end,
				ScrollDown = function(self)
					self.ScrollIndex += self.PageIncrement
					self:Update()
				end,
				ScrollUp = function(self)
					self.ScrollIndex -= self.PageIncrement
					self:Update()
				end,
				ScrollRight = function(self)
					self.ScrollIndex += self.PageIncrement
					self:Update()
				end,
				ScrollLeft = function(self)
					self.ScrollIndex -= self.PageIncrement
					self:Update()
				end,
				ScrollTo = function(self,index)
					self.ScrollIndex = index
					self:Update()
				end,
				SetScrollPercent = function(self,percent)
					self.ScrollIndex = math_floor((self.TotalSpace - self.VisibleSpace)*percent + .5)
					self:Update()
				end
			}
		})

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2_new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
				if ScrollThumbFrame.AbsoluteSize.X < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.X
				ScrollThumbFrame.Position = UDim2_new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.X)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2_new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.Y < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.Y
				ScrollThumbFrame.Position = UDim2_new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.Y)/barSize,0)
			end
		end

		local lastDown, lastUp
		local scrollStyle = {BackgroundColor3=Color3_new(1, 1, 1),BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=Color3_new(1, 1, 1),BackgroundTransparency=.7}

		local function Update()
			local t, v, s = Class.TotalSpace, Class.VisibleSpace, Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = GetChildren(ScrollDownGraphic)
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = GetChildren(ScrollUpGraphic)
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag",
			Position = UDim2_new(-.25,0,-.25,0),
			Size = UDim2_new(1.5,0,1.5,0),
			Transparency = 1,
			AutoButtonColor = false,
			Active = true,
			ZIndex = 10
		})

		local scrollEventID = 0
		Connect(ScrollDownFrame.MouseButton1Down, function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = Connect(MouseDrag.MouseButton1Up, function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				Disconnect(up_con)
				drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(.2)
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		Connect(ScrollDownFrame.MouseButton1Up, function()
			scrollEventID = tick()
		end)

		Connect(ScrollUpFrame.MouseButton1Down, function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = Connect(MouseDrag.MouseButton1Up, function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				Disconnect(up_con)
				drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		Connect(ScrollUpFrame.MouseButton1Up, function()
			scrollEventID = tick()
		end)

		if horizontal then
			Connect(ScrollBarFrame.MouseButton1Down, function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = Connect(MouseDrag.MouseButton1Up, function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					Disconnect(up_con)
					drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.X then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.X + ScrollThumbFrame.AbsoluteSize.X then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.X then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			Connect(ScrollBarFrame.MouseButton1Down, function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = Connect(MouseDrag.MouseButton1Up, function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					Disconnect(up_con)
					drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.Y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.Y + ScrollThumbFrame.AbsoluteSize.Y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.Y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			Connect(ScrollThumbFrame.MouseButton1Down, function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.X
				local drag_con
				local up_con
				drag_con = Connect(MouseDrag.MouseMoved, function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.X
					local bar_drag = ScrollBarFrame.AbsoluteSize.X - ScrollThumbFrame.AbsoluteSize.X
					local bar_abs_one = bar_abs_pos + bar_drag
					x -= mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x -= bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = Connect(MouseDrag.MouseButton1Up, function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					Disconnect(drag_con)
					drag_con = nil
					Disconnect(up_con)
					drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			Connect(ScrollThumbFrame.MouseButton1Down, function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.Y
				local drag_con, up_con
				drag_con = Connect(MouseDrag.MouseMoved, function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.Y
					local bar_drag = ScrollBarFrame.AbsoluteSize.Y - ScrollThumbFrame.AbsoluteSize.Y
					local bar_abs_one = bar_abs_pos + bar_drag
					y -= mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y -= bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = Connect(MouseDrag.MouseButton1Up, function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					Disconnect(drag_con)
					drag_con = nil
					Disconnect(up_con)
					drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			Destroy(ScrollFrame)
			Destroy(MouseDrag)
			for k in next, Class do
				Class[k] = nil
			end
			setmetatable(Class, nil)
		end
		Update()
		return Class
	end
end
----------------------------------------------------------------
Create(explorerPanel,{
	BackgroundColor3 = GuiColor.Field,
	BorderColor3 = GuiColor.Border,
	Active = true
})

local ConfirmationWindow = WaitForChild(Dex, "Confirmation")
local CautionWindow = WaitForChild(Dex, "Caution")
local TableCautionWindow = WaitForChild(Dex, "TableCaution")

local RemoteWindow = WaitForChild(Dex, "CallRemote")

local ScriptEditor = WaitForChild(Dex, "ScriptEditor")

local CurrentRemoteWindow

local lastSelectedNode

local DexStorage, DexStorageMain, DexStorageEnabled

if saveinstance then
	DexStorageEnabled = true
end

if DexStorageEnabled then
	DexStorage = Create('Folder',{
		Name = "Dex"
	})
	DexStorageMain = Create('Folder',{
		Name = "DexStorage",
		Parent = DexStorage
	})
end

local RunningScriptsStorage, RunningScriptsStorageMain, RunningScriptsStorageEnabled

if getscripts then
	RunningScriptsStorageEnabled = true
end

if RunningScriptsStorageEnabled then
	RunningScriptsStorage = Create('Folder',{
		Name = "Dex Internal Storage",
	})
	RunningScriptsStorageMain = Create('Folder',{
		Name = "Running Scripts",
		Parent = RunningScriptsStorage
	})
	if not GetSetting_Bindable:Invoke("RSSIncludeRL") then
		for _, RunningScript in next, getscripts() do
			local runningScript
			RunningScript.Archivable = true
			runningScript = Clone(RunningScript)
			pcall(function()
				runningScript.Disabled = true
			end)
			runningScript.Parent = RunningScriptsStorageMain
		end
	else
		for _, Instance in next, getinstancelist() do
			if typeof(Instance) == "Instance" and IsA(Instance, "LuaSourceContainer") then
				Instance.Archivable = true
				local Script = Clone(Instance)
				pcall(function()
					Script.Disabled = true
				end)
				Script.Parent = RunningScriptsStorageMain
			end
		end
	end
end

local NilStorage, NilStorageMain, NilStorageEnabled

if getnilinstances then
	NilStorageEnabled = true
end

if NilStorageEnabled then
	NilStorage = Create('Folder',{
		Name = "Dex Internal Storage",
	})
	NilStorageMain = Create('Folder',{
		Name = "Nil Instances",
		Parent = NilStorage
	})
	for _, NilInstance in next, getnilinstances() do
		local nilInstance
		NilInstance.Archivable = true
		pcall(function()
			nilInstance = Clone(NilInstance)
			nilInstance.Disabled = true
			nilInstance.Parent = NilStorageMain
		end)
	end
end

local listFrame = Create('Frame',{
	Name = "List",
	BorderSizePixel = 0,
	BackgroundTransparency = 1,
	ClipsDescendants = true,
	Position = UDim2_new(0,0,0,HEADER_SIZE),
	Size = UDim2_new(1,-GUI_SIZE,1,-HEADER_SIZE),
	Parent = explorerPanel
})

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2_new(1,-GUI_SIZE,0,HEADER_SIZE),
	Size = UDim2_new(0,GUI_SIZE,1,-HEADER_SIZE),
	Parent = explorerPanel
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = GUI_SIZE
Create(scrollBarH.GUI,{
	Position = UDim2_new(0,0,1,-GUI_SIZE),
	Size = UDim2_new(1,-GUI_SIZE,0,GUI_SIZE),
	Visible = false,
	Parent = explorerPanel
})

local headerFrame = Create('Frame',{
	Name = "Header",
	BorderSizePixel = 0,
	BackgroundColor3 = GuiColor.Background,
	BorderColor3 = GuiColor.Border,
	Position = UDim2_new(),
	Size = UDim2_new(1,0,0,HEADER_SIZE),
	Parent = explorerPanel,
	Create('TextLabel',{
		Text = "Explorer",
		BackgroundTransparency = 1,
		TextColor3 = GuiColor.Text,
		TextXAlignment = 'Left',
		Font = FONT,
		FontSize = FONT_SIZE,
		Position = UDim2_new(0,4,0,0),
		Size = UDim2_new(1,-4,.5,0)
	})
})

local explorerFilter = 	Create('TextBox',{
	Text = "Filter Instances",
	BackgroundTransparency = .8,
	TextColor3 = GuiColor.Text,
	TextXAlignment = 'Left',
	Font = FONT,
	FontSize = FONT_SIZE,
	Position = UDim2_new(0,4,.5,0),
	Size = UDim2_new(1,-8,.5,-2)
})

explorerFilter.Parent = headerFrame

SetZIndexOnChanged(explorerPanel)

local Styles = {
	Font = Enum.Font.Arial,
	Margin = 5,
	Black = Color3_fromRGB(0,0,5),
	Black2 = Color3_fromRGB(24, 24, 29),
	White = Color3_fromRGB(244,244,249),
	WhiteOver = Color3_fromRGB(200,200,205),
	Hover = Color3_fromRGB(2, 128, 149),
	Hover2 = Color3_fromRGB(5, 102, 146)
}

local Row = {
	Font = Styles.Font,
	FontSize = Enum.FontSize.Size14,
	TextXAlignment = Enum.TextXAlignment.Left,
	TextColor = Styles.White,
	TextColorOver = Styles.WhiteOver,
	TextLockedColor = Color3_fromRGB(155,155,160),
	Height = 24,
	BorderColor = Color3_fromRGB(54,54,55),
	BackgroundColor = Styles.Black2,
	BackgroundColorAlternate = Color3_fromRGB(32, 32, 37),
	BackgroundColorMouseover = Color3_fromRGB(40, 40, 45),
	TitleMarginLeft = 15
}

local DropDown = {
	Font = Styles.Font,
	FontSize = Enum.FontSize.Size14,
	TextColor = Color3_fromRGB(255,255,260),
	TextColorOver = Row.TextColorOver,
	TextXAlignment = Enum.TextXAlignment.Left,
	Height = 20,
	BackColor = Styles.Black2,
	BackColorOver = Styles.Hover2,
	BorderColor = Color3_fromRGB(45,45,50),
	BorderSizePixel = 0,
	ArrowColor = Color3_fromRGB(80,80,83),
	ArrowColorOver = Styles.Hover
}

local BrickColors = {
	BoxSize = 13,
	BorderSizePixel = 0,
	BorderColor = Color3_fromRGB(53,53,55),
	FrameColor = Color3_fromRGB(53,53,55),
	Size = 20,
	Padding = 4,
	ColorsPerRow = 8,
	OuterBorder = 1,
	OuterBorderColor = Styles.Black
}

local currentRightClickMenu, CurrentInsertObjectWindow, CurrentFunctionCallerWindow, RbxApi

function IsCreatable(Class)
	local Class_Tags = Class.Tags
	if Class_Tags then
		for _, Tag in next, Class_Tags do
			if string_lower(Tag) == "notcreatable" then
				return false
			end
		end
	end
	return true
end

function IsAService(Class)
	local Class_Tags = Class.Tags
	if Class_Tags then
		for _, Tag in next, Class_Tags do
			if string_lower(Tag) == "service" then
				return true
			end
		end
	end
	return false
end

function GetClasses()
	if RbxApi == nil then return {} end
	local classTable = {}
	for _,Class in next, RbxApi.InstanceClasses do
		if IsCreatable(Class) and not IsAService(Class) then
			table_insert(classTable, Class.Name)
		end
	end
	return classTable
end

local function sortAlphabetic(t, property)
	table_sort(t, function(x,y) return x[property] < y[property] end)
end

function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
	local totalSize = Dex.AbsoluteSize.Y

	if #choices == 0 then
		return
	end

	table_sort(choices, function(a,b) return a < b end)

	local frame = Create('Frame',{
		Name = "InsertObject",
		Size = UDim2_new(0, 200, 1, 0),
		BackgroundTransparency = 1,
		Active = true
	})

	local menu, arrow, expanded, margin = nil, nil, false, DropDown.BorderSizePixel

	local function hideMenu()
		expanded = false
		if frame then
			CurrentInsertObjectWindow.Visible = false
		end
	end

	local function showMenu()
		expanded = true
		menu = Create('ScrollingFrame',{
			Size = UDim2_new(0, 200, 1, 0),
			CanvasSize = UDim2_new(0, 500, 0, #choices * DropDown.Height),
			Position = UDim2_new(0, margin, 0, 0),
			BackgroundTransparency = 0,
			BackgroundColor3 = DropDown.BackColor,
			BorderColor3 = DropDown.BorderColor,
			BorderSizePixel = DropDown.BorderSizePixel,
			TopImage = "rbxasset://textures/blackBkg_square.png",
			MidImage = "rbxasset://textures/blackBkg_square.png",
			BottomImage = "rbxasset://textures/blackBkg_square.png",
			Active = true,
			ZIndex = 5,
			Parent = frame
		})

		local function choice(name)
			onClick(name)
			hideMenu()
		end

		for i,name in next, choices do
			local option = CreateRightClickMenuItem(name, {}, function()
				choice(name)
			end,1)
			option.Size = UDim2_new(1, 0, 0, 20)
			option.Position = UDim2_new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end
	showMenu()
	return frame
end

function CreateInsertObject()
	if not CurrentInsertObjectWindow then return end
	CurrentInsertObjectWindow.Visible = true
	if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Position = UDim2_new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
	end
	if CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Parent = Dex
	end
end

function GetCorrectIcon(Class)
	if type(Class) == "string" then
		if ExplorerIndex[Class] then
			return ExplorerIndex[Class]
		end
	elseif typeof(Class) == "Instance" then
		if ExplorerIndex[Class.ClassName] then
			return ExplorerIndex[Class.ClassName]
		end
		for ClassIndex, ImageIndex in next, ExplorerIndex do
			if IsA(Class, ClassIndex) then
				return ImageIndex
			end
		end
	end
	return 0
end

function CreateRightClickMenuItem(text, customizationData, onClick, insObj)
	local button = Create('TextButton',{
		Font = customizationData.Font or DropDown.Font,
		FontSize = customizationData.FontSize or DropDown.FontSize,
		TextColor3 = customizationData.TextColor or DropDown.TextColor,
		TextXAlignment = customizationData.TextXAlignment or DropDown.TextXAlignment,
		AutoButtonColor = false,
		BorderSizePixel = 0,
		BackgroundTransparency = 1,
		Active = true,
		Text = text
	})

	if insObj == 1 then
		local newIcon = Icon(nil,GetCorrectIcon(text) or 0)
		newIcon.Position = UDim2_new(0,0,0,2)
		newIcon.Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE)
		newIcon.IconMap.ZIndex = 5
		newIcon.Parent = button
		button.Text = string_rep(" ", 4)..button.Text
	elseif insObj == 2 then
		button.FontSize = Enum.FontSize.Size11
	end

	Connect(button.MouseEnter, function()
		button.TextColor3 = DropDown.TextColorOver
		if not insObj and CurrentInsertObjectWindow then
			if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
				CreateInsertObject()
			elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
				CurrentInsertObjectWindow.Visible = false
			end
		end
	end)
	Connect(button.MouseLeave, function()
		button.TextColor3 = DropDown.TextColor
	end)
	Connect(button.Activated, function()
		button.TextColor3 = DropDown.TextColor
		onClick(text)
	end)
	return button
end

function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
	local frame = Create('Frame',{
		Name = "DropDown",
		Size = UDim2_new(0, 200, 1, 0),
		BackgroundTransparency = 1,
		Active = true
	})

	local menu, arrow, expanded, margin = nil, nil, false, DropDown.BorderSizePixel

	local function hideMenu()
		expanded = false
		if frame then
			Destroy(frame)
			DestroyRightClick()
		end
	end

	local function showMenu()
		expanded = true
		menu = Create('Frame',{
			Size = UDim2_new(0, 200, 0, #choices * DropDown.Height),
			Position = UDim2_new(0, margin, 0, 5),
			BackgroundTransparency = 0,
			BackgroundColor3 = DropDown.BackColor,
			BorderColor3 = DropDown.BorderColor,
			BorderSizePixel = DropDown.BorderSizePixel,
			Active = true,
			ZIndex = 5,
			Parent = frame
		})

		local UICorner = Create('UICorner',{
			Name = "",
			CornerRadius = UDim.new(0, 12),
			Parent = menu
		})

		local function choice(name)
			onClick(name)
			hideMenu()
		end

		for i,name in next, choices do
			local option = CreateRightClickMenuItem(name, {TextXAlignment = "Center"}, function()
				choice(name)
			end)
			option.Size = UDim2_new(1, 0, 0, 20)
			option.Position = UDim2_new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end
	showMenu()
	return frame
end

function checkMouseInGui(gui)
	if gui == nil then return false end
	local guiPosition, guiSize = gui.AbsolutePosition, gui.AbsoluteSize
	return ( Mouse.X >= guiPosition.X and Mouse.X <= guiPosition.X + guiSize.X and Mouse.Y >= guiPosition.Y and Mouse.Y <= guiPosition.Y + guiSize.Y) and true or false
end

local Clipboard = {}

local getTextWidth do
	local text = Create('TextLabel',{
		Name = "TextWidth",
		TextXAlignment = 'Left',
		TextYAlignment = 'Center',
		Font = FONT,
		FontSize = FONT_SIZE,
		Text = "",
		Position = UDim2_new(),
		Size = UDim2_new(1,0,1,0),
		Visible = false,
		Parent = explorerPanel
	})
	function getTextWidth(s)
		text.Text = s
		return text.TextBounds.X
	end
end

local nameScanned, TreeList, NodeLookup, QuickButtons, nodeWidth = false, {}, {}, {}, 0

function filteringInstances()
	return (explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Instances") and true or false
end

function lookForAName(obj, name)
	for _,v in ipairs(GetChildren(obj)) do
		if string_find(string_lower(tostring(v)), string_lower(name)) then
			nameScanned = true
		end
		lookForAName(v, name)
	end
end

function scanName(obj)
	nameScanned = false
	if string_find(string_lower(obj.Name),string_lower(explorerFilter.Text)) then
		nameScanned = true
	else
		lookForAName(obj,explorerFilter.Text)
	end
	return nameScanned
end

function updateActions()
	for _,v in next, QuickButtons do
		v.Toggle(v.Cond() and true or false)
	end
end

local updateList,rawUpdateList,updateScroll,rawUpdateSize do
	local function r(t)
		for i = 1,#t do
			if not filteringInstances() or scanName(t[i].Object) then
				table_insert(TreeList, t[i])
				local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
				if w > nodeWidth then
					nodeWidth = w
				end
				if t[i].Expanded or filteringInstances() then
					r(t[i])
				end
			end
		end
	end

	function rawUpdateSize()
		scrollBarH.TotalSpace = nodeWidth
		scrollBarH.VisibleSpace = listFrame.AbsoluteSize.X
		scrollBarH:Update()
		local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
		scrollBarH.GUI.Visible = visible

		listFrame.Size = UDim2_new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

		scrollBar.VisibleSpace = math_ceil(listFrame.AbsoluteSize.Y/ENTRY_BOUND)
		scrollBar.GUI.Size = UDim2_new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

		scrollBar.TotalSpace = #TreeList+1
		scrollBar:Update()
	end

	function rawUpdateList()
		TreeList = {}
		nodeWidth = 0
		r(NodeLookup[workspace.Parent])
		r(NodeLookup[DexOutput])
		if DexStorageEnabled then
			r(NodeLookup[DexStorage])
		end
		if NilStorageEnabled then
			r(NodeLookup[NilStorage])
		end
		if RunningScriptsStorageEnabled then
			r(NodeLookup[RunningScriptsStorage])
		end
		rawUpdateSize()
		updateActions()
	end

	local updatingList = false
	function updateList()
		if updatingList or filteringInstances() then return end
		updatingList = true
		delay(1.5, function()
			updatingList = false
			rawUpdateList()
		end)
	end

	local updatingScroll = false
	function updateScroll()
		if updatingScroll then return end
		updatingScroll = true
		delay(1.5, function()
			updatingScroll = false
			scrollBar:Update()
		end)
	end
end

local Selection

do
	local SelectionList, SelectionSet, Updates = {}, {}, true

	Selection = {
		Selected = SelectionSet,
		List = SelectionList
	}

	local function addObject(object)
		local lupdate, supdate = false, false

		if not SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				table_insert(SelectionList,object)
				SelectionSet[object] = true
				node.Selected = true
				node = node.Parent
				while node do
					if not node.Expanded then
						node.Expanded = true
						lupdate = true
					end
					node = node.Parent
				end
				supdate = true
			end
		end
		return lupdate,supdate
	end

	function Selection:Set(objects)
		local lupdate, supdate = false, false

		if #SelectionList > 0 then
			for i = 1,#SelectionList do
				local object = SelectionList[i]
				local node = NodeLookup[object]
				if node then
					node.Selected = false
					SelectionSet[object] = nil
				end
			end

			SelectionList = {}
			Selection.List = SelectionList
			supdate = true
		end

		for i = 1,#objects do
			local l,s = addObject(objects[i])
			lupdate = l or lupdate
			supdate = s or supdate
		end

		if lupdate then
			rawUpdateList()
			supdate = true
		elseif supdate then
			scrollBar:Update()
		end

		if supdate then
			SelectionChanged_Bindable:Fire()
			updateActions()
		end
	end

	function Selection:Add(object)
		local l,s = addObject(object)
		if l then
			rawUpdateList()
			if Updates then
				SelectionChanged_Bindable:Fire()
				updateActions()
			end
		elseif s then
			scrollBar:Update()
			if Updates then
				SelectionChanged_Bindable:Fire()
				updateActions()
			end
		end
	end

	function Selection:StopUpdates()
		Updates = false
	end

	function Selection:ResumeUpdates()
		Updates = true
		SelectionChanged_Bindable:Fire()
		updateActions()
	end

	function Selection:Remove(object,noupdate)
		if SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				node.Selected = false
				SelectionSet[object] = nil
				for i = 1,#SelectionList do
					if SelectionList[i] == object then
						table_remove(SelectionList,i)
						break
					end
				end
				if not noupdate then
					scrollBar:Update()
				end
				SelectionChanged_Bindable:Fire()
				updateActions()
			end
		end
	end

	function Selection:Get()
		local list = {}
		for i = 1,#SelectionList do
			list[i] = SelectionList[i]
		end
		return list
	end

	SetSelection_Bindable.OnInvoke = function(...)
		Selection:Set(...)
	end

	GetSelection_Bindable.OnInvoke = function()
		return Selection:Get()
	end
end

function CreateCaution(title,msg)
	local newCaution = CautionWindow
	local MainWindow = newCaution.MainWindow
	newCaution.Visible = true
	newCaution.Title.Text = title
	MainWindow.Desc.Text = msg
	Connect(MainWindow.Ok.MouseButton1Up, function()
		newCaution.Visible = false
	end)
end

function CreateTableCaution(title,msg)
	if type(msg) ~= "table" then
		return CreateCaution(title, tostring(msg))
	end
	local newCaution = Clone(TableCautionWindow)
	newCaution.Title.Text = title
	local TableList = newCaution.MainWindow.TableResults
	local TableTemplate = newCaution.MainWindow.TableTemplate
	for _,v in next, msg do
		local newResult = Clone(TableTemplate)
		newResult.Type.Text = typeof(v)
		newResult.Value.Text = tostring(v)
		newResult.Position = UDim2_new(0,0,0, #GetChildren(TableList) * 20)
		newResult.Parent = TableList
		TableList.CanvasSize = UDim2_new(0,0,0, #GetChildren(TableList) * 20)
		newResult.Visible = true
	end
	newCaution.Parent = Dex
	newCaution.Visible = true
	Connect(newCaution.MainWindow.Ok.MouseButton1Up, function()
		Destroy(newCaution)
	end)
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = string_split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2_new(x,y)
	elseif type == "Vector3" then
		local list = string_split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3_new(x,y,z)
	elseif type == "Color3" then
		local list = string_split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3_new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = string_split(string_gsub(string_gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2_new(xScale, xOffset, yScale, yOffset)
	elseif type == "Number" then
		return tonumber(value)
	elseif type == "String" then
		return value
	elseif type == "NumberRange" then
		local list = string_split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange_new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange_new(x,y)
	elseif type == "Script" then
		local success,err = pcall(function()
			_G.D_E_X_DONOTUSETHISPLEASE = nil
			loadstring(
				"_G.D_E_X_DONOTUSETHISPLEASE = "..value
			)()
			return _G.D_E_X_DONOTUSETHISPLEASE
		end)
		if err then
			return nil
		end
	else
		return nil
	end
end

local function ToPropValue(value,type)
	if type == "Vector2" then
		local list = string_split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2_new(x,y)
	elseif type == "Vector3" then
		local list = string_split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3_new(x,y,z)
	elseif type == "Color3" then
		local list = string_split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3_new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = string_split(string_gsub(string_gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2_new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = string_split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif string_sub(value,1,4) == "Enum" then
		local getEnum = value
		while true do
			local x,y = string_find(getEnum,".")
			if y then
				getEnum = string_sub(getEnum,y+1)
			else
				break
			end
		end
		return getEnum
	else
		return nil
	end
end

function PromptRemoteCaller(inst)
	if CurrentRemoteWindow then
		Destroy(CurrentRemoteWindow)
		CurrentRemoteWindow = nil
	end
	CurrentRemoteWindow = Clone(RemoteWindow)
	CurrentRemoteWindow.Parent = Dex
	CurrentRemoteWindow.Visible = true

	local displayValues, ArgumentList, ArgumentTemplate = false, CurrentRemoteWindow.MainWindow.Arguments, CurrentRemoteWindow.MainWindow.ArgumentTemplate

	if IsA(inst, "RemoteEvent") then
		CurrentRemoteWindow.Title.Text = "Fire Event"
		CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
		CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
		CurrentRemoteWindow.MainWindow.Desc2.Visible = false
	end

	local newArgument = Clone(ArgumentTemplate)
	newArgument.Parent = ArgumentList
	newArgument.Visible = true
	Connect(newArgument.Type.MouseButton1Down, function()
		createDDown(newArgument.Type, function(choice)
			newArgument.Type.Text = choice
		end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
	end)

	Connect(CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up, function()
		if CurrentRemoteWindow and inst.Parent ~= nil then
			local MyArguments = {}
			for _,v in ipairs(GetChildren(ArgumentList)) do
				table_insert(MyArguments, ToValue(v.Value.Text,v.Type.Text))
			end
			if IsA(inst, "RemoteFunction") then
				if displayValues then
					pcall(function()
						local myResults = inst:InvokeServer(unpack(MyArguments))
						if myResults then
							CreateTableCaution("Remote Caller",myResults)
						else
							CreateCaution("Remote Caller","This remote didn't return anything.")
						end
					end)
				else
					pcall(function()
						inst:InvokeServer(unpack(MyArguments))
					end)
				end
			else
				inst:FireServer(unpack(MyArguments))
			end
			Destroy(CurrentRemoteWindow)
			CurrentRemoteWindow = nil
		end
	end)

	Connect(CurrentRemoteWindow.MainWindow.Add.MouseButton1Up, function()
		if CurrentRemoteWindow then
			local newArgument = Clone(ArgumentTemplate)
			newArgument.Position = UDim2_new(0,0,0,#GetChildren(ArgumentList) * 20)
			ArgumentList.CanvasSize = UDim2_new(0,0,0,#GetChildren(ArgumentList) * 20)
			newArgument.Visible = true
			newArgument.Parent = ArgumentList
			Connect(newArgument.Type.MouseButton1Down, function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)
		end
	end)

	Connect(CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up, function()
		if CurrentRemoteWindow then
			local A = GetChildren(ArgumentList)
			local B = #A
			if B > 1 then
				Destroy(A[B])
				ArgumentList.CanvasSize = UDim2_new(0, 0, 0, B * 20)
			end
		end
	end)

	Connect(CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up, function()
		if CurrentRemoteWindow then
			Destroy(CurrentRemoteWindow)
			CurrentRemoteWindow = nil
		end
	end)

	Connect(CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up, function()
		if displayValues then
			displayValues = false
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
		else
			displayValues = true
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
		end
	end)
end

function DestroyRightClick()
	if currentRightClickMenu then
		Destroy(currentRightClickMenu)
		currentRightClickMenu = nil
	end
	if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Visible = false
	end
end

local tabChar = string_rep(" ", 4)

local function getSmaller(a, b, notLast)
	local aByte = string_byte(a) or -1
	local bByte = string_byte(b) or -1
	if aByte == bByte then
		if notLast and #a == 1 and #b == 1 then
			return -1
		elseif #b == 1 then
			return false
		elseif #a == 1 then
			return true
		else
			return getSmaller(string_sub(a, 2), string_sub(b, 2), notLast)
		end
	else
		return aByte < bByte
	end
end

local function parseData(obj, numTabs, isKey, overflow, noTables, forceDict)
	local objType, objStr = type(obj), tostring(obj)
	if objType == "table" then
		if noTables then return objStr end
		local isCyclic, out, nextIndex, isDict, hasTables, data = overflow[obj], {}, 1, false, false, {}
		overflow[obj] = true

		for key, val in next, obj do
			if not hasTables and type(val) == "table" then
				hasTables = true
			end

			if not isDict and key ~= nextIndex then
				isDict = true
			else
				nextIndex += 1
			end

			table_insert(data, {key, val})
		end

		if isDict or hasTables or forceDict then
			table_insert(out, (isCyclic and "Cyclic " or "") .. "{")
			table_sort(data, function(a, b)
				local aType, bType = type(a[2]), type(b[2])
				if bType == "string" and aType ~= "string" then
					return false
				end
				local res = getSmaller(aType, bType, true)
				return (res == -1) and getSmaller(tostring(a[1]), tostring(b[1])) or res
			end)
			for i = 1, #data do
				local arr = data[i]
				local nowKey, nowVal = arr[1], arr[2]
				local parseKey, parseVal = parseData(nowKey, numTabs+1, true, overflow, isCyclic), parseData(nowVal, numTabs+1, false, overflow, isCyclic)
				if isDict then
					local nowValType, preStr, postStr = type(nowVal), "", ""
					if i > 1 and (nowValType == "table" or type(data[i-1][2]) ~= nowValType) then
						preStr = "\n"
					end
					if i < #data and nowValType == "table" and type(data[i+1][2]) ~= "table" and type(data[i+1][2]) == nowValType then
						postStr = "\n"
					end
					table_insert(out, preStr .. string_rep(tabChar, numTabs+1) .. parseKey .. " = " .. parseVal .. ";" .. postStr)
				else
					table_insert(out, string_rep(tabChar, numTabs+1) .. parseVal .. ";")
				end
			end
			table_insert(out, string_rep(tabChar, numTabs) .. "}")
		else
			local data2 = {}
			for i = 1, #data do
				local arr = data[i]
				local nowVal = arr[2]
				local parseVal = parseData(nowVal, 0, false, overflow, isCyclic)
				table_insert(data2, parseVal)
			end
			table_insert(out, "{" .. table_concat(data2, ", ") .. "}")
		end

		return table_concat(out, "\n")
	else
		local returnVal = nil
		if (objType == "string" or objType == "Content") and (not isKey or tonumber(string_sub(obj, 1, 1))) then
			local retVal = '"' .. objStr .. '"'
			if isKey then
				retVal = "[" .. retVal .. "]"
			end
			returnVal = retVal
		elseif objType == "EnumItem" then
			returnVal = "Enum." .. tostring(obj.EnumType) .. "." .. obj.Name
		elseif objType == "Enum" then
			returnVal = "Enum." .. objStr
		elseif objType == "Instance" then
			returnVal = obj.Parent and obj:GetFullName() or obj.ClassName
		elseif objType == "CFrame" then
			returnVal = "CFrame.new(" .. objStr .. ")"
		elseif objType == "Vector3" then
			returnVal = "Vector3_new(" .. objStr .. ")"
		elseif objType == "Vector2" then
			returnVal = "Vector2_new(" .. objStr .. ")"
		elseif objType == "UDim2" then
			returnVal = "UDim2_new(" .. objStr:gsub("[{}]", "") .. ")"
		elseif objType == "BrickColor" then
			returnVal = "BrickColor.new(\"" .. objStr .. "\")"
		elseif objType == "Color3" then
			returnVal = "Color3_new(" .. objStr .. ")"
		elseif objType == "NumberRange" then
			returnVal = "NumberRange.new(" .. objStr:gsub("^%s*(.-)%s*$", "%1"):gsub(" ", ", ") .. ")"
		elseif objType == "PhysicalProperties" then
			returnVal = "PhysicalProperties.new(" .. objStr .. ")"
		else
			returnVal = objStr
		end
		return returnVal
	end
end

function tableToString(t)
	local success, result = pcall(function()
		return parseData(t, 0, false, {}, nil, false)
	end)
	return success and result or 'error'
end

local HasSpecial = function(str)
	return (string_match(str, "%c") or string_match(str, "%s") or string_match(str, "%p")) ~= nil
end

local GetPath = function(Instance)
	local Obj, string, temp, error = Instance, {}, {}, false

	while Obj ~= game do
		if Obj == nil then
			error = true
			break
		end
		table_insert(temp, Obj.Parent == game and Obj.ClassName or tostring(Obj))
		Obj = Obj.Parent
	end

	table_insert(string, "game:GetService(\"" .. temp[#temp] .. "\")")

	for i = #temp - 1, 1, -1 do
		table_insert(string, HasSpecial(temp[i]) and "[\"" .. temp[i] .. "\"]" or "." .. temp[i])
	end

	return (error and "nil -- Path contained an invalid instance" or table_concat(string, ""))
end

function rightClickMenu(sObj)
	local actions = {
		'Cut',
		'Copy',
		'Paste Into',
		'Duplicate',
		'Delete',
		'Group',
		'Select Children',
		'Insert Part',
		'Insert Object',
		'Save to File',
		'Copy Path'
	}
	if sObj == RunningScriptsStorageMain or sObj == NilStorageMain then
		table_insert(actions, 1, "Refresh Instances")
	elseif IsA(sObj, "RemoteEvent") or IsA(sObj, "RemoteFunction") then
		table_insert(actions, 10, "Call Remote")
	elseif IsA(sObj, "BasePart") then
		table_insert(actions, 8, "Teleport to")
	elseif IsA(sObj, "ClickDetector") then
		table_insert(actions, 8, "Fire ClickDetector")
	elseif IsA(sObj, "TouchTransmitter") then
		table_insert(actions, 8, "Fire TouchTransmitter")
	elseif IsA(sObj, "ProximityPrompt") then
		table_insert(actions, 8, "Fire ProximityPrompt")
	elseif IsA(sObj, "Model") then
		table_insert(actions, 7, "Ungroup")
	elseif IsA(sObj, "LocalScript") or IsA(sObj, "ModuleScript") then
		table_insert(actions, 7, "View Script")
		table_insert(actions, 8, "Save Script")
	end

	currentRightClickMenu = CreateRightClickMenu(actions, "", false, function(option)
		if option == "Cut" then
			if not Option.Modifiable then
				return
			end
			local cut = {}
			for _, Selected in ipairs(Selection.List) do
				local obj = Clone(Selected)
				if obj then
					table_insert(Clipboard, obj)
					table_insert(cut, Selected)
				end
			end
			for _, CutInstance in next, cut do
				pcall(game.Destroy, CutInstance)
			end
			updateActions()
		elseif option == "Copy" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				table_insert(Clipboard, Clone(Selected))
			end
			updateActions()
		elseif option == "Paste Into" then
			if not Option.Modifiable then
				return
			end
			local parent = Selection.List[1] or workspace
			for _, Copied in next, Clipboard do
				Clone(Copied).Parent = parent
			end
			table_clear(Clipboard)
		elseif option == "Duplicate" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				Clone(Selected).Parent = Selected.Parent or workspace
			end
		elseif option == "Delete" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				pcall(game.Destroy, Selected)
			end
			Selection:Set({})
		elseif option == "Group" then
			if not Option.Modifiable then
				return
			end
			local A = Create("Model",{
				Parent = Selection.List[1].Parent or workspace
			})
			for B, C in ipairs(Selection:Get()) do
				C.Parent = A
			end
			Selection:Set({})
		elseif option == "Ungroup" then
			if not Option.Modifiable then
				return
			end
			local ungrouped = {}
			for _, Selected in ipairs(Selection:Get()) do
				for _, Selected_Instance in ipairs(GetChildren(Selected)) do
					Selected_Instance.Parent = Selected.Parent or workspace
					table_insert(ungrouped, Selected_Instance)
				end
				pcall(game.Destroy, Selected)
			end
			Selection:Set({})
			if GetSetting_Bindable:Invoke("SelectUngrouped") then
				for _, v in next, ungrouped do
					Selection:Add(v)
				end
			end
		elseif option == "Select Children" then
			if not Option.Modifiable then
				return
			end
			Selection:StopUpdates()
			for _, Selected in ipairs(Selection:Get()) do
				for _, Selected_Instance in ipairs(GetChildren(Selected)) do
					Selection:Add(Selected_Instance)
				end
			end
			Selection:ResumeUpdates()
		elseif option == "Teleport to" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				pcall(function()
					LocalPlayer.Character:MoveTo(Selected.Position)
				end)
				break
			end
		elseif option == "Insert Part" then
			if not Option.Modifiable then
				return
			end
			local insertedParts = {}
			for _, Selected in ipairs(Selection:Get()) do
				pcall(function()
					table_insert(insertedParts, Create('Part', {
						Position = LocalPlayer.Character.Head.Position + Vector3_new(0, 3, 0),
						Parent = Selected
					}))
				end)
			end
		elseif option == "Save to File" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				local Success, Saved_As = pcall(writeinstance, Selected, "rbxmx")
				if Success then
					CreateCaution(tabChar.."[writeinstance]: Success", "Instance '"..tostring(Selected)..[[' was saved to your workspace folder as "]]..Saved_As..[["! This file can now be inserted in Roblox Studio.]])
				else
					CreateCaution(tabChar.."[writeinstance]: Error", "\n"..Saved_As)
				end
			end
		elseif option == 'Copy Path' then
			if not Option.Modifiable then
				return
			end
			local paths = {}
			for _, Selected in ipairs(Selection:Get()) do
				table_insert(paths, GetPath(Selected))
			end
			if #paths > 1 then
				setclipboard(tableToString(paths))
			elseif #paths == 1 then
				setclipboard(paths[1])
			end
		elseif option == "Call Remote" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				PromptRemoteCaller(Selected)
				break
			end
		elseif option == "Fire ClickDetector" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				fireclickdetector(Selected)
			end
		elseif option == "Fire TouchTransmitter" then
			if not Option.Modifiable then
				return
			end
			local A = Selection:Get()
			local B = A[1]
			local C = B.Parent
			local D = A[2]
			firetouchinterest(D, C, 0)
			firetouchinterest(D, C, 1)
		elseif option == "Fire ProximityPrompt" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				fireproximityprompt(Selected)
			end
		elseif option == "View Script" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				OpenScript_Bindable:Fire(Selected)
			end
		elseif option == "Save Script" then
			if not Option.Modifiable then
				return
			end
			for _, Selected in ipairs(Selection:Get()) do
				writefile(game.PlaceId .. '_' ..string_gsub(Selected, "%W", "").. '_'..math_random(1e5, 1e9+1e9+1e8+1e7+1e7+1e7+1e7+1e6+1e6+1e6+1e6+1e6+1e6+1e6+1e5+1e5+1e5+1e5+1e4+1e4+1e4+1e4+1e4+1e4+1e4+1e4+1e3+1e3+1e3+1e2+1e2+1e2+1e2+1e2+1e2+1e1+1e1+1e1+1e1+7)..'.lua', decompile(Selected))
			end
		elseif option == 'Refresh Instances' then
			ClearAllChildren(sObj)
			if sObj == NilStorageMain then
				for i, v in ipairs(getnilinstances()) do
					if v ~= DexOutput and v ~= DexOutputMain and v ~= DexStorage and v ~= DexStorageMain and v ~= RunningScriptsStorage and v ~= RunningScriptsStorageMain and v ~= NilStorage and v ~= NilStorageMain then
						pcall(function()
							Clone(v).Parent = NilStorageMain
						end)
					end
				end
			elseif sObj == RunningScriptsStorageMain then
				if not GetSetting_Bindable:Invoke("RSSIncludeRL") then
					for i,v in ipairs(getscripts()) do
						if v ~= RunningScriptsStorage and v ~= DexStorage then
							v.Archivable = true
							local ls =Clone(v)
							pcall(function()
								ls.Disabled = true
								ls.Parent = RunningScriptsStorageMain
							end)
						end
					end
				else
					for i,v in ipairs(getinstancelist()) do
						if typeof(v) == "Instance" and IsA(v, "LuaSourceContainer") then
							if v ~= RunningScriptsStorage and v ~= DexStorage then
								pcall(function()
									v.Archivable = true
									local Script = Clone(v)
									Script.Disabled = true
									Script.Parent = RunningScriptsStorageMain
								end)
							end
						end
					end
				end
			end
		end
	end)
	currentRightClickMenu.Parent = Dex
	currentRightClickMenu.Position = UDim2_new(0, Mouse.X,0, Mouse.Y)
	if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
		currentRightClickMenu.Position = UDim2_new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, Mouse.Y)
	end
end

local function cancelReparentDrag()
end

local function cancelSelectDrag()
end

do
	local listEntries, nameConnLookup = {}, {}

	local mouseDrag = Create('ImageButton',{
		Name = "MouseDrag",
		Position = UDim2_new(-.25,0,-.25,0),
		Size = UDim2_new(1.5,0,1.5,0),
		Transparency = 1,
		AutoButtonColor = false,
		Active = true,
		ZIndex = 10
	})

	local function dragSelect(last,add,button)
		local conDrag, conUp

		conDrag = Connect(mouseDrag.MouseMoved, function(x,y)
			local pos, size = Vector2_new(x,y) - listFrame.AbsolutePosition, listFrame.AbsoluteSize
			if pos.X < 0 or pos.X > size.X or pos.Y < 0 or pos.Y > size.Y then return end

			local i = math_ceil(pos.Y/ENTRY_BOUND) + scrollBar.ScrollIndex
			for n = i<last and i or last, i>last and i or last do
				local node = TreeList[n]
				if node then
					if add then
						Selection:Add(node.Object)
					else
						Selection:Remove(node.Object)
					end
				end
			end
			last = i
		end)

		function cancelSelectDrag()
			mouseDrag.Parent = nil
			Disconnect(conDrag)
			Disconnect(conUp)
			function cancelSelectDrag() end
		end

		conUp = Connect(mouseDrag[button], cancelSelectDrag)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local function dragReparent(object,dragGhost,clickPos,ghostOffset)
		local conDrag, conUp, conUp2, parentIndex
		local dragged = false
		local parentHighlight = Create('Frame',{
			Transparency = 1,
			Visible = false,
			Create('Frame',{
				BorderSizePixel = 0,
				BackgroundColor3 = Color3_new(),
				BackgroundTransparency = .1,
				Position = UDim2_new(),
				Size = UDim2_new(1,0,0,1)
			}),
			Create('Frame',{
				BorderSizePixel = 0,
				BackgroundColor3 = Color3_new(),
				BackgroundTransparency = .1,
				Position = UDim2_new(1,0,0,0),
				Size = UDim2_new(0,1,1,0)
			}),
			Create('Frame',{
				BorderSizePixel = 0,
				BackgroundColor3 = Color3_new(),
				BackgroundTransparency = .1,
				Position = UDim2_new(0,0,1,0),
				Size = UDim2_new(1,0,0,1)
			}),
			Create('Frame',{
				BorderSizePixel = 0,
				BackgroundColor3 = Color3_new(),
				BackgroundTransparency = .1,
				Position = UDim2_new(),
				Size = UDim2_new(0,1,1,0)
			}),
		})
		SetZIndex(parentHighlight,9)
		conDrag = Connect(mouseDrag.MouseMoved, function(x,y)
			local dragPos = Vector2_new(x,y)
			if dragged then
				local pos,size = dragPos - listFrame.AbsolutePosition,listFrame.AbsoluteSize
				parentIndex = nil
				parentHighlight.Visible = false
				if pos.X >= 0 and pos.X <= size.X and pos.Y >= 0 and pos.Y <= size.Y + ENTRY_SIZE*2 then
					local i = math_ceil(pos.Y/ENTRY_BOUND-2)
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node and node.Object ~= object and not IsAncestorOf(object, node.Object) then
						parentIndex = i
						local entry = listEntries[i]
						if entry then
							parentHighlight.Visible = true
							parentHighlight.Position = UDim2_new(0,1,0,entry.AbsolutePosition.Y-listFrame.AbsolutePosition.Y)
							parentHighlight.Size = UDim2_new(0,size.X-4,0,entry.AbsoluteSize.Y)
						end
					end
				end
				dragGhost.Position = UDim2_new(0,dragPos.X+ghostOffset.X,0,dragPos.Y+ghostOffset.Y)
			elseif (clickPos-dragPos).Magnitude > 8 then
				dragged = true
				SetZIndex(dragGhost,9)
				dragGhost.IndentFrame.Transparency = .25
				dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
				dragGhost.Position = UDim2_new(0,dragPos.X+ghostOffset.X,0,dragPos.Y+ghostOffset.Y)
				dragGhost.Parent = GetScreen(listFrame)
				parentHighlight.Parent = listFrame
			end
		end)

		function cancelReparentDrag()
			mouseDrag.Parent = nil
			Disconnect(conDrag)
			Disconnect(conUp)
			Disconnect(conUp2)
			Destroy(dragGhost)
			Destroy(parentHighlight)
			function cancelReparentDrag() end
		end

		local wasSelected = Selection.Selected[object]

		if not wasSelected and Option.Selectable then
			Selection:Set({object})
		end

		conUp = Connect(mouseDrag.MouseButton1Up, function()
			cancelReparentDrag()
			if dragged then
				if parentIndex then
					local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
					if parentNode then
						parentNode.Expanded = true
						local parentObj = parentNode.Object
						local function parent(a,b)
							a.Parent = b
						end
						if Option.Selectable then
							local list = Selection.List
							for i = 1,#list do pcall(parent,list[i],parentObj) end
						else
							pcall(parent,object,parentObj)
						end
					end
				end
			else
				if not wasSelected and Option.Selectable then
					Selection:Set({object})
				elseif wasSelected then
					Selection:Set({})
				end
			end
		end)
		conUp2 = Connect(mouseDrag.MouseButton2Down, function()
			cancelReparentDrag()
		end)
		mouseDrag.Parent = GetScreen(listFrame)
	end

	local entryTemplate = Create('ImageButton',{
		Name = "Entry",
		Transparency = 1,
		AutoButtonColor = false,
		Position = UDim2_new(),
		Size = UDim2_new(1,0,0,ENTRY_SIZE),
		Create('Frame',{
			Name = "IndentFrame",
			BackgroundTransparency = 1,
			BackgroundColor3 = GuiColor.Selected,
			BorderColor3 = GuiColor.BorderSelected,
			Position = UDim2_new(),
			Size = UDim2_new(1,0,1,0),
			Create(SpecialIcon('ImageButton',NodeTextures[1],UDim2_new(0,9,0,5)),{
				Name = "Expand",
				AutoButtonColor = false,
				Position = UDim2_new(0,-9,.5,-8/2),
				Size = UDim2_new(0,16,0,16)
			}),
			Create(Icon(nil,0),{
				Name = "ExplorerIcon",
				Position = UDim2_new(0,2+ENTRY_PADDING,.5,-GUI_SIZE/2),
				Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE)
			}),
			Create('TextLabel',{
				Name = "EntryText",
				BackgroundTransparency = 1,
				TextColor3 = GuiColor.Text,
				TextXAlignment = 'Left',
				TextYAlignment = 'Center',
				Font = FONT,
				FontSize = FONT_SIZE,
				Text = "",
				Position = UDim2_new(0,2+ENTRY_SIZE+4,0,0),
				Size = UDim2_new(1,-2,1,0)
			})
		})
	})

	function scrollBar.UpdateCallback(self)
		for i = 1,self.VisibleSpace do
			local node = TreeList[i + self.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if not entry then
					entry = Create(Clone(entryTemplate), {
						Position = UDim2_new(0,2,0,ENTRY_BOUND*(i-1)+2),
						Size = UDim2_new(0,nodeWidth,0,ENTRY_SIZE),
						ZIndex = listFrame.ZIndex
					})
					listEntries[i] = entry
					local expand = entry.IndentFrame.Expand
					Connect(expand.MouseEnter, function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								FindFirstChildOfClass(expand, "ImageLabel").Image = NodeTextures[2]
							else
								FindFirstChildOfClass(expand, "ImageLabel").Image = NodeTextures[1]
							end
						end
					end)
					Connect(expand.MouseLeave, function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								FindFirstChildOfClass(expand, "ImageLabel").Image = NodeTextures[2]
							else
								FindFirstChildOfClass(expand, "ImageLabel").Image = NodeTextures[1]
							end
						end
					end)
					Connect(expand.MouseButton1Down, function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							node.Expanded = not node.Expanded
							if node.Object == Dex and node.Expanded then
								CreateCaution(tabChar.."Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
							end
							rawUpdateList()
						end
					end)
					Connect(entry.MouseButton1Down, function(x,y)
						local node = TreeList[i + self.ScrollIndex]
						DestroyRightClick()
						if GetAwaiting_Bindable:Invoke() then
							SetAwaiting_Bindable:Fire(node.Object)
							return
						end
						if not HoldingShift then
							lastSelectedNode = i + self.ScrollIndex
						end
						if HoldingShift and not filteringInstances() then
							if lastSelectedNode then
								if i + self.ScrollIndex - lastSelectedNode > 0 then
									Selection:StopUpdates()
									for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								else
									Selection:StopUpdates()
									for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								end
							end
							return
						end
						if HoldingCtrl then
							if Selection.Selected[node.Object] then
								Selection:Remove(node.Object)
							else
								Selection:Add(node.Object)
							end
							return
						end
						if Option.Modifiable then
							local pos = Vector2_new(x,y)
							dragReparent(node.Object, Clone(entry), pos, entry.AbsolutePosition - pos)
						elseif Option.Selectable then
							if Selection.Selected[node.Object] then
								Selection:Set({})
							else
								Selection:Set({node.Object})
							end
							dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
						end
					end)
					Connect(entry.MouseButton2Down, function()
						if not Option.Selectable then return end
						DestroyRightClick()
						curSelect = entry
						local node = TreeList[i + self.ScrollIndex]
						if GetAwaiting_Bindable:Invoke() then
							SetAwaiting_Bindable:Fire(node.Object)
							return
						end
						if not Selection.Selected[node.Object] then
							Selection:Set({node.Object})
						end
					end)
					Connect(entry.MouseButton2Up, function()
						if not Option.Selectable then return end
						local node = TreeList[i + self.ScrollIndex]
						if checkMouseInGui(curSelect) then
							rightClickMenu(node.Object)
						end
					end)
					entry.Parent = listFrame
				end

				entry.Visible = true

				local object = node.Object

				if #node == 0 then
					entry.IndentFrame.Expand.Visible = false
				elseif node.Expanded then
					FindFirstChildOfClass(entry.IndentFrame.Expand, "ImageLabel").Image = NodeTextures[2]
					entry.IndentFrame.Expand.Visible = true
				else
					FindFirstChildOfClass(entry.IndentFrame.Expand, "ImageLabel").Image = NodeTextures[1]
					entry.IndentFrame.Expand.Visible = true
				end

				Icon(entry.IndentFrame.ExplorerIcon, GetCorrectIcon(object) or 0)

				local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
				entry.IndentFrame.Position = UDim2_new(0,w,0,0)
				entry.IndentFrame.Size = UDim2_new(1,-w,1,0)

				if nameConnLookup[entry] then
					Disconnect(nameConnLookup[entry])
				end

				local text = entry.IndentFrame.EntryText
				text.Text = tostring(object)
PropertyChangedSignal(node.Object, "Name"), function()
					text.Text = tostring(object)
				end)

				entry.IndentFrame.Transparency = node.Selected and 0 or 1
				text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

				entry.Size = UDim2_new(0,nodeWidth,0,ENTRY_SIZE)
			elseif listEntries[i] then
				listEntries[i].Visible = false
			end
		end
		for i = self.VisibleSpace+1,self.TotalSpace do
			local entry = listEntries[i]
			if entry then
				listEntries[i] = nil
				Destroy(entry)
			end
		end
	end

	function scrollBarH.UpdateCallback(self)
		for A = 1, scrollBar.VisibleSpace do
			local B = TreeList[A + scrollBar.ScrollIndex]
			if B then
				local C = listEntries[A]
				if C then
					C.Position = UDim2_new(0, 2 - scrollBarH.ScrollIndex, 0, ENTRY_BOUND * (A - 1) + 2)
				end
			end
		end
	end

	Connect(GetPropertyChangedSignal(listFrame, "AbsoluteSize"), rawUpdateSize)

	local wheelAmount = 6

	Connect(explorerPanel.MouseWheelForward, function()
		scrollBar:ScrollTo((scrollBar.VisibleSpace - 1 > wheelAmount) and scrollBar.ScrollIndex - wheelAmount or scrollBar.ScrollIndex - scrollBar.VisibleSpace)
	end)

	Connect(explorerPanel.MouseWheelBackward, function()
		scrollBar:ScrollTo((scrollBar.VisibleSpace - 1 > wheelAmount) and scrollBar.ScrollIndex + wheelAmount or scrollBar.ScrollIndex + scrollBar.VisibleSpace)
	end)
end
----------------------------------------------------------------
local function insert(t,i,v)
	for n = #t,i,-1 do
		local v = t[n]
		v.Index = n+1
		t[n+1] = v
	end
	v.Index = i
	t[i] = v
end

local function remove(t,i)
	local v = t[i]
	for n = i+1,#t do
		local v = t[n]
		v.Index = n-1
		t[n-1] = v
	end
	t[#t] = nil
	v.Index = 0
	return v
end

local function depth(o)
	local d = -1
	while o do
		o = o.Parent
		d += 1
	end
	return d
end

local connLookup = {}

local function nodeIsVisible(node)
	local visible = true
	node = node.Parent
	while node and visible do
		visible = visible and node.Expanded
		node = node.Parent
	end
	return visible
end

local function removeObject(object)
	local objectNode = NodeLookup[object]

	if not objectNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	Selection:Remove(object, true)

	local parent = objectNode.Parent
	remove(parent, objectNode.Index)
	NodeLookup[object] = nil
	Disconnect(connLookup[object])
	connLookup[object] = nil

	if visible then
		updateList()
	elseif nodeIsVisible(parent) then
		updateScroll()
	end
end

local function moveObject(object,parent)
	local objectNode = NodeLookup[object]
	local parentNode = NodeLookup[parent]

	if not objectNode or not parentNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	local parent = objectNode.Parent
	remove(parent, objectNode.Index)
	objectNode.Parent = parentNode

	objectNode.Depth = depth(object)

	local function r(node,d)
		for i = 1,#node do
			node[i].Depth = d
			r(node[i],d+1)
		end
	end

	r(objectNode, objectNode.Depth + 1)

	insert(parentNode, #parentNode+1, objectNode)

	if visible or nodeIsVisible(objectNode) then
		updateList()
	elseif nodeIsVisible(parent) then
		updateScroll()
	end
end

local InstanceBlacklist = GetSetting_Bindable:Invoke("UseInstanceBlacklist") and {
	['Instance'] = true,
	['VRService'] = true,
	['ContextActionService'] = true,
	['CorePackages'] = true,
	['AssetService'] = true,
	['TouchInputService'] = true,
	['ScriptContext'] = true,
	['FilteredSelection'] = true,
	['MeshContentProvider'] = true,
	['SolidModelContentProvider'] = true,
	['AnalyticsService'] = true,
	['GamepadService'] = true,
	['HapticService'] = true,
	['ChangeHistoryService'] = true,
	['Visit'] = true,
	['SocialService'] = true,
	['SpawnerService'] = true,
	['FriendService'] = true,
	['Geometry'] = true,
	['BadgeService'] = true,
	['PhysicsService'] = true,
	['PluginDebugService'] = true,
	['PluginGuiService'] = true,
	['RobloxPluginGuiService'] = true,
	['CollectionService'] = true,
	['HttpRbxApiService'] = true,
	['TweenService'] = true,
	['TextService'] = true,
	['NotificationService'] = true,
	['AdService'] = true,
	['CSGDictionaryService'] = true,
	['ControllerService'] = true,
	['RuntimeScriptService'] = true,
	['ScriptService'] = true,
	['MouseService'] = true,
	['KeyboardService'] = true,
	['CookiesService'] = true,
	['TimerService'] = true,
	['GamePassService'] = true,
	['KeyframeSequenceProvider'] = true,
	['NonReplicatedCSGDictionaryService'] = true,
	['GuidRegistryService'] = true,
	['PathfindingService'] = true,
	['GroupService'] = true
} or {}

local function check(object)
	return object.AncestryChanged
end

local function addObject(object,noupdate)
	if object.Parent == game and InstanceBlacklist[object.ClassName] or object.ClassName == '' then
		return
	end

	if script then
		local s = pcall(check, object)
		if not s then return end
	end

	local parentNode = NodeLookup[object.Parent]
	if not parentNode then return end

	local objectNode = {
		Object = object,
		Parent = parentNode,
		Index = 0,
		Expanded = false,
		Selected = false,
		Depth = depth(object)
	}

	connLookup[object] = EventConnect(object.AncestryChanged,function(c, p)
		if c == object then
			if not p then
				removeObject(c)
			else
				moveObject(c,p)
			end
		end
	end)

	NodeLookup[object] = objectNode
	insert(parentNode, #parentNode + 1, objectNode)

	if not noupdate then
		if nodeIsVisible(objectNode) then
			updateList()
		elseif nodeIsVisible(objectNode.Parent) then
			updateScroll()
		end
	end
end

local function makeObject(obj,par)
	local newObject = Instance_new(obj.ClassName)
	for i,v in next, obj.Properties do
		pcall(function()
			newObject[tostring(v)] = ToPropValue(v.Value, v.Type)
		end)
	end
	newObject.Parent = par
end

local function writeObject(obj)
	local newObject = {ClassName = obj.ClassName, Properties = {}}
	for i,v in next, RbxApi.GetProperties(obj.className) do
		if v["Name"] ~= "Parent" then
			table_insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
		end
	end
	return newObject
end

local function buildDexStorage()
	updateDexStorageListeners()
end

local dexStorageDebounce = false
local dexStorageListeners = {}

local function updateDexStorage()
	if dexStorageDebounce then return end
	dexStorageDebounce = true
	wait()
	updateDexStorageListeners()
	dexStorageDebounce = false
end

function updateDexStorageListeners()
	for _,v in next, dexStorageListeners do
		Disconnect(v)
	end
	table_clear(dexStorageListeners)
	for _,v in ipairs(GetChildren(DexStorageMain)) do
		pcall(function()
			table_insert(dexStorageListeners, Connect(v.Changed, updateDexStorage))
		end)
	end
end

do
	NodeLookup[workspace.Parent] = {
		Object = workspace.Parent,
		Parent = nil,
		Index = 0,
		Expanded = true
	}

	NodeLookup[DexOutput] = {
		Object = DexOutput,
		Parent = nil,
		Index = 0,
		Expanded = true
	}

	if DexStorageEnabled then
		NodeLookup[DexStorage] = {
			Object = DexStorage,
			Parent = nil,
			Index = 0,
			Expanded = true
		}
	end

	if NilStorageEnabled then
		NodeLookup[NilStorage] = {
			Object = NilStorage,
			Parent = nil,
			Index = 0,
			Expanded = true
		}
	end

	if RunningScriptsStorageEnabled then
		NodeLookup[RunningScriptsStorage] = {
			Object = RunningScriptsStorage,
			Parent = nil,
			Index = 0,
			Expanded = true
		}
	end

	Connect(game.DescendantAdded, addObject)
	Connect(game.DescendantRemoving, removeObject)

	Connect(DexOutput.DescendantAdded, addObject)
	Connect(DexOutput.DescendantRemoving, removeObject)

	if DexStorageEnabled then

		buildDexStorage()

		Connect(DexStorage.DescendantAdded,addObject)
		Connect(DexStorage.DescendantRemoving,removeObject)

		Connect(DexStorage.DescendantAdded,updateDexStorage)
		Connect(DexStorage.DescendantRemoving,updateDexStorage)
	end

	if NilStorageEnabled then
		Connect(NilStorage.DescendantAdded,addObject)
		Connect(NilStorage.DescendantRemoving,removeObject)
	end
	if RunningScriptsStorageEnabled then
		Connect(RunningScriptsStorage.DescendantAdded,addObject)
		Connect(RunningScriptsStorage.DescendantRemoving,removeObject)
	end

	local function ApplyDescendants(o)
		local s, children = pcall(GetDescendants, o)
		if s then
			for i = 1,#children do
				addObject(children[i], true)
			end
		end
	end

	ApplyDescendants(workspace.Parent)
	ApplyDescendants(DexOutput)
	if DexStorageEnabled then
		ApplyDescendants(DexStorage)
	end
	if NilStorageEnabled then
		ApplyDescendants(NilStorage)
	end
	if RunningScriptsStorageEnabled then
		ApplyDescendants(RunningScriptsStorage)
	end
	scrollBar.VisibleSpace = math_ceil(listFrame.AbsoluteSize.Y/ENTRY_BOUND)
	updateList()
end

local actionButtons

do
	actionButtons = {}

	local totalActions = 1
	local currentActions = totalActions
	local function makeButton(icon,over,name,vis,cond)
		local buttonEnabled = false
		local button = Create(SpecialIcon('ImageButton',icon),{
			Name = name .. "Button",
			Visible = Option.Modifiable and Option.Selectable,
			Position = UDim2_new(1,-(GUI_SIZE+2)*currentActions+2,.25,-GUI_SIZE/2),
			Size = UDim2_new(0,GUI_SIZE,0,GUI_SIZE),
			Parent = headerFrame
		})
		local tipText = Create('TextLabel',{
			Name = name .. "Text",
			Text = name,
			Visible = false,
			BackgroundTransparency = 1,
			TextXAlignment = 'Right',
			Font = FONT,
			FontSize = FONT_SIZE,
			Position = UDim2_new(),
			Size = UDim2_new(1,-(GUI_SIZE+2)*totalActions,1,0),
			Parent = headerFrame
		})
		Connect(button.MouseEnter, function()
			if buttonEnabled then
				button.BackgroundTransparency = .9
			end
		end)
		Connect(button.MouseLeave, function()
			button.BackgroundTransparency = 1
		end)
		currentActions += 1
		table_insert(actionButtons, {Obj = button, Cond = cond})
		QuickButtons[#actionButtons+1] = {Obj = button, Cond = cond, Toggle = function(on)
			buttonEnabled = on and true or false
			SpecialIcon(button, on and over or icon)
		end}
		return button
	end
	Connect(makeButton(ActionTextures.Delete[1], ActionTextures.Delete[2],"Delete", true, function()
		return #Selection:Get() > 0
	end).Activated, function()
		if not Option.Modifiable then return end
		for _, Selected in ipairs(Selection:Get()) do
			pcall(game.Destroy, Selected)
		end
		Selection:Set({})
	end)
	Connect(makeButton(ActionTextures.Paste[1], ActionTextures.Paste[2], "Paste", true, function()
		return #Selection:Get() > 0 and #Clipboard > 0
	end).Activated, function()
		if not Option.Modifiable then return end
		local parent = Selection.List[1] or workspace
		for _, Copied in next, Clipboard do
			Clone(Copied).Parent = parent
		end
	end)
	Connect(makeButton(ActionTextures.Copy[1], ActionTextures.Copy[2],"Copy", true, function()
		return #Selection:Get() > 0
	end).Activated, function()
		if not Option.Modifiable then return end
		local list = Selection.List
		for _, Selected in next, list do
			table_insert(Clipboard, Clone(Selected))
		end
		updateActions()
	end)
	makeButton(ActionTextures.AddStar[1], ActionTextures.AddStar[2], "Star", true, function()
		return #Selection:Get() > 0
	end)
	makeButton(ActionTextures.Starred[1], ActionTextures.Starred[2], "Starred", true, function()
		return true
	end)
end

do
	local optionCallback = {
		Modifiable = function(p1)
			for i = 1, #actionButtons do
				actionButtons[i].Obj.Visible = p1 and Option.Selectable
			end
			cancelReparentDrag()
		end,
		Selectable = function(p1)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = p1 and Option.Modifiable
			end
			cancelSelectDrag()
			Selection:Set({})
		end
	}

	SetOption_Bindable.OnInvoke = function(p1, p2)
		if optionCallback[p1] then
			Option[p1] = p2
			optionCallback[p1](p2)
		end
	end

	GetOption_Bindable.OnInvoke = function(p1)
		if p1 then
			return Option[p1]
		else
			local A = {}
			for B, C in next, Option do
				A[B] = C
			end
			return A
		end
	end
end

Connect(UserInputService.InputBegan, function(p1)
	local A = p1.KeyCode
	if A == Enum.KeyCode.LeftControl or A == Enum.KeyCode.LeftShift then
		HoldingCtrl = true
	end
end)

Connect(UserInputService.InputEnded, function(p1)
	local A = p1.KeyCode
	if A == Enum.KeyCode.LeftControl or A == Enum.KeyCode.LeftShift then
		HoldingCtrl = false
	end
end)

while not RbxApi  do
	RbxApi = GetApi_Bindable:Invoke()
	wait()
end

Connect(explorerFilter.FocusLost, function(p1)
	if p1 then
		rawUpdateList()
	end
end)

CurrentInsertObjectWindow = CreateInsertObjectMenu(GetClasses(), "", false, function(option)
	CurrentInsertObjectWindow.Visible = false
	for _, ArrayItem in ipairs(Selection:Get()) do
		pcall(function()
			Instance_new(option, ArrayItem)
		end)
	end
	DestroyRightClick()
end)]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX7382EE28AC764D41BAF56DE663E4ECB3">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<float name="BackgroundTransparency">0.100000001</float>
					<Color3 name="BorderColor3">
						<R>0.0784313753</R>
						<G>0</G>
						<B>0.0784313753</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">SettingsPanel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>300</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBXFAFA94CF20174DADB36B14751A373048">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.0784313753</R>
							<G>0.0784313753</G>
							<B>0.0784313753</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.0784313753</R>
							<G>0.0784313753</G>
							<B>0.0784313753</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Header</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>17</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX33AEC7873BCF4EB3BCA5780C66E70C1A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">16</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-4</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Settings</string>
							<Color3 name="TextColor3">
								<R>0.980392158</R>
								<G>0.980392158</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="BindableFunction" referent="RBXA2A247A7204D41659CC611B33B5DC2BB">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetSetting</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBXB69031DBD3824D5D9BD8DF6A8EC1840B">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">SettingTemplate</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>18</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX38C83DC525F44ED8ACBBD98A96C28648">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">16</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">SName</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-20</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">SettingName</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXCB489D2D05AE42638A74438091AADE12">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Status</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>15</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Off</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX9A2965A6C8FF4230843D6A52DB6800B8">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.862745166</R>
								<G>0.862745166</G>
								<B>0.862745166</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Change</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>15</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX5CA9E1E9D553462790B9DB6A21A96083">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0</R>
									<G>0.576470613</G>
									<B>0.862745166</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">OnBar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBX6B1602BF47404BDA8817F712E68A4357">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>10</O>
									</UDim>
									<string name="Name"></string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBXAC49F43E08A84404952B64A3CA189DF7">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Bar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-2</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>19</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBX24E31D019367413292E32CB68DBA057D">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>10</O>
									</UDim>
									<string name="Name"></string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
						<Item class="UICorner" referent="RBXA0CC6FE09316472D99525177FA84BA8D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>10</O>
								</UDim>
								<string name="Name"></string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX3BD3A7471AA643F1A373D42EBC0B5220">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.0784313753</R>
							<G>0.0784313753</G>
							<B>0.0784313753</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">SettingList</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>17</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-17</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX1FCCE3C439374F4D99E6576964D54105">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<float name="BackgroundTransparency">0.100000001</float>
					<Color3 name="BorderColor3">
						<R>0.749019623</R>
						<G>0.749019623</G>
						<B>0.749019623</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">RemoteDebugWindow</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">true</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>300</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBXD0E0C4198C57449CA6D4BBAEAACCB0A0">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.0784313753</R>
							<G>0.0784313753</G>
							<B>0.0784313753</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.58431375</R>
							<G>0.58431375</G>
							<B>0.58431375</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Header</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>17</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX2DCA58C89A95470FA9E98668AEA79BB0">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-4</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Remote Debugger</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="BindableFunction" referent="RBX61EAEECB98E04551A9580ABECB98AF59">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetSetting</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXA7668D5658FB4649B027F1DE50664329">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Desc</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>40</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Have fun with remotes</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">32</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXA99D240B83684763B17F737295D04D78">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.196078435</R>
						<G>0.196078435</G>
						<B>0.215686277</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">IntroFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>30</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>301</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="Frame" referent="RBX0B9085A1959742CF8C431E1698792E9E">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.196078435</R>
							<G>0.196078435</G>
							<B>0.215686277</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Main</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>-30</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>90</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="ImageLabel" referent="RBXCAC26FB5FF0B48FABCB0CCB9A67F702E">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.196078435</R>
							<G>0.196078435</G>
							<B>0.215686277</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>rbxassetid://1513966937</url></Content>
						<Color3 name="ImageColor3">
							<R>0.196078435</R>
							<G>0.196078435</G>
							<B>0.215686277</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<int name="LayoutOrder">0</int>
						<string name="Name">Slant</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>-30</XO>
							<YS>0</YS>
							<YO>90</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">180</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="ImageLabel" referent="RBX6D1B567132F94A17A4ED40F8EA8A313D">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>rbxassetid://483437370</url></Content>
						<Color3 name="ImageColor3">
							<R>0.960784376</R>
							<G>0.960784376</G>
							<B>0.960784376</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<int name="LayoutOrder">0</int>
						<string name="Name">Sad</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>50</XO>
							<YS>1</YS>
							<YO>-250</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Visible">false</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX4A176E47351143F6A0F39B9997D4021D">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Creator</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>80</XO>
							<YS>0</YS>
							<YO>300</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>140</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"><![CDATA[Created by: Moon
Edited by: wally, ic3, Yarios]]></string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">18</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXAA572584E00B4443903CE2D2D945D0B3">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>150</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Dex | Beta</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">60</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX7806EB3EC2904B1E98C74DF2713B1556">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Version</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>210</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Synapse Edition</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">28</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXBC07AB32458045D2A7897FA7951C74C8">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">USID</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">USID: 0_?????</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">20</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX4BE03A9A86A846C894E9CED67F743BC2">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<float name="BackgroundTransparency">0.100000001</float>
					<Color3 name="BorderColor3">
						<R>0.58431375</R>
						<G>0.58431375</G>
						<B>0.58431375</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">About</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>300</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="TextLabel" referent="RBXBADEEBCD853D48E09B67502DE9E7F9D3">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Creator</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>300</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"><![CDATA[Created by: Moon
Edited by: wally, ic3, Yarios]]></string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">18</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXDB134E1015034AEDB6FC9D5671D7CD8A">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Title</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>150</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Dex | Beta</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">60</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX668EF1985B8643878D197888F100FFCE">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Version</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>210</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Synapse Edition</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">28</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXE734C18D354B438ABBC29E65BC97F265">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">USID</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">USID: 0_?????</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">20</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXADCE0D41692449F7B511CDF306B228F4">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.145098045</R>
						<G>0.145098045</G>
						<B>0.164705887</B>
					</Color3>
					<float name="BackgroundTransparency">0.100000001</float>
					<Color3 name="BorderColor3">
						<R>0.749019623</R>
						<G>0.749019623</G>
						<B>0.749019623</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">SaveMapWindow</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>300</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBXCDBDEDE08E1944CBA0A1660D00937DC0">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.0784313753</R>
							<G>0.0784313753</G>
							<B>0.0784313753</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.58431375</R>
							<G>0.58431375</G>
							<B>0.58431375</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Header</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>17</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX2CA5137DED3E4F6C81798A445AD90B38">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">16</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-4</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Map Downloader</string>
							<Color3 name="TextColor3">
								<R>0.980392158</R>
								<G>0.980392158</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX62E1D93179B643A78401E91247E50E59">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">MapSettings</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>38</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>240</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX9674026A1C89441A88F6B17559EB731A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Scripts</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXB34EF8BCB07C4CE3A43630F37592BC1B">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">SName</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-20</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Save Scripts</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX1DCDBA4821C8421B8D79AA9DEB836CC1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Status</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>60</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">On</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX672F7E6B81A343108EEFDA31C1638864">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.862745166</R>
									<G>0.862745166</G>
									<B>0.862745166</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Change</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>40</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBXE0C74A649C18493293B07E9600B50BDE">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0.576470613</G>
										<B>0.862745166</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">OnBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UICorner" referent="RBXC5AFD5C848CE4B94BB0CB324B61F92AC">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>10</O>
										</UDim>
										<string name="Name"></string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX32175048FF644527970CE7F3AF16477A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">Bar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>32</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>19</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UICorner" referent="RBXA108CBC066FC4388B8ADD4B61061B8A7">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>10</O>
										</UDim>
										<string name="Name"></string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="UICorner" referent="RBX83431C1D301B4010BB1C30941E1C518A">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>10</O>
									</UDim>
									<string name="Name"></string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="UIListLayout" referent="RBX0138C529D3694592A36FBBCBA9CE3C1B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<token name="FillDirection">1</token>
							<token name="HorizontalAlignment">1</token>
							<string name="Name">UIListLayout</string>
							<UDim name="Padding">
								<S>0</S>
								<O>0</O>
							</UDim>
							<token name="SortOrder">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<token name="VerticalAlignment">1</token>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX70B87DC979424AFF91C354996C365876">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ScriptCache</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX0C039D2376E74E46AD8C4705D94645E1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">SName</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-20</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Script Cache</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX6C63B0592C194F5CA69961BFA91FA985">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Status</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>60</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">On</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">0.75</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX11AE48373C494737851D98CB6D86DA22">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.862745166</R>
									<G>0.862745166</G>
									<B>0.862745166</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Change</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>40</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBXB3853DABE58044E1A936000D36AB8F3E">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0.576470613</G>
										<B>0.862745166</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">OnBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UICorner" referent="RBXA3BAA6CE07884AA08B95AD297BDDE4D9">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>10</O>
										</UDim>
										<string name="Name"></string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX144B17120A874699ABDDA6CCED6B3524">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">Bar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>32</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>19</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UICorner" referent="RBX28DF2F986B81467499216414C044F507">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>10</O>
										</UDim>
										<string name="Name"></string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="UICorner" referent="RBX637866A80EA443A996E6E629E2B9DCFE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>10</O>
									</UDim>
									<string name="Name"></string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBXFBC247BF71AA4330998CEC311AD0B13F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.639215708</R>
							<G>0.635294139</G>
							<B>0.647058845</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Save Settings</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>17</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Save Settings</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">18</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX9360D70FD9A748E09FE189E5E43957A3">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.145098045</R>
							<G>0.145098045</G>
							<B>0.164705887</B>
						</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">
							<R>0.58431375</R>
							<G>0.58431375</G>
							<B>0.58431375</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bottom</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-50</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX87326E733C43491A95040FE7CC41D842">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">5</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">After the map saves, open a new place on studio, then right click Lighting and &quot;Insert from file...&quot;, then select your file and run the unpacker script inside the folder.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX36DA23FB7B5B4B5D81B54DF3B7994174">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.941176534</R>
							<G>0.941176534</G>
							<B>0.941176534</B>
						</Color3>
						<float name="BackgroundTransparency">0.800000012</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">16</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">Save</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-80</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Save</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">18</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">0.75</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX10A90CE0B1284409B46A3B0256C400F4">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0.800000012</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">CopyList</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>37</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>163</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX86974CF66C294ED7B5BDEC4C9E1AED82">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Entry</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>22</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX12B74C520FE94CB690906783ADFD4B28">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.600000024</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Change</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="TextLabel" referent="RBX5DEB54DA20444E31B83C091CC12EE47D">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.380392194</R>
									<G>0.380392194</G>
									<B>0.380392194</B>
								</Color3>
								<float name="BackgroundTransparency">0.400000006</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">enabled</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>3</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>14</XO>
									<YS>0</YS>
									<YO>14</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBXDF702DE410684BCFB3D215EC80BB4BB6">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.639215708</R>
								<G>0.635294139</G>
								<B>0.647058845</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Info</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Workspace</string>
							<Color3 name="TextColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBX0695B51E5F614F2890CA3A0EB8BDF950">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.941176534</R>
							<G>0.941176534</G>
							<B>0.941176534</B>
						</Color3>
						<float name="BackgroundTransparency">0.600000024</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClearTextOnFocus">true</bool>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">FileName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-105</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">PlaceName</string>
						<Color3 name="TextColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">18</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX442A38BA955546A99BDA9C006508C7BE">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Bindables</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="BindableFunction" referent="RBXB4F03C302CAD48B6ACD3F9B7F9AEF4C1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetOption</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX52F4D63C63784444AF08AB7BD103DBA9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetPrint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX9CBD0A2461B84CD78947E398C92CFF0C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetSelection</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX3B7DB1FC18B44559B32A9464848B1697">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SetOption</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX6A6250BAAAD14F85A825D3D7E187AB6F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SetSelection</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableEvent" referent="RBX126FEBEA854A4833BEEFC3EE7A8EB799">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SelectionChanged</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX4D15609914694A94AE820DDDF2F7135F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetApi</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX87BFCB6368E24250B24601493AF6D3C1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetAwaiting</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableEvent" referent="RBX34AFAC27D58D4FDD8089EE6DAE4C768F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SetAwaiting</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="BindableFunction" referent="RBX57590E9B41F5482C975A45FE828D5571">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">GetSpecials</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
</roblox>
